#line 1 "delay.compute_35.cudafe1.cpp"
#line 1 "E:/github/whippletree/delay.cu"
#pragma section("__nv_managed_data__")
#line 1 "E:/github/whippletree/delay.cu"
static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt                 : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}
#line 1 "E:/github/whippletree/delay.cu"
#line 1 "E:/github/whippletree/delay.cu"
#line 62 "E:/CudaToolKit/include\\cuda_runtime.h"
#pragma warning(push)
#pragma warning(disable: 4820)
#line 717 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\sal.h"
#pragma region Input Buffer SAL 1 compatibility macros
#line 1481 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\sal.h"
#pragma endregion Input Buffer SAL 1 compatibility macros
#line 72 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
#pragma pack ( push, 8 )
#line 28 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\vadefs.h"
#pragma pack ( push, 8 )
#line 50 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\vadefs.h"
extern "C" { typedef unsigned __w64 uintptr_t; }
#line 59 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\vadefs.h"
extern "C" { typedef char *va_list; }
#line 144 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\vadefs.h"
#pragma pack ( pop )
#line 496 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
typedef unsigned __w64 size_t; 
#line 1 "E:/CudaToolKit/include\\crt/host_runtime.h"


































































#line 68 "E:/CudaToolKit/include\\crt/host_runtime.h"

#line 1 "E:/CudaToolKit/include\\builtin_types.h"























































#line 1 "e:\\cudatoolkit\\include\\device_types.h"




















































#line 1 "e:\\cudatoolkit\\include\\host_defines.h"


























































































#line 92 "e:\\cudatoolkit\\include\\host_defines.h"










#line 103 "e:\\cudatoolkit\\include\\host_defines.h"








































#line 144 "e:\\cudatoolkit\\include\\host_defines.h"














#line 161 "e:\\cudatoolkit\\include\\host_defines.h"











#line 173 "e:\\cudatoolkit\\include\\host_defines.h"






#line 181 "e:\\cudatoolkit\\include\\host_defines.h"



#line 185 "e:\\cudatoolkit\\include\\host_defines.h"













        














#line 214 "e:\\cudatoolkit\\include\\host_defines.h"
























#line 239 "e:\\cudatoolkit\\include\\host_defines.h"


#line 242 "e:\\cudatoolkit\\include\\host_defines.h"
#line 54 "e:\\cudatoolkit\\include\\device_types.h"







enum  cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};

#line 70 "e:\\cudatoolkit\\include\\device_types.h"
#line 57 "E:/CudaToolKit/include\\builtin_types.h"


#line 1 "e:\\cudatoolkit\\include\\driver_types.h"




















































#line 1 "e:\\cudatoolkit\\include\\host_defines.h"
















































































































































































































































#line 242 "e:\\cudatoolkit\\include\\host_defines.h"
#line 54 "e:\\cudatoolkit\\include\\driver_types.h"






















































































#line 141 "e:\\cudatoolkit\\include\\driver_types.h"










enum  cudaError
{
    




    cudaSuccess                           =      0,
  
    



    cudaErrorMissingConfiguration         =      1,
  
    



    cudaErrorMemoryAllocation             =      2,
  
    



    cudaErrorInitializationError          =      3,
  
    







    cudaErrorLaunchFailure                =      4,
  
    






    cudaErrorPriorLaunchFailure           =      5,
  
    







    cudaErrorLaunchTimeout                =      6,
  
    






    cudaErrorLaunchOutOfResources         =      7,
  
    



    cudaErrorInvalidDeviceFunction        =      8,
  
    






    cudaErrorInvalidConfiguration         =      9,
  
    



    cudaErrorInvalidDevice                =     10,
  
    



    cudaErrorInvalidValue                 =     11,
  
    



    cudaErrorInvalidPitchValue            =     12,
  
    



    cudaErrorInvalidSymbol                =     13,
  
    


    cudaErrorMapBufferObjectFailed        =     14,
  
    


    cudaErrorUnmapBufferObjectFailed      =     15,
  
    



    cudaErrorInvalidHostPointer           =     16,
  
    



    cudaErrorInvalidDevicePointer         =     17,
  
    



    cudaErrorInvalidTexture               =     18,
  
    



    cudaErrorInvalidTextureBinding        =     19,
  
    




    cudaErrorInvalidChannelDescriptor     =     20,
  
    



    cudaErrorInvalidMemcpyDirection       =     21,
  
    







    cudaErrorAddressOfConstant            =     22,
  
    






    cudaErrorTextureFetchFailed           =     23,
  
    






    cudaErrorTextureNotBound              =     24,
  
    






    cudaErrorSynchronizationError         =     25,
  
    



    cudaErrorInvalidFilterSetting         =     26,
  
    



    cudaErrorInvalidNormSetting           =     27,
  
    





    cudaErrorMixedDeviceExecution         =     28,
  
    




    cudaErrorCudartUnloading              =     29,
  
    


    cudaErrorUnknown                      =     30,

    





    cudaErrorNotYetImplemented            =     31,
  
    






    cudaErrorMemoryValueTooLarge          =     32,
  
    




    cudaErrorInvalidResourceHandle        =     33,
  
    





    cudaErrorNotReady                     =     34,
  
    




    cudaErrorInsufficientDriver           =     35,
  
    










    cudaErrorSetOnActiveProcess           =     36,
  
    



    cudaErrorInvalidSurface               =     37,
  
    



    cudaErrorNoDevice                     =     38,
  
    



    cudaErrorECCUncorrectable             =     39,
  
    


    cudaErrorSharedObjectSymbolNotFound   =     40,
  
    


    cudaErrorSharedObjectInitFailed       =     41,
  
    



    cudaErrorUnsupportedLimit             =     42,
  
    



    cudaErrorDuplicateVariableName        =     43,
  
    



    cudaErrorDuplicateTextureName         =     44,
  
    



    cudaErrorDuplicateSurfaceName         =     45,
  
    







    cudaErrorDevicesUnavailable           =     46,
  
    


    cudaErrorInvalidKernelImage           =     47,
  
    





    cudaErrorNoKernelImageForDevice       =     48,
  
    










    cudaErrorIncompatibleDriverContext    =     49,
      
    




    cudaErrorPeerAccessAlreadyEnabled     =     50,
    
    




    cudaErrorPeerAccessNotEnabled         =     51,
    
    



    cudaErrorDeviceAlreadyInUse           =     54,

    




    cudaErrorProfilerDisabled             =     55,

    





    cudaErrorProfilerNotInitialized       =     56,

    




    cudaErrorProfilerAlreadyStarted       =     57,

    




     cudaErrorProfilerAlreadyStopped       =    58,

    





    cudaErrorAssert                        =    59,
  
    




    cudaErrorTooManyPeers                 =     60,
  
    



    cudaErrorHostMemoryAlreadyRegistered  =     61,
        
    



    cudaErrorHostMemoryNotRegistered      =     62,

    


    cudaErrorOperatingSystem              =     63,

    



    cudaErrorPeerAccessUnsupported        =     64,

    




    cudaErrorLaunchMaxDepthExceeded       =     65,

    





    cudaErrorLaunchFileScopedTex          =     66,

    





    cudaErrorLaunchFileScopedSurf         =     67,

    












    cudaErrorSyncDepthExceeded            =     68,

    









    cudaErrorLaunchPendingCountExceeded   =     69,
    
    


    cudaErrorNotPermitted                 =     70,

    



    cudaErrorNotSupported                 =     71,

    






    cudaErrorHardwareStackError           =     72,

    





    cudaErrorIllegalInstruction           =     73,

    






    cudaErrorMisalignedAddress            =     74,

    








    cudaErrorInvalidAddressSpace          =     75,

    





    cudaErrorInvalidPc                    =     76,

    





    cudaErrorIllegalAddress               =     77,

    



    cudaErrorInvalidPtx                   =     78,

    


    cudaErrorInvalidGraphicsContext       =     79,


    


    cudaErrorStartupFailure               =   0x7f,

    





    cudaErrorApiFailureBase               =  10000
};




enum  cudaChannelFormatKind
{
    cudaChannelFormatKindSigned           =   0,      
    cudaChannelFormatKindUnsigned         =   1,      
    cudaChannelFormatKindFloat            =   2,      
    cudaChannelFormatKindNone             =   3       
};




struct  cudaChannelFormatDesc
{
    int                        x; 
    int                        y; 
    int                        z; 
    int                        w; 
    enum cudaChannelFormatKind f; 
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum  cudaMemoryType
{
    cudaMemoryTypeHost   = 1, 
    cudaMemoryTypeDevice = 2  
};




enum  cudaMemcpyKind
{
    cudaMemcpyHostToHost          =   0,      
    cudaMemcpyHostToDevice        =   1,      
    cudaMemcpyDeviceToHost        =   2,      
    cudaMemcpyDeviceToDevice      =   3,      
    cudaMemcpyDefault             =   4       
};






struct  cudaPitchedPtr
{
    void   *ptr;      
    size_t  pitch;    
    size_t  xsize;    
    size_t  ysize;    
};






struct  cudaExtent
{
    size_t width;     
    size_t height;    
    size_t depth;     
};






struct  cudaPos
{
    size_t x;     
    size_t y;     
    size_t z;     
};




struct  cudaMemcpy3DParms
{
    cudaArray_t            srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
  
    cudaArray_t            dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
  
    struct cudaExtent      extent;    
    enum cudaMemcpyKind    kind;      
};




struct  cudaMemcpy3DPeerParms
{
    cudaArray_t            srcArray;  
    struct cudaPos         srcPos;    
    struct cudaPitchedPtr  srcPtr;    
    int                    srcDevice; 
  
    cudaArray_t            dstArray;  
    struct cudaPos         dstPos;    
    struct cudaPitchedPtr  dstPtr;    
    int                    dstDevice; 
  
    struct cudaExtent      extent;    
};




struct cudaGraphicsResource;




enum  cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone             = 0,  
    cudaGraphicsRegisterFlagsReadOnly         = 1,   
    cudaGraphicsRegisterFlagsWriteDiscard     = 2,  
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,  
    cudaGraphicsRegisterFlagsTextureGather    = 8   
};




enum  cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone         = 0,  
    cudaGraphicsMapFlagsReadOnly     = 1,  
    cudaGraphicsMapFlagsWriteDiscard = 2   
};




enum  cudaGraphicsCubeFace 
{
    cudaGraphicsCubeFacePositiveX = 0x00, 
    cudaGraphicsCubeFaceNegativeX = 0x01, 
    cudaGraphicsCubeFacePositiveY = 0x02, 
    cudaGraphicsCubeFaceNegativeY = 0x03, 
    cudaGraphicsCubeFacePositiveZ = 0x04, 
    cudaGraphicsCubeFaceNegativeZ = 0x05  
};




enum  cudaResourceType
{
    cudaResourceTypeArray          = 0x00, 
    cudaResourceTypeMipmappedArray = 0x01, 
    cudaResourceTypeLinear         = 0x02, 
    cudaResourceTypePitch2D        = 0x03  
};




enum  cudaResourceViewFormat
{
    cudaResViewFormatNone                      = 0x00, 
    cudaResViewFormatUnsignedChar1             = 0x01, 
    cudaResViewFormatUnsignedChar2             = 0x02, 
    cudaResViewFormatUnsignedChar4             = 0x03, 
    cudaResViewFormatSignedChar1               = 0x04, 
    cudaResViewFormatSignedChar2               = 0x05, 
    cudaResViewFormatSignedChar4               = 0x06, 
    cudaResViewFormatUnsignedShort1            = 0x07, 
    cudaResViewFormatUnsignedShort2            = 0x08, 
    cudaResViewFormatUnsignedShort4            = 0x09, 
    cudaResViewFormatSignedShort1              = 0x0a, 
    cudaResViewFormatSignedShort2              = 0x0b, 
    cudaResViewFormatSignedShort4              = 0x0c, 
    cudaResViewFormatUnsignedInt1              = 0x0d, 
    cudaResViewFormatUnsignedInt2              = 0x0e, 
    cudaResViewFormatUnsignedInt4              = 0x0f, 
    cudaResViewFormatSignedInt1                = 0x10, 
    cudaResViewFormatSignedInt2                = 0x11, 
    cudaResViewFormatSignedInt4                = 0x12, 
    cudaResViewFormatHalf1                     = 0x13, 
    cudaResViewFormatHalf2                     = 0x14, 
    cudaResViewFormatHalf4                     = 0x15, 
    cudaResViewFormatFloat1                    = 0x16, 
    cudaResViewFormatFloat2                    = 0x17, 
    cudaResViewFormatFloat4                    = 0x18, 
    cudaResViewFormatUnsignedBlockCompressed1  = 0x19, 
    cudaResViewFormatUnsignedBlockCompressed2  = 0x1a, 
    cudaResViewFormatUnsignedBlockCompressed3  = 0x1b, 
    cudaResViewFormatUnsignedBlockCompressed4  = 0x1c, 
    cudaResViewFormatSignedBlockCompressed4    = 0x1d, 
    cudaResViewFormatUnsignedBlockCompressed5  = 0x1e, 
    cudaResViewFormatSignedBlockCompressed5    = 0x1f, 
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20, 
    cudaResViewFormatSignedBlockCompressed6H   = 0x21, 
    cudaResViewFormatUnsignedBlockCompressed7  = 0x22  
};




struct  cudaResourceDesc {
	enum cudaResourceType resType;             
	
	union {
		struct {
			cudaArray_t array;                 
		} array;
        struct {
            cudaMipmappedArray_t mipmap;       
        } mipmap;
		struct {
			void *devPtr;                      
			struct cudaChannelFormatDesc desc; 
			size_t sizeInBytes;                
		} linear;
		struct {
			void *devPtr;                      
			struct cudaChannelFormatDesc desc; 
			size_t width;                      
			size_t height;                     
			size_t pitchInBytes;               
		} pitch2D;
	} res;
};




struct  cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;           
    size_t                      width;            
    size_t                      height;           
    size_t                      depth;            
    unsigned int                firstMipmapLevel; 
    unsigned int                lastMipmapLevel;  
    unsigned int                firstLayer;       
    unsigned int                lastLayer;        
};




struct  cudaPointerAttributes
{
    



    enum cudaMemoryType memoryType;

    








    int device;

    



    void *devicePointer;

    



    void *hostPointer;

    


    int isManaged;
};




struct  cudaFuncAttributes
{
   




   size_t sharedSizeBytes;

   



   size_t constSizeBytes;

   


   size_t localSizeBytes;

   




   int maxThreadsPerBlock;

   


   int numRegs;

   




   int ptxVersion;

   




   int binaryVersion;

   



   int cacheModeCA;
};




enum  cudaFuncCache
{
    cudaFuncCachePreferNone   = 0,    
    cudaFuncCachePreferShared = 1,    
    cudaFuncCachePreferL1     = 2,    
    cudaFuncCachePreferEqual  = 3     
};





enum  cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault   = 0,
    cudaSharedMemBankSizeFourByte  = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum  cudaComputeMode
{
    cudaComputeModeDefault          = 0,  
    cudaComputeModeExclusive        = 1,  
    cudaComputeModeProhibited       = 2,  
    cudaComputeModeExclusiveProcess = 3   
};




enum  cudaLimit
{
    cudaLimitStackSize                    = 0x00, 
    cudaLimitPrintfFifoSize               = 0x01, 
    cudaLimitMallocHeapSize               = 0x02, 
    cudaLimitDevRuntimeSyncDepth          = 0x03, 
    cudaLimitDevRuntimePendingLaunchCount = 0x04  
};




enum  cudaOutputMode
{
    cudaKeyValuePair    = 0x00, 
    cudaCSV             = 0x01  
};




enum  cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock             = 1,  
    cudaDevAttrMaxBlockDimX                   = 2,  
    cudaDevAttrMaxBlockDimY                   = 3,  
    cudaDevAttrMaxBlockDimZ                   = 4,  
    cudaDevAttrMaxGridDimX                    = 5,  
    cudaDevAttrMaxGridDimY                    = 6,  
    cudaDevAttrMaxGridDimZ                    = 7,  
    cudaDevAttrMaxSharedMemoryPerBlock        = 8,  
    cudaDevAttrTotalConstantMemory            = 9,  
    cudaDevAttrWarpSize                       = 10, 
    cudaDevAttrMaxPitch                       = 11, 
    cudaDevAttrMaxRegistersPerBlock           = 12, 
    cudaDevAttrClockRate                      = 13, 
    cudaDevAttrTextureAlignment               = 14, 
    cudaDevAttrGpuOverlap                     = 15, 
    cudaDevAttrMultiProcessorCount            = 16, 
    cudaDevAttrKernelExecTimeout              = 17, 
    cudaDevAttrIntegrated                     = 18, 
    cudaDevAttrCanMapHostMemory               = 19, 
    cudaDevAttrComputeMode                    = 20, 
    cudaDevAttrMaxTexture1DWidth              = 21, 
    cudaDevAttrMaxTexture2DWidth              = 22, 
    cudaDevAttrMaxTexture2DHeight             = 23, 
    cudaDevAttrMaxTexture3DWidth              = 24, 
    cudaDevAttrMaxTexture3DHeight             = 25, 
    cudaDevAttrMaxTexture3DDepth              = 26, 
    cudaDevAttrMaxTexture2DLayeredWidth       = 27, 
    cudaDevAttrMaxTexture2DLayeredHeight      = 28, 
    cudaDevAttrMaxTexture2DLayeredLayers      = 29, 
    cudaDevAttrSurfaceAlignment               = 30, 
    cudaDevAttrConcurrentKernels              = 31, 
    cudaDevAttrEccEnabled                     = 32, 
    cudaDevAttrPciBusId                       = 33, 
    cudaDevAttrPciDeviceId                    = 34, 
    cudaDevAttrTccDriver                      = 35, 
    cudaDevAttrMemoryClockRate                = 36, 
    cudaDevAttrGlobalMemoryBusWidth           = 37, 
    cudaDevAttrL2CacheSize                    = 38, 
    cudaDevAttrMaxThreadsPerMultiProcessor    = 39, 
    cudaDevAttrAsyncEngineCount               = 40, 
    cudaDevAttrUnifiedAddressing              = 41,     
    cudaDevAttrMaxTexture1DLayeredWidth       = 42, 
    cudaDevAttrMaxTexture1DLayeredLayers      = 43, 
    cudaDevAttrMaxTexture2DGatherWidth        = 45, 
    cudaDevAttrMaxTexture2DGatherHeight       = 46, 
    cudaDevAttrMaxTexture3DWidthAlt           = 47, 
    cudaDevAttrMaxTexture3DHeightAlt          = 48, 
    cudaDevAttrMaxTexture3DDepthAlt           = 49, 
    cudaDevAttrPciDomainId                    = 50, 
    cudaDevAttrTexturePitchAlignment          = 51, 
    cudaDevAttrMaxTextureCubemapWidth         = 52, 
    cudaDevAttrMaxTextureCubemapLayeredWidth  = 53, 
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54, 
    cudaDevAttrMaxSurface1DWidth              = 55, 
    cudaDevAttrMaxSurface2DWidth              = 56, 
    cudaDevAttrMaxSurface2DHeight             = 57, 
    cudaDevAttrMaxSurface3DWidth              = 58, 
    cudaDevAttrMaxSurface3DHeight             = 59, 
    cudaDevAttrMaxSurface3DDepth              = 60, 
    cudaDevAttrMaxSurface1DLayeredWidth       = 61, 
    cudaDevAttrMaxSurface1DLayeredLayers      = 62, 
    cudaDevAttrMaxSurface2DLayeredWidth       = 63, 
    cudaDevAttrMaxSurface2DLayeredHeight      = 64, 
    cudaDevAttrMaxSurface2DLayeredLayers      = 65, 
    cudaDevAttrMaxSurfaceCubemapWidth         = 66, 
    cudaDevAttrMaxSurfaceCubemapLayeredWidth  = 67, 
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68, 
    cudaDevAttrMaxTexture1DLinearWidth        = 69, 
    cudaDevAttrMaxTexture2DLinearWidth        = 70, 
    cudaDevAttrMaxTexture2DLinearHeight       = 71, 
    cudaDevAttrMaxTexture2DLinearPitch        = 72, 
    cudaDevAttrMaxTexture2DMipmappedWidth     = 73, 
    cudaDevAttrMaxTexture2DMipmappedHeight    = 74, 
    cudaDevAttrComputeCapabilityMajor         = 75,  
    cudaDevAttrComputeCapabilityMinor         = 76, 
    cudaDevAttrMaxTexture1DMipmappedWidth     = 77, 
    cudaDevAttrStreamPrioritiesSupported      = 78, 
    cudaDevAttrGlobalL1CacheSupported         = 79, 
    cudaDevAttrLocalL1CacheSupported          = 80, 
    cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81, 
    cudaDevAttrMaxRegistersPerMultiprocessor  = 82, 
    cudaDevAttrManagedMemory                  = 83, 
    cudaDevAttrIsMultiGpuBoard                = 84, 
    cudaDevAttrMultiGpuBoardGroupID           = 85  
};




struct  cudaDeviceProp
{
    char   name[256];                  
    size_t totalGlobalMem;             
    size_t sharedMemPerBlock;          
    int    regsPerBlock;               
    int    warpSize;                   
    size_t memPitch;                   
    int    maxThreadsPerBlock;         
    int    maxThreadsDim[3];           
    int    maxGridSize[3];             
    int    clockRate;                  
    size_t totalConstMem;              
    int    major;                      
    int    minor;                      
    size_t textureAlignment;           
    size_t texturePitchAlignment;      
    int    deviceOverlap;              
    int    multiProcessorCount;        
    int    kernelExecTimeoutEnabled;   
    int    integrated;                 
    int    canMapHostMemory;           
    int    computeMode;                
    int    maxTexture1D;               
    int    maxTexture1DMipmap;         
    int    maxTexture1DLinear;         
    int    maxTexture2D[2];            
    int    maxTexture2DMipmap[2];      
    int    maxTexture2DLinear[3];      
    int    maxTexture2DGather[2];      
    int    maxTexture3D[3];            
    int    maxTexture3DAlt[3];         
    int    maxTextureCubemap;          
    int    maxTexture1DLayered[2];     
    int    maxTexture2DLayered[3];     
    int    maxTextureCubemapLayered[2];
    int    maxSurface1D;               
    int    maxSurface2D[2];            
    int    maxSurface3D[3];            
    int    maxSurface1DLayered[2];     
    int    maxSurface2DLayered[3];     
    int    maxSurfaceCubemap;          
    int    maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;           
    int    concurrentKernels;          
    int    ECCEnabled;                 
    int    pciBusID;                   
    int    pciDeviceID;                
    int    pciDomainID;                
    int    tccDriver;                  
    int    asyncEngineCount;           
    int    unifiedAddressing;          
    int    memoryClockRate;            
    int    memoryBusWidth;             
    int    l2CacheSize;                
    int    maxThreadsPerMultiProcessor;
    int    streamPrioritiesSupported;  
    int    globalL1CacheSupported;     
    int    localL1CacheSupported;      
    size_t sharedMemPerMultiprocessor; 
    int    regsPerMultiprocessor;      
    int    managedMemory;              
    int    isMultiGpuBoard;            
    int    multiGpuBoardGroupID;       
};











































































typedef  struct  cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef  struct  cudaIpcMemHandle_st 
{
    char reserved[64];
}cudaIpcMemHandle_t;










typedef  enum cudaError cudaError_t;




typedef  struct CUstream_st *cudaStream_t;




typedef  struct CUevent_st *cudaEvent_t;




typedef  struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef  struct CUuuid_st cudaUUID_t;




typedef  enum cudaOutputMode cudaOutputMode_t;


 

#line 1451 "e:\\cudatoolkit\\include\\driver_types.h"

#line 60 "E:/CudaToolKit/include\\builtin_types.h"

#line 62 "E:/CudaToolKit/include\\builtin_types.h"
#line 1 "e:\\cudatoolkit\\include\\surface_types.h"


























































#line 1 "e:\\cudatoolkit\\include\\driver_types.h"









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1451 "e:\\cudatoolkit\\include\\driver_types.h"

#line 60 "e:\\cudatoolkit\\include\\surface_types.h"
























enum  cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero  = 0,    
    cudaBoundaryModeClamp = 1,    
    cudaBoundaryModeTrap  = 2     
};




enum   cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,     
    cudaFormatModeAuto = 1        
};




struct  surfaceReference
{
    


    struct cudaChannelFormatDesc channelDesc;
};




typedef  unsigned long long cudaSurfaceObject_t;


 

#line 120 "e:\\cudatoolkit\\include\\surface_types.h"
#line 63 "E:/CudaToolKit/include\\builtin_types.h"
#line 1 "e:\\cudatoolkit\\include\\texture_types.h"


























































#line 1 "e:\\cudatoolkit\\include\\driver_types.h"









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1451 "e:\\cudatoolkit\\include\\driver_types.h"

#line 60 "e:\\cudatoolkit\\include\\texture_types.h"
























enum  cudaTextureAddressMode
{
    cudaAddressModeWrap   = 0,    
    cudaAddressModeClamp  = 1,    
    cudaAddressModeMirror = 2,    
    cudaAddressModeBorder = 3     
};




enum  cudaTextureFilterMode
{
    cudaFilterModePoint  = 0,     
    cudaFilterModeLinear = 1      
};




enum  cudaTextureReadMode
{
    cudaReadModeElementType     = 0,  
    cudaReadModeNormalizedFloat = 1   
};




struct  textureReference
{
    


    int                          normalized;
    


    enum cudaTextureFilterMode   filterMode;
    


    enum cudaTextureAddressMode  addressMode[3];
    


    struct cudaChannelFormatDesc channelDesc;
    


    int                          sRGB;
    


    unsigned int                 maxAnisotropy;
    


    enum cudaTextureFilterMode   mipmapFilterMode;
    


    float                        mipmapLevelBias;
    


    float                        minMipmapLevelClamp;
    


    float                        maxMipmapLevelClamp;
    int                          __cudaReserved[15];
};




struct  cudaTextureDesc
{
    


    enum cudaTextureAddressMode addressMode[3];
    


    enum cudaTextureFilterMode  filterMode;
    


    enum cudaTextureReadMode    readMode;
    


    int                         sRGB;
    


    int                         normalizedCoords;
    


    unsigned int                maxAnisotropy;
    


    enum cudaTextureFilterMode  mipmapFilterMode;
    


    float                       mipmapLevelBias;
    


    float                       minMipmapLevelClamp;
    


    float                       maxMipmapLevelClamp;
};




typedef  unsigned long long cudaTextureObject_t;


 

#line 214 "e:\\cudatoolkit\\include\\texture_types.h"
#line 64 "E:/CudaToolKit/include\\builtin_types.h"
#line 1 "e:\\cudatoolkit\\include\\vector_types.h"




























































#line 1 "e:\\cudatoolkit\\include\\builtin_types.h"























































#line 1 "e:\\cudatoolkit\\include\\device_types.h"




































































#line 70 "e:\\cudatoolkit\\include\\device_types.h"
#line 57 "e:\\cudatoolkit\\include\\builtin_types.h"


#line 1 "e:\\cudatoolkit\\include\\driver_types.h"









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1451 "e:\\cudatoolkit\\include\\driver_types.h"

#line 60 "e:\\cudatoolkit\\include\\builtin_types.h"

#line 62 "e:\\cudatoolkit\\include\\builtin_types.h"
#line 1 "e:\\cudatoolkit\\include\\surface_types.h"






















































































































#line 120 "e:\\cudatoolkit\\include\\surface_types.h"
#line 63 "e:\\cudatoolkit\\include\\builtin_types.h"
#line 1 "e:\\cudatoolkit\\include\\texture_types.h"




















































































































































































































#line 214 "e:\\cudatoolkit\\include\\texture_types.h"
#line 64 "e:\\cudatoolkit\\include\\builtin_types.h"
#line 1 "e:\\cudatoolkit\\include\\vector_types.h"














































































































































































































































































































































































































































#line 432 "e:\\cudatoolkit\\include\\vector_types.h"
#line 65 "e:\\cudatoolkit\\include\\builtin_types.h"
#line 62 "e:\\cudatoolkit\\include\\vector_types.h"

#line 64 "e:\\cudatoolkit\\include\\vector_types.h"
#line 1 "e:\\cudatoolkit\\include\\host_defines.h"
















































































































































































































































#line 242 "e:\\cudatoolkit\\include\\host_defines.h"
#line 65 "e:\\cudatoolkit\\include\\vector_types.h"









#pragma warning(push)
#pragma warning(disable: 4201 4408)



















#line 97 "e:\\cudatoolkit\\include\\vector_types.h"

struct  char1
{
    signed char x;
};

struct  uchar1
{
    unsigned char x;
};


struct  __declspec(align(2)) char2
{
    signed char x, y;
};

struct  __declspec(align(2)) uchar2
{
    unsigned char x, y;
};

struct  char3
{
    signed char x, y, z;
};

struct  uchar3
{
    unsigned char x, y, z;
};

struct  __declspec(align(4)) char4
{
    signed char x, y, z, w;
};

struct  __declspec(align(4)) uchar4
{
    unsigned char x, y, z, w;
};

struct  short1
{
    short x;
};

struct  ushort1
{
    unsigned short x;
};

struct  __declspec(align(4)) short2
{
    short x, y;
};

struct  __declspec(align(4)) ushort2
{
    unsigned short x, y;
};

struct  short3
{
    short x, y, z;
};

struct  ushort3
{
    unsigned short x, y, z;
};

struct  short4 { union { struct { short x; short y; short z; short w; }; struct { long long int :1,:0; }; }; };
struct  ushort4 { union { struct { unsigned short x; unsigned short y; unsigned short z; unsigned short w; }; struct { long long int :1,:0; }; }; };

struct  int1
{
    int x;
};

struct  uint1
{
    unsigned int x;
};

struct  int2 { union { struct { int x; int y; }; struct { long long int :1,:0; }; }; };
struct  uint2 { union { struct { unsigned int x; unsigned int y; }; struct { long long int :1,:0; }; }; };

struct  int3
{
    int x, y, z;
};

struct  uint3
{
    unsigned int x, y, z;
};

struct   int4
{
    int x, y, z, w;
};

struct   uint4
{
    unsigned int x, y, z, w;
};

struct  long1
{
    long int x;
};

struct  ulong1
{
    unsigned long x;
};


struct  long2 { union { struct { long int x; long int y; }; struct { long long int :1,:0; }; }; };
struct  ulong2 { union { struct { unsigned long int x; unsigned long int y; }; struct { long long int :1,:0; }; }; };












#line 231 "e:\\cudatoolkit\\include\\vector_types.h"

struct  long3
{
    long int x, y, z;
};

struct  ulong3
{
    unsigned long int x, y, z;
};

struct   long4
{
    long int x, y, z, w;
};

struct   ulong4
{
    unsigned long int x, y, z, w;
};

struct  float1
{
    float x;
};















#line 273 "e:\\cudatoolkit\\include\\vector_types.h"

struct  float2 { union { struct { float x; float y; }; struct { long long int :1,:0; }; }; };

#line 277 "e:\\cudatoolkit\\include\\vector_types.h"


struct  float3
{
    float x, y, z;
};

struct   float4
{
    float x, y, z, w;
};

struct  longlong1
{
    long long int x;
};

struct  ulonglong1
{
    unsigned long long int x;
};

struct   longlong2
{
    long long int x, y;
};

struct   ulonglong2
{
    unsigned long long int x, y;
};

struct  longlong3
{
    long long int x, y, z;
};

struct  ulonglong3
{
    unsigned long long int x, y, z;
};

struct   longlong4
{
    long long int x, y, z ,w;
};

struct   ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct  double1
{
    double x;
};

struct   double2
{
    double x, y;
};

struct  double3
{
    double x, y, z;
};

struct   double4
{
    double x, y, z, w;
};



#pragma warning(pop)

#line 355 "e:\\cudatoolkit\\include\\vector_types.h"







typedef  struct char1 char1;
typedef  struct uchar1 uchar1;
typedef  struct char2 char2;
typedef  struct uchar2 uchar2;
typedef  struct char3 char3;
typedef  struct uchar3 uchar3;
typedef  struct char4 char4;
typedef  struct uchar4 uchar4;
typedef  struct short1 short1;
typedef  struct ushort1 ushort1;
typedef  struct short2 short2;
typedef  struct ushort2 ushort2;
typedef  struct short3 short3;
typedef  struct ushort3 ushort3;
typedef  struct short4 short4;
typedef  struct ushort4 ushort4;
typedef  struct int1 int1;
typedef  struct uint1 uint1;
typedef  struct int2 int2;
typedef  struct uint2 uint2;
typedef  struct int3 int3;
typedef  struct uint3 uint3;
typedef  struct int4 int4;
typedef  struct uint4 uint4;
typedef  struct long1 long1;
typedef  struct ulong1 ulong1;
typedef  struct long2 long2;
typedef  struct ulong2 ulong2;
typedef  struct long3 long3;
typedef  struct ulong3 ulong3;
typedef  struct long4 long4;
typedef  struct ulong4 ulong4;
typedef  struct float1 float1;
typedef  struct float2 float2;
typedef  struct float3 float3;
typedef  struct float4 float4;
typedef  struct longlong1 longlong1;
typedef  struct ulonglong1 ulonglong1;
typedef  struct longlong2 longlong2;
typedef  struct ulonglong2 ulonglong2;
typedef  struct longlong3 longlong3;
typedef  struct ulonglong3 ulonglong3;
typedef  struct longlong4 longlong4;
typedef  struct ulonglong4 ulonglong4;
typedef  struct double1 double1;
typedef  struct double2 double2;
typedef  struct double3 double3;
typedef  struct double4 double4;







struct  dim3
{
    unsigned int x, y, z;

      dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
      dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
      operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }
#line 425 "e:\\cudatoolkit\\include\\vector_types.h"
};

typedef  struct dim3 dim3;



#line 432 "e:\\cudatoolkit\\include\\vector_types.h"
#line 65 "e:\\cudatoolkit\\include\\builtin_types.h"
#line 70 "E:/CudaToolKit/include\\crt/host_runtime.h"
#line 1 "e:\\cudatoolkit\\include\\crt\\storage_class.h"










































#line 44 "e:\\cudatoolkit\\include\\crt\\storage_class.h"






#line 51 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 55 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 59 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 63 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 67 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 71 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 75 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 79 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 83 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 87 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 91 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 95 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 99 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 103 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 107 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 111 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 115 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 119 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 123 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 127 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 131 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 135 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 139 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 143 "e:\\cudatoolkit\\include\\crt\\storage_class.h"



#line 147 "e:\\cudatoolkit\\include\\crt\\storage_class.h"

#line 149 "e:\\cudatoolkit\\include\\crt\\storage_class.h"
#line 71 "E:/CudaToolKit/include\\crt/host_runtime.h"







































































































































































































#line 271 "E:/CudaToolKit/include\\crt/host_runtime.h"
#line 498 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
#line 503 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef size_t rsize_t; }
#line 512 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef int __w64 intptr_t; }
#line 530 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef int __w64 ptrdiff_t; }
#line 541 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef unsigned short wint_t; }
#line 542 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef unsigned short wctype_t; }
#line 563 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef int errno_t; }
#line 567 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef long __w64 __time32_t; }
#line 572 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef __int64 __time64_t; }
#line 580 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef __time64_t time_t; }
#line 637 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { __declspec(dllimport) void __cdecl _invalid_parameter_noinfo(); } 
#line 638 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl _invalid_parameter_noinfo_noreturn(); } 
#line 642 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { 
#line 641 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
__declspec(dllimport) __declspec(noreturn) void __cdecl 
#line 642 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
_invoke_watson(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); } 
#line 2072 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
struct threadlocaleinfostruct; 
#line 2073 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
struct threadmbcinfostruct; 
#line 2074 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef threadlocaleinfostruct *pthreadlocinfo; }
#line 2075 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef threadmbcinfostruct *pthreadmbcinfo; }
#line 2076 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
struct __lc_time_data; 
#line 2082 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef 
#line 2078 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
struct localeinfo_struct { 
#line 2080 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
pthreadlocinfo locinfo; 
#line 2081 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
pthreadmbcinfo mbcinfo; 
#line 2082 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
} _locale_tstruct, *_locale_t; }
#line 2090 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef 
#line 2085 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
struct localerefcount { 
#line 2086 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
char *locale; 
#line 2087 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
__wchar_t *wlocale; 
#line 2088 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
int *refcount; 
#line 2089 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
int *wrefcount; 
#line 2090 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
} locrefcount; }
#line 2111 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
extern "C" { typedef 
#line 2092 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
struct threadlocaleinfostruct { 
#line 2093 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
int refcount; 
#line 2094 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
unsigned lc_codepage; 
#line 2095 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
unsigned lc_collate_cp; 
#line 2096 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
unsigned lc_time_cp; 
#line 2097 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
locrefcount lc_category[6]; 
#line 2098 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
int lc_clike; 
#line 2099 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
int mb_cur_max; 
#line 2100 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
int *lconv_intl_refcount; 
#line 2101 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
int *lconv_num_refcount; 
#line 2102 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
int *lconv_mon_refcount; 
#line 2103 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
struct lconv *lconv; 
#line 2104 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
int *ctype1_refcount; 
#line 2105 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
unsigned short *ctype1; 
#line 2106 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
const unsigned short *pctype; 
#line 2107 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
const unsigned char *pclmap; 
#line 2108 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
const unsigned char *pcumap; 
#line 2109 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
__lc_time_data *lc_time_curr; 
#line 2110 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
__wchar_t *locale_name[6]; 
#line 2111 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
} threadlocinfo; }
#line 2148 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\crtdefs.h"
#pragma pack ( pop )
#line 61 "e:\\cudatoolkit\\include\\device_types.h"













#line 75 "e:\\cudatoolkit\\include\\device_types.h"
#line 36 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stddef.h"
namespace std { typedef decltype((__nullptr)) nullptr_t; }
#line 37 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stddef.h"
using std::nullptr_t;
#line 43 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stddef.h"
extern "C" { __declspec(dllimport) extern int *__cdecl _errno(); } 
#line 46 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stddef.h"
extern "C" { errno_t __cdecl _set_errno(int _Value); } 
#line 47 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stddef.h"
extern "C" { errno_t __cdecl _get_errno(int * _Value); } 
#line 69 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stddef.h"
extern "C" { __declspec(dllimport) extern unsigned long __cdecl __threadid(); } 
#line 71 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stddef.h"
extern "C" { __declspec(dllimport) extern uintptr_t __cdecl __threadhandle(); } 
#line 151 "e:\\cudatoolkit\\include\\driver_types.h"





































































































































































#line 317 "e:\\cudatoolkit\\include\\driver_types.h"
#line 741 "e:\\cudatoolkit\\include\\driver_types.h"













#line 755 "e:\\cudatoolkit\\include\\driver_types.h"
#line 752 "e:\\cudatoolkit\\include\\driver_types.h"















#line 768 "e:\\cudatoolkit\\include\\driver_types.h"
#line 764 "e:\\cudatoolkit\\include\\driver_types.h"
typedef struct cudaArray *cudaArray_t; 
#line 769 "e:\\cudatoolkit\\include\\driver_types.h"
typedef const cudaArray *cudaArray_const_t; 
#line 771 "e:\\cudatoolkit\\include\\driver_types.h"
struct cudaArray; 
#line 776 "e:\\cudatoolkit\\include\\driver_types.h"
typedef struct cudaMipmappedArray *cudaMipmappedArray_t; 
#line 781 "e:\\cudatoolkit\\include\\driver_types.h"
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t; 
#line 783 "e:\\cudatoolkit\\include\\driver_types.h"
struct cudaMipmappedArray; 
#line 788 "e:\\cudatoolkit\\include\\driver_types.h"









#line 798 "e:\\cudatoolkit\\include\\driver_types.h"
#line 797 "e:\\cudatoolkit\\include\\driver_types.h"















#line 813 "e:\\cudatoolkit\\include\\driver_types.h"
#line 811 "e:\\cudatoolkit\\include\\driver_types.h"













#line 825 "e:\\cudatoolkit\\include\\driver_types.h"
#line 824 "e:\\cudatoolkit\\include\\driver_types.h"











#line 836 "e:\\cudatoolkit\\include\\driver_types.h"
#line 836 "e:\\cudatoolkit\\include\\driver_types.h"











#line 848 "e:\\cudatoolkit\\include\\driver_types.h"
#line 846 "e:\\cudatoolkit\\include\\driver_types.h"





















#line 868 "e:\\cudatoolkit\\include\\driver_types.h"
#line 863 "e:\\cudatoolkit\\include\\driver_types.h"























#line 887 "e:\\cudatoolkit\\include\\driver_types.h"
#line 881 "e:\\cudatoolkit\\include\\driver_types.h"
struct cudaGraphicsResource; 
#line 886 "e:\\cudatoolkit\\include\\driver_types.h"















#line 902 "e:\\cudatoolkit\\include\\driver_types.h"
#line 898 "e:\\cudatoolkit\\include\\driver_types.h"











#line 910 "e:\\cudatoolkit\\include\\driver_types.h"
#line 908 "e:\\cudatoolkit\\include\\driver_types.h"

















#line 926 "e:\\cudatoolkit\\include\\driver_types.h"
#line 921 "e:\\cudatoolkit\\include\\driver_types.h"













#line 935 "e:\\cudatoolkit\\include\\driver_types.h"
#line 932 "e:\\cudatoolkit\\include\\driver_types.h"











































































#line 1008 "e:\\cudatoolkit\\include\\driver_types.h"
#line 974 "e:\\cudatoolkit\\include\\driver_types.h"















































#line 1022 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1002 "e:\\cudatoolkit\\include\\driver_types.h"





















#line 1024 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1017 "e:\\cudatoolkit\\include\\driver_types.h"















#line 1033 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1057 "e:\\cudatoolkit\\include\\driver_types.h"





















#line 1079 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1113 "e:\\cudatoolkit\\include\\driver_types.h"













#line 1127 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1125 "e:\\cudatoolkit\\include\\driver_types.h"











#line 1137 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1135 "e:\\cudatoolkit\\include\\driver_types.h"













#line 1149 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1146 "e:\\cudatoolkit\\include\\driver_types.h"















#line 1162 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1158 "e:\\cudatoolkit\\include\\driver_types.h"









#line 1168 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1167 "e:\\cudatoolkit\\include\\driver_types.h"













































































































































































#line 1341 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1258 "e:\\cudatoolkit\\include\\driver_types.h"

































































































































#line 1388 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1401 "e:\\cudatoolkit\\include\\driver_types.h"








#line 1410 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1409 "e:\\cudatoolkit\\include\\driver_types.h"








#line 1418 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1420 "e:\\cudatoolkit\\include\\driver_types.h"




#line 1425 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1425 "e:\\cudatoolkit\\include\\driver_types.h"




#line 1430 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1430 "e:\\cudatoolkit\\include\\driver_types.h"




#line 1435 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1435 "e:\\cudatoolkit\\include\\driver_types.h"




#line 1440 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1440 "e:\\cudatoolkit\\include\\driver_types.h"




#line 1445 "e:\\cudatoolkit\\include\\driver_types.h"
#line 1445 "e:\\cudatoolkit\\include\\driver_types.h"




#line 1450 "e:\\cudatoolkit\\include\\driver_types.h"
#line 84 "e:\\cudatoolkit\\include\\surface_types.h"











#line 96 "e:\\cudatoolkit\\include\\surface_types.h"
#line 94 "e:\\cudatoolkit\\include\\surface_types.h"









#line 104 "e:\\cudatoolkit\\include\\surface_types.h"
#line 103 "e:\\cudatoolkit\\include\\surface_types.h"







#line 111 "e:\\cudatoolkit\\include\\surface_types.h"
#line 114 "e:\\cudatoolkit\\include\\surface_types.h"




#line 119 "e:\\cudatoolkit\\include\\surface_types.h"
#line 84 "e:\\cudatoolkit\\include\\texture_types.h"













#line 98 "e:\\cudatoolkit\\include\\texture_types.h"
#line 95 "e:\\cudatoolkit\\include\\texture_types.h"









#line 105 "e:\\cudatoolkit\\include\\texture_types.h"
#line 104 "e:\\cudatoolkit\\include\\texture_types.h"









#line 114 "e:\\cudatoolkit\\include\\texture_types.h"
#line 113 "e:\\cudatoolkit\\include\\texture_types.h"



























#line 141 "e:\\cudatoolkit\\include\\texture_types.h"
#line 161 "e:\\cudatoolkit\\include\\texture_types.h"

























#line 187 "e:\\cudatoolkit\\include\\texture_types.h"
#line 208 "e:\\cudatoolkit\\include\\texture_types.h"




#line 213 "e:\\cudatoolkit\\include\\texture_types.h"
#line 98 "e:\\cudatoolkit\\include\\vector_types.h"







#line 106 "e:\\cudatoolkit\\include\\vector_types.h"
#line 103 "e:\\cudatoolkit\\include\\vector_types.h"







#line 111 "e:\\cudatoolkit\\include\\vector_types.h"
#line 109 "e:\\cudatoolkit\\include\\vector_types.h"







#line 117 "e:\\cudatoolkit\\include\\vector_types.h"
#line 114 "e:\\cudatoolkit\\include\\vector_types.h"







#line 122 "e:\\cudatoolkit\\include\\vector_types.h"
#line 119 "e:\\cudatoolkit\\include\\vector_types.h"







#line 127 "e:\\cudatoolkit\\include\\vector_types.h"
#line 124 "e:\\cudatoolkit\\include\\vector_types.h"







#line 132 "e:\\cudatoolkit\\include\\vector_types.h"
#line 129 "e:\\cudatoolkit\\include\\vector_types.h"







#line 137 "e:\\cudatoolkit\\include\\vector_types.h"
#line 134 "e:\\cudatoolkit\\include\\vector_types.h"







#line 142 "e:\\cudatoolkit\\include\\vector_types.h"
#line 139 "e:\\cudatoolkit\\include\\vector_types.h"







#line 147 "e:\\cudatoolkit\\include\\vector_types.h"
#line 144 "e:\\cudatoolkit\\include\\vector_types.h"







#line 152 "e:\\cudatoolkit\\include\\vector_types.h"
#line 149 "e:\\cudatoolkit\\include\\vector_types.h"







#line 157 "e:\\cudatoolkit\\include\\vector_types.h"
#line 154 "e:\\cudatoolkit\\include\\vector_types.h"







#line 162 "e:\\cudatoolkit\\include\\vector_types.h"
#line 159 "e:\\cudatoolkit\\include\\vector_types.h"







#line 167 "e:\\cudatoolkit\\include\\vector_types.h"
#line 164 "e:\\cudatoolkit\\include\\vector_types.h"







#line 172 "e:\\cudatoolkit\\include\\vector_types.h"
#line 169 "e:\\cudatoolkit\\include\\vector_types.h"



#line 173 "e:\\cudatoolkit\\include\\vector_types.h"
#line 170 "e:\\cudatoolkit\\include\\vector_types.h"



#line 174 "e:\\cudatoolkit\\include\\vector_types.h"
#line 172 "e:\\cudatoolkit\\include\\vector_types.h"







#line 180 "e:\\cudatoolkit\\include\\vector_types.h"
#line 177 "e:\\cudatoolkit\\include\\vector_types.h"







#line 185 "e:\\cudatoolkit\\include\\vector_types.h"
#line 182 "e:\\cudatoolkit\\include\\vector_types.h"



#line 186 "e:\\cudatoolkit\\include\\vector_types.h"
#line 183 "e:\\cudatoolkit\\include\\vector_types.h"



#line 187 "e:\\cudatoolkit\\include\\vector_types.h"
#line 185 "e:\\cudatoolkit\\include\\vector_types.h"







#line 193 "e:\\cudatoolkit\\include\\vector_types.h"
#line 190 "e:\\cudatoolkit\\include\\vector_types.h"







#line 198 "e:\\cudatoolkit\\include\\vector_types.h"
#line 195 "e:\\cudatoolkit\\include\\vector_types.h"







#line 203 "e:\\cudatoolkit\\include\\vector_types.h"
#line 200 "e:\\cudatoolkit\\include\\vector_types.h"







#line 208 "e:\\cudatoolkit\\include\\vector_types.h"
#line 205 "e:\\cudatoolkit\\include\\vector_types.h"







#line 213 "e:\\cudatoolkit\\include\\vector_types.h"
#line 210 "e:\\cudatoolkit\\include\\vector_types.h"







#line 218 "e:\\cudatoolkit\\include\\vector_types.h"
#line 216 "e:\\cudatoolkit\\include\\vector_types.h"



#line 220 "e:\\cudatoolkit\\include\\vector_types.h"
#line 217 "e:\\cudatoolkit\\include\\vector_types.h"



#line 221 "e:\\cudatoolkit\\include\\vector_types.h"
#line 232 "e:\\cudatoolkit\\include\\vector_types.h"







#line 240 "e:\\cudatoolkit\\include\\vector_types.h"
#line 237 "e:\\cudatoolkit\\include\\vector_types.h"







#line 245 "e:\\cudatoolkit\\include\\vector_types.h"
#line 242 "e:\\cudatoolkit\\include\\vector_types.h"







#line 250 "e:\\cudatoolkit\\include\\vector_types.h"
#line 247 "e:\\cudatoolkit\\include\\vector_types.h"







#line 255 "e:\\cudatoolkit\\include\\vector_types.h"
#line 252 "e:\\cudatoolkit\\include\\vector_types.h"







#line 260 "e:\\cudatoolkit\\include\\vector_types.h"
#line 274 "e:\\cudatoolkit\\include\\vector_types.h"



#line 278 "e:\\cudatoolkit\\include\\vector_types.h"
#line 279 "e:\\cudatoolkit\\include\\vector_types.h"







#line 287 "e:\\cudatoolkit\\include\\vector_types.h"
#line 284 "e:\\cudatoolkit\\include\\vector_types.h"







#line 292 "e:\\cudatoolkit\\include\\vector_types.h"
#line 289 "e:\\cudatoolkit\\include\\vector_types.h"







#line 297 "e:\\cudatoolkit\\include\\vector_types.h"
#line 294 "e:\\cudatoolkit\\include\\vector_types.h"







#line 302 "e:\\cudatoolkit\\include\\vector_types.h"
#line 299 "e:\\cudatoolkit\\include\\vector_types.h"







#line 307 "e:\\cudatoolkit\\include\\vector_types.h"
#line 304 "e:\\cudatoolkit\\include\\vector_types.h"







#line 312 "e:\\cudatoolkit\\include\\vector_types.h"
#line 309 "e:\\cudatoolkit\\include\\vector_types.h"







#line 317 "e:\\cudatoolkit\\include\\vector_types.h"
#line 314 "e:\\cudatoolkit\\include\\vector_types.h"







#line 322 "e:\\cudatoolkit\\include\\vector_types.h"
#line 319 "e:\\cudatoolkit\\include\\vector_types.h"







#line 327 "e:\\cudatoolkit\\include\\vector_types.h"
#line 324 "e:\\cudatoolkit\\include\\vector_types.h"







#line 332 "e:\\cudatoolkit\\include\\vector_types.h"
#line 329 "e:\\cudatoolkit\\include\\vector_types.h"







#line 337 "e:\\cudatoolkit\\include\\vector_types.h"
#line 334 "e:\\cudatoolkit\\include\\vector_types.h"







#line 342 "e:\\cudatoolkit\\include\\vector_types.h"
#line 339 "e:\\cudatoolkit\\include\\vector_types.h"







#line 347 "e:\\cudatoolkit\\include\\vector_types.h"
#line 344 "e:\\cudatoolkit\\include\\vector_types.h"







#line 352 "e:\\cudatoolkit\\include\\vector_types.h"
#line 362 "e:\\cudatoolkit\\include\\vector_types.h"




#line 367 "e:\\cudatoolkit\\include\\vector_types.h"
#line 363 "e:\\cudatoolkit\\include\\vector_types.h"




#line 368 "e:\\cudatoolkit\\include\\vector_types.h"
#line 364 "e:\\cudatoolkit\\include\\vector_types.h"




#line 369 "e:\\cudatoolkit\\include\\vector_types.h"
#line 365 "e:\\cudatoolkit\\include\\vector_types.h"




#line 370 "e:\\cudatoolkit\\include\\vector_types.h"
#line 366 "e:\\cudatoolkit\\include\\vector_types.h"




#line 371 "e:\\cudatoolkit\\include\\vector_types.h"
#line 367 "e:\\cudatoolkit\\include\\vector_types.h"




#line 372 "e:\\cudatoolkit\\include\\vector_types.h"
#line 368 "e:\\cudatoolkit\\include\\vector_types.h"




#line 373 "e:\\cudatoolkit\\include\\vector_types.h"
#line 369 "e:\\cudatoolkit\\include\\vector_types.h"




#line 374 "e:\\cudatoolkit\\include\\vector_types.h"
#line 370 "e:\\cudatoolkit\\include\\vector_types.h"




#line 375 "e:\\cudatoolkit\\include\\vector_types.h"
#line 371 "e:\\cudatoolkit\\include\\vector_types.h"




#line 376 "e:\\cudatoolkit\\include\\vector_types.h"
#line 372 "e:\\cudatoolkit\\include\\vector_types.h"




#line 377 "e:\\cudatoolkit\\include\\vector_types.h"
#line 373 "e:\\cudatoolkit\\include\\vector_types.h"




#line 378 "e:\\cudatoolkit\\include\\vector_types.h"
#line 374 "e:\\cudatoolkit\\include\\vector_types.h"




#line 379 "e:\\cudatoolkit\\include\\vector_types.h"
#line 375 "e:\\cudatoolkit\\include\\vector_types.h"




#line 380 "e:\\cudatoolkit\\include\\vector_types.h"
#line 376 "e:\\cudatoolkit\\include\\vector_types.h"




#line 381 "e:\\cudatoolkit\\include\\vector_types.h"
#line 377 "e:\\cudatoolkit\\include\\vector_types.h"




#line 382 "e:\\cudatoolkit\\include\\vector_types.h"
#line 378 "e:\\cudatoolkit\\include\\vector_types.h"




#line 383 "e:\\cudatoolkit\\include\\vector_types.h"
#line 379 "e:\\cudatoolkit\\include\\vector_types.h"




#line 384 "e:\\cudatoolkit\\include\\vector_types.h"
#line 380 "e:\\cudatoolkit\\include\\vector_types.h"




#line 385 "e:\\cudatoolkit\\include\\vector_types.h"
#line 381 "e:\\cudatoolkit\\include\\vector_types.h"




#line 386 "e:\\cudatoolkit\\include\\vector_types.h"
#line 382 "e:\\cudatoolkit\\include\\vector_types.h"




#line 387 "e:\\cudatoolkit\\include\\vector_types.h"
#line 383 "e:\\cudatoolkit\\include\\vector_types.h"




#line 388 "e:\\cudatoolkit\\include\\vector_types.h"
#line 384 "e:\\cudatoolkit\\include\\vector_types.h"




#line 389 "e:\\cudatoolkit\\include\\vector_types.h"
#line 385 "e:\\cudatoolkit\\include\\vector_types.h"




#line 390 "e:\\cudatoolkit\\include\\vector_types.h"
#line 386 "e:\\cudatoolkit\\include\\vector_types.h"




#line 391 "e:\\cudatoolkit\\include\\vector_types.h"
#line 387 "e:\\cudatoolkit\\include\\vector_types.h"




#line 392 "e:\\cudatoolkit\\include\\vector_types.h"
#line 388 "e:\\cudatoolkit\\include\\vector_types.h"




#line 393 "e:\\cudatoolkit\\include\\vector_types.h"
#line 389 "e:\\cudatoolkit\\include\\vector_types.h"




#line 394 "e:\\cudatoolkit\\include\\vector_types.h"
#line 390 "e:\\cudatoolkit\\include\\vector_types.h"




#line 395 "e:\\cudatoolkit\\include\\vector_types.h"
#line 391 "e:\\cudatoolkit\\include\\vector_types.h"




#line 396 "e:\\cudatoolkit\\include\\vector_types.h"
#line 392 "e:\\cudatoolkit\\include\\vector_types.h"




#line 397 "e:\\cudatoolkit\\include\\vector_types.h"
#line 393 "e:\\cudatoolkit\\include\\vector_types.h"




#line 398 "e:\\cudatoolkit\\include\\vector_types.h"
#line 394 "e:\\cudatoolkit\\include\\vector_types.h"




#line 399 "e:\\cudatoolkit\\include\\vector_types.h"
#line 395 "e:\\cudatoolkit\\include\\vector_types.h"




#line 400 "e:\\cudatoolkit\\include\\vector_types.h"
#line 396 "e:\\cudatoolkit\\include\\vector_types.h"




#line 401 "e:\\cudatoolkit\\include\\vector_types.h"
#line 397 "e:\\cudatoolkit\\include\\vector_types.h"




#line 402 "e:\\cudatoolkit\\include\\vector_types.h"
#line 398 "e:\\cudatoolkit\\include\\vector_types.h"




#line 403 "e:\\cudatoolkit\\include\\vector_types.h"
#line 399 "e:\\cudatoolkit\\include\\vector_types.h"




#line 404 "e:\\cudatoolkit\\include\\vector_types.h"
#line 400 "e:\\cudatoolkit\\include\\vector_types.h"




#line 405 "e:\\cudatoolkit\\include\\vector_types.h"
#line 401 "e:\\cudatoolkit\\include\\vector_types.h"




#line 406 "e:\\cudatoolkit\\include\\vector_types.h"
#line 402 "e:\\cudatoolkit\\include\\vector_types.h"




#line 407 "e:\\cudatoolkit\\include\\vector_types.h"
#line 403 "e:\\cudatoolkit\\include\\vector_types.h"




#line 408 "e:\\cudatoolkit\\include\\vector_types.h"
#line 404 "e:\\cudatoolkit\\include\\vector_types.h"




#line 409 "e:\\cudatoolkit\\include\\vector_types.h"
#line 405 "e:\\cudatoolkit\\include\\vector_types.h"




#line 410 "e:\\cudatoolkit\\include\\vector_types.h"
#line 406 "e:\\cudatoolkit\\include\\vector_types.h"




#line 411 "e:\\cudatoolkit\\include\\vector_types.h"
#line 407 "e:\\cudatoolkit\\include\\vector_types.h"




#line 412 "e:\\cudatoolkit\\include\\vector_types.h"
#line 408 "e:\\cudatoolkit\\include\\vector_types.h"




#line 413 "e:\\cudatoolkit\\include\\vector_types.h"
#line 409 "e:\\cudatoolkit\\include\\vector_types.h"




#line 414 "e:\\cudatoolkit\\include\\vector_types.h"
#line 417 "e:\\cudatoolkit\\include\\vector_types.h"







#line 425 "e:\\cudatoolkit\\include\\vector_types.h"
#line 427 "e:\\cudatoolkit\\include\\vector_types.h"




#line 432 "e:\\cudatoolkit\\include\\vector_types.h"
#line 106 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device); } 
#line 107 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetLimit(size_t * pValue, cudaLimit limit); } 
#line 108 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig); } 
#line 109 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig); } 
#line 110 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSynchronize(); } 
#line 111 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetLastError(); } 
#line 112 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPeekAtLastError(); } 
#line 113 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorString(cudaError_t error); } 
#line 114 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorName(cudaError_t error); } 
#line 115 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceCount(int * count); } 
#line 116 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDevice(int * device); } 
#line 117 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags); } 
#line 118 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamDestroy(cudaStream_t stream); } 
#line 119 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags); } 
#line 120 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent_ptsz(cudaStream_t stream, cudaEvent_t event, unsigned flags); } 
#line 121 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags); } 
#line 122 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord(cudaEvent_t event, cudaStream_t stream); } 
#line 123 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord_ptsz(cudaEvent_t event, cudaStream_t stream); } 
#line 124 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventDestroy(cudaEvent_t event); } 
#line 125 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func); } 
#line 126 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFree(void * devPtr); } 
#line 127 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc(void ** devPtr, size_t size); } 
#line 128 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 129 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync_ptsz(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 130 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 131 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync_ptsz(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream); } 
#line 132 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream); } 
#line 133 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync_ptsz(const cudaMemcpy3DParms * p, cudaStream_t stream); } 
#line 134 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream); } 
#line 135 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync_ptsz(void * devPtr, int value, size_t count, cudaStream_t stream); } 
#line 136 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream); } 
#line 137 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync_ptsz(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream); } 
#line 138 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream); } 
#line 139 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync_ptsz(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream); } 
#line 140 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaRuntimeGetVersion(int * runtimeVersion); } 
#line 161 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern void *__stdcall cudaGetParameterBuffer(size_t alignment, size_t size); } 
#line 189 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern void *__stdcall cudaGetParameterBufferV2(void * func, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize); } 
#line 190 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDevice_ptsz(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream); } 
#line 191 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDeviceV2_ptsz(void * parameterBuffer, cudaStream_t stream); } 
#line 209 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDevice(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream); } 
#line 210 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchDeviceV2(void * parameterBuffer, cudaStream_t stream); } 
#line 213 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize); } 
#line 214 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize, unsigned flags); } 
#line 218 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaMalloc(T ** devPtr, size_t size); 
#line 219 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, T * entry); 
#line 220 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize); 
#line 221 "e:\\cudatoolkit\\include\\cuda_device_runtime_api.h"
template< class T> static __inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize, unsigned flags); 
#line 251 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceReset(); } 
#line 268 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSynchronize(); } 
#line 343 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetLimit(cudaLimit limit, size_t value); } 
#line 372 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetLimit(size_t * pValue, cudaLimit limit); } 
#line 403 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig); } 
#line 438 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetStreamPriorityRange(int * leastPriority, int * greatestPriority); } 
#line 480 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetCacheConfig(cudaFuncCache cacheConfig); } 
#line 509 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig); } 
#line 551 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceSetSharedMemConfig(cudaSharedMemConfig config); } 
#line 574 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetByPCIBusId(int * device, const char * pciBusId); } 
#line 601 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetPCIBusId(char * pciBusId, int len, int device); } 
#line 643 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcGetEventHandle(cudaIpcEventHandle_t * handle, cudaEvent_t event); } 
#line 678 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcOpenEventHandle(cudaEvent_t * event, cudaIpcEventHandle_t handle); } 
#line 716 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcGetMemHandle(cudaIpcMemHandle_t * handle, void * devPtr); } 
#line 766 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcOpenMemHandle(void ** devPtr, cudaIpcMemHandle_t handle, unsigned flags); } 
#line 796 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaIpcCloseMemHandle(void * devPtr); } 
#line 836 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadExit(); } 
#line 860 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSynchronize(); } 
#line 907 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSetLimit(cudaLimit limit, size_t value); } 
#line 938 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadGetLimit(size_t * pValue, cudaLimit limit); } 
#line 973 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadGetCacheConfig(cudaFuncCache * pCacheConfig); } 
#line 1019 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaThreadSetCacheConfig(cudaFuncCache cacheConfig); } 
#line 1073 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetLastError(); } 
#line 1114 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPeekAtLastError(); } 
#line 1129 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorName(cudaError_t error); } 
#line 1144 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern const char *__stdcall cudaGetErrorString(cudaError_t error); } 
#line 1174 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceCount(int * count); } 
#line 1410 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceProperties(cudaDeviceProp * prop, int device); } 
#line 1570 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device); } 
#line 1589 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaChooseDevice(int * device, const cudaDeviceProp * prop); } 
#line 1623 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDevice(int device); } 
#line 1640 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDevice(int * device); } 
#line 1669 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetValidDevices(int * device_arr, int len); } 
#line 1731 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDeviceFlags(unsigned flags); } 
#line 1772 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetDeviceFlags(unsigned * flags); } 
#line 1809 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreate(cudaStream_t * pStream); } 
#line 1838 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags); } 
#line 1881 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamCreateWithPriority(cudaStream_t * pStream, unsigned flags, int priority); } 
#line 1905 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamGetPriority(cudaStream_t hStream, int * priority); } 
#line 1926 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamGetFlags(cudaStream_t hStream, unsigned * flags); } 
#line 1947 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamDestroy(cudaStream_t stream); } 
#line 1979 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags); } 
#line 1993 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { typedef void (__stdcall *cudaStreamCallback_t)(cudaStream_t stream, cudaError_t status, void * userData); }
#line 2050 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamAddCallback(cudaStream_t stream, cudaStreamCallback_t callback, void * userData, unsigned flags); } 
#line 2070 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamSynchronize(cudaStream_t stream); } 
#line 2091 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamQuery(cudaStream_t stream); } 
#line 2157 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaStreamAttachMemAsync(cudaStream_t stream, void * devPtr, size_t length, unsigned flags); } 
#line 2193 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreate(cudaEvent_t * event); } 
#line 2227 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags); } 
#line 2258 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventRecord(cudaEvent_t event, cudaStream_t stream = 0); } 
#line 2290 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventQuery(cudaEvent_t event); } 
#line 2322 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventSynchronize(cudaEvent_t event); } 
#line 2347 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventDestroy(cudaEvent_t event); } 
#line 2388 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaEventElapsedTime(float * ms, cudaEvent_t start, cudaEvent_t end); } 
#line 2447 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunchKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, size_t sharedMem, cudaStream_t stream); } 
#line 2497 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncSetCacheConfig(const void * func, cudaFuncCache cacheConfig); } 
#line 2551 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncSetSharedMemConfig(const void * func, cudaSharedMemConfig config); } 
#line 2585 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func); } 
#line 2608 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDoubleForDevice(double * d); } 
#line 2631 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetDoubleForHost(double * d); } 
#line 2687 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize); } 
#line 2731 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize, unsigned flags); } 
#line 2782 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaConfigureCall(dim3 gridDim, dim3 blockDim, size_t sharedMem = 0, cudaStream_t stream = 0); } 
#line 2811 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaSetupArgument(const void * arg, size_t size, size_t offset); } 
#line 2849 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaLaunch(const void * func); } 
#line 2938 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocManaged(void ** devPtr, size_t size, unsigned flags); } 
#line 2964 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc(void ** devPtr, size_t size); } 
#line 2993 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocHost(void ** ptr, size_t size); } 
#line 3032 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocPitch(void ** devPtr, size_t * pitch, size_t width, size_t height); } 
#line 3074 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, size_t width, size_t height = 0, unsigned flags = 0); } 
#line 3101 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFree(void * devPtr); } 
#line 3121 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeHost(void * ptr); } 
#line 3143 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeArray(cudaArray_t array); } 
#line 3165 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaFreeMipmappedArray(cudaMipmappedArray_t mipmappedArray); } 
#line 3224 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostAlloc(void ** pHost, size_t size, unsigned flags); } 
#line 3286 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostRegister(void * ptr, size_t size, unsigned flags); } 
#line 3305 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostUnregister(void * ptr); } 
#line 3332 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostGetDevicePointer(void ** pDevice, void * pHost, unsigned flags); } 
#line 3351 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaHostGetFlags(unsigned * pFlags, void * pHost); } 
#line 3386 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc3D(cudaPitchedPtr * pitchedDevPtr, cudaExtent extent); } 
#line 3521 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMalloc3DArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned flags = 0); } 
#line 3642 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMallocMipmappedArray(cudaMipmappedArray_t * mipmappedArray, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned numLevels, unsigned flags = 0); } 
#line 3668 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetMipmappedArrayLevel(cudaArray_t * levelArray, cudaMipmappedArray_const_t mipmappedArray, unsigned level); } 
#line 3765 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3D(const cudaMemcpy3DParms * p); } 
#line 3793 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * p); } 
#line 3901 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream = 0); } 
#line 3924 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * p, cudaStream_t stream = 0); } 
#line 3943 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemGetInfo(size_t * free, size_t * total); } 
#line 3964 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaArrayGetInfo(cudaChannelFormatDesc * desc, cudaExtent * extent, unsigned * flags, cudaArray_t array); } 
#line 3999 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy(void * dst, const void * src, size_t count, cudaMemcpyKind kind); } 
#line 4031 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyPeer(void * dst, int dstDevice, const void * src, int srcDevice, size_t count); } 
#line 4065 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind); } 
#line 4099 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromArray(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind); } 
#line 4134 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t count, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice); } 
#line 4176 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2D(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind); } 
#line 4218 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind); } 
#line 4260 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DFromArray(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind); } 
#line 4300 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice); } 
#line 4335 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToSymbol(const void * symbol, const void * src, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyHostToDevice); } 
#line 4370 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromSymbol(void * dst, const void * symbol, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyDeviceToHost); } 
#line 4416 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4448 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyPeerAsync(void * dst, int dstDevice, const void * src, int srcDevice, size_t count, cudaStream_t stream = 0); } 
#line 4490 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4532 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromArrayAsync(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4587 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4638 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4688 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpy2DFromArrayAsync(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4731 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyToSymbolAsync(const void * symbol, const void * src, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4774 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemcpyFromSymbolAsync(void * dst, const void * symbol, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0); } 
#line 4800 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset(void * devPtr, int value, size_t count); } 
#line 4830 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2D(void * devPtr, size_t pitch, int value, size_t width, size_t height); } 
#line 4873 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3D(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent); } 
#line 4905 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream = 0); } 
#line 4942 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream = 0); } 
#line 4992 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream = 0); } 
#line 5015 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSymbolAddress(void ** devPtr, const void * symbol); } 
#line 5037 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSymbolSize(size_t * size, const void * symbol); } 
#line 5190 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaPointerGetAttributes(cudaPointerAttributes * attributes, const void * ptr); } 
#line 5228 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceCanAccessPeer(int * canAccessPeer, int device, int peerDevice); } 
#line 5267 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceEnablePeerAccess(int peerDevice, unsigned flags); } 
#line 5286 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDeviceDisablePeerAccess(int peerDevice); } 
#line 5344 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsUnregisterResource(cudaGraphicsResource_t resource); } 
#line 5376 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t resource, unsigned flags); } 
#line 5412 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsMapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0); } 
#line 5444 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsUnmapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0); } 
#line 5473 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceGetMappedPointer(void ** devPtr, size_t * size, cudaGraphicsResource_t resource); } 
#line 5507 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsSubResourceGetMappedArray(cudaArray_t * array, cudaGraphicsResource_t resource, unsigned arrayIndex, unsigned mipLevel); } 
#line 5532 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * mipmappedArray, cudaGraphicsResource_t resource); } 
#line 5572 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetChannelDesc(cudaChannelFormatDesc * desc, cudaArray_const_t array); } 
#line 5607 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaChannelFormatDesc __stdcall cudaCreateChannelDesc(int x, int y, int z, int w, cudaChannelFormatKind f); } 
#line 5654 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTexture(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t size = 4294967295U); } 
#line 5705 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTexture2D(size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, size_t width, size_t height, size_t pitch); } 
#line 5733 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTextureToArray(const textureReference * texref, cudaArray_const_t array, const cudaChannelFormatDesc * desc); } 
#line 5761 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindTextureToMipmappedArray(const textureReference * texref, cudaMipmappedArray_const_t mipmappedArray, const cudaChannelFormatDesc * desc); } 
#line 5782 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaUnbindTexture(const textureReference * texref); } 
#line 5807 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureAlignmentOffset(size_t * offset, const textureReference * texref); } 
#line 5832 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureReference(const textureReference ** texref, const void * symbol); } 
#line 5872 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaBindSurfaceToArray(const surfaceReference * surfref, cudaArray_const_t array, const cudaChannelFormatDesc * desc); } 
#line 5891 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSurfaceReference(const surfaceReference ** surfref, const void * symbol); } 
#line 6108 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaCreateTextureObject(cudaTextureObject_t * pTexObject, const cudaResourceDesc * pResDesc, const cudaTextureDesc * pTexDesc, const cudaResourceViewDesc * pResViewDesc); } 
#line 6123 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDestroyTextureObject(cudaTextureObject_t texObject); } 
#line 6139 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectResourceDesc(cudaResourceDesc * pResDesc, cudaTextureObject_t texObject); } 
#line 6155 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectTextureDesc(cudaTextureDesc * pTexDesc, cudaTextureObject_t texObject); } 
#line 6172 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * pResViewDesc, cudaTextureObject_t texObject); } 
#line 6211 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaCreateSurfaceObject(cudaSurfaceObject_t * pSurfObject, const cudaResourceDesc * pResDesc); } 
#line 6226 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDestroySurfaceObject(cudaSurfaceObject_t surfObject); } 
#line 6241 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * pResDesc, cudaSurfaceObject_t surfObject); } 
#line 6268 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaDriverGetVersion(int * driverVersion); } 
#line 6285 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaRuntimeGetVersion(int * runtimeVersion); } 
#line 6290 "e:\\cudatoolkit\\include\\cuda_runtime_api.h"
extern "C" { extern cudaError_t __stdcall cudaGetExportTable(const void ** ppExportTable, const cudaUUID_t * pExportTableId); } 
#line 107 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template< class T> __inline ::cudaChannelFormatDesc cudaCreateChannelDesc() 
#line 108 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 109 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone); 
#line 110 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 112 "e:\\cudatoolkit\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf() 
#line 113 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 114 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 116 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 117 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 119 "e:\\cudatoolkit\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf1() 
#line 120 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 121 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 123 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 124 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 126 "e:\\cudatoolkit\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf2() 
#line 127 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 128 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 130 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat); 
#line 131 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 133 "e:\\cudatoolkit\\include\\channel_descriptor.h"
static __inline cudaChannelFormatDesc cudaCreateChannelDescHalf4() 
#line 134 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 135 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 137 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat); 
#line 138 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 140 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char> () 
#line 141 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 142 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(char)) * 8); 
#line 147 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 149 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 151 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> () 
#line 152 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 153 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 155 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 156 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 158 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> () 
#line 159 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 160 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 162 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 163 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 165 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> () 
#line 166 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 167 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 169 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 170 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 172 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> () 
#line 173 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 174 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 176 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 177 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 179 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> () 
#line 180 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 181 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 183 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 184 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 186 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> () 
#line 187 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 188 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 190 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 191 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 193 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> () 
#line 194 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 195 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8); 
#line 197 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 198 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 200 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> () 
#line 201 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 202 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8); 
#line 204 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 205 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 207 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short> () 
#line 208 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 209 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 211 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 212 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 214 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> () 
#line 215 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 216 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 218 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 219 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 221 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> () 
#line 222 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 223 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 225 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 226 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 228 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> () 
#line 229 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 230 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 232 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 233 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 235 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> () 
#line 236 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 237 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 239 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 240 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 242 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> () 
#line 243 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 244 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 246 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 247 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 249 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> () 
#line 250 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 251 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(short)) * 8); 
#line 253 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 254 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 256 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> () 
#line 257 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 258 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8); 
#line 260 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 261 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 263 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int> () 
#line 264 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 265 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 267 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 268 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 270 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> () 
#line 271 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 272 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 274 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 275 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 277 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> () 
#line 278 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 279 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 281 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 282 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 284 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> () 
#line 285 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 286 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 288 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 289 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 291 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> () 
#line 292 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 293 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 295 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 296 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 298 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> () 
#line 299 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 300 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 302 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 303 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 305 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> () 
#line 306 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 307 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(int)) * 8); 
#line 309 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 310 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 312 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> () 
#line 313 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 314 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8); 
#line 316 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 317 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 321 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long> () 
#line 322 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 323 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 325 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 326 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 328 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned long> () 
#line 329 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 330 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 332 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 333 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 335 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long1> () 
#line 336 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 337 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 339 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned); 
#line 340 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 342 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong1> () 
#line 343 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 344 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 346 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned); 
#line 347 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 349 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long2> () 
#line 350 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 351 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 353 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned); 
#line 354 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 356 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong2> () 
#line 357 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 358 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 360 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned); 
#line 361 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 363 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< long4> () 
#line 364 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 365 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(long)) * 8); 
#line 367 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned); 
#line 368 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 370 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< ulong4> () 
#line 371 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 372 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(unsigned long)) * 8); 
#line 374 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned); 
#line 375 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 379 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float> () 
#line 380 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 381 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 383 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 384 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 386 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> () 
#line 387 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 388 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 390 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat); 
#line 391 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 393 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> () 
#line 394 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 395 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 397 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat); 
#line 398 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 400 "e:\\cudatoolkit\\include\\channel_descriptor.h"
template<> __inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> () 
#line 401 "e:\\cudatoolkit\\include\\channel_descriptor.h"
{ 
#line 402 "e:\\cudatoolkit\\include\\channel_descriptor.h"
int e = (((int)sizeof(float)) * 8); 
#line 404 "e:\\cudatoolkit\\include\\channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat); 
#line 405 "e:\\cudatoolkit\\include\\channel_descriptor.h"
} 
#line 79 "e:\\cudatoolkit\\include\\driver_functions.h"
static __inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz) 
#line 80 "e:\\cudatoolkit\\include\\driver_functions.h"
{ 
#line 81 "e:\\cudatoolkit\\include\\driver_functions.h"
cudaPitchedPtr s; 
#line 83 "e:\\cudatoolkit\\include\\driver_functions.h"
(s.ptr) = d; 
#line 84 "e:\\cudatoolkit\\include\\driver_functions.h"
(s.pitch) = p; 
#line 85 "e:\\cudatoolkit\\include\\driver_functions.h"
(s.xsize) = xsz; 
#line 86 "e:\\cudatoolkit\\include\\driver_functions.h"
(s.ysize) = ysz; 
#line 88 "e:\\cudatoolkit\\include\\driver_functions.h"
return s; 
#line 89 "e:\\cudatoolkit\\include\\driver_functions.h"
} 
#line 106 "e:\\cudatoolkit\\include\\driver_functions.h"
static __inline cudaPos make_cudaPos(size_t x, size_t y, size_t z) 
#line 107 "e:\\cudatoolkit\\include\\driver_functions.h"
{ 
#line 108 "e:\\cudatoolkit\\include\\driver_functions.h"
cudaPos p; 
#line 110 "e:\\cudatoolkit\\include\\driver_functions.h"
(p.x) = x; 
#line 111 "e:\\cudatoolkit\\include\\driver_functions.h"
(p.y) = y; 
#line 112 "e:\\cudatoolkit\\include\\driver_functions.h"
(p.z) = z; 
#line 114 "e:\\cudatoolkit\\include\\driver_functions.h"
return p; 
#line 115 "e:\\cudatoolkit\\include\\driver_functions.h"
} 
#line 132 "e:\\cudatoolkit\\include\\driver_functions.h"
static __inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d) 
#line 133 "e:\\cudatoolkit\\include\\driver_functions.h"
{ 
#line 134 "e:\\cudatoolkit\\include\\driver_functions.h"
cudaExtent e; 
#line 136 "e:\\cudatoolkit\\include\\driver_functions.h"
(e.width) = w; 
#line 137 "e:\\cudatoolkit\\include\\driver_functions.h"
(e.height) = h; 
#line 138 "e:\\cudatoolkit\\include\\driver_functions.h"
(e.depth) = d; 
#line 140 "e:\\cudatoolkit\\include\\driver_functions.h"
return e; 
#line 141 "e:\\cudatoolkit\\include\\driver_functions.h"
} 
#line 75 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline char1 make_char1(signed char x); 
#line 77 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline uchar1 make_uchar1(unsigned char x); 
#line 79 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline char2 make_char2(signed char x, signed char y); 
#line 81 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline uchar2 make_uchar2(unsigned char x, unsigned char y); 
#line 83 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline char3 make_char3(signed char x, signed char y, signed char z); 
#line 85 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z); 
#line 87 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline char4 make_char4(signed char x, signed char y, signed char z, signed char w); 
#line 89 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w); 
#line 91 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline short1 make_short1(short x); 
#line 93 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ushort1 make_ushort1(unsigned short x); 
#line 95 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline short2 make_short2(short x, short y); 
#line 97 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ushort2 make_ushort2(unsigned short x, unsigned short y); 
#line 99 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline short3 make_short3(short x, short y, short z); 
#line 101 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z); 
#line 103 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline short4 make_short4(short x, short y, short z, short w); 
#line 105 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w); 
#line 107 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline int1 make_int1(int x); 
#line 109 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline uint1 make_uint1(unsigned x); 
#line 111 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline int2 make_int2(int x, int y); 
#line 113 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline uint2 make_uint2(unsigned x, unsigned y); 
#line 115 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline int3 make_int3(int x, int y, int z); 
#line 117 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline uint3 make_uint3(unsigned x, unsigned y, unsigned z); 
#line 119 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline int4 make_int4(int x, int y, int z, int w); 
#line 121 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w); 
#line 123 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline long1 make_long1(long x); 
#line 125 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ulong1 make_ulong1(unsigned long x); 
#line 127 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline long2 make_long2(long x, long y); 
#line 129 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ulong2 make_ulong2(unsigned long x, unsigned long y); 
#line 131 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline long3 make_long3(long x, long y, long z); 
#line 133 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z); 
#line 135 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline long4 make_long4(long x, long y, long z, long w); 
#line 137 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w); 
#line 139 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline float1 make_float1(float x); 
#line 141 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline float2 make_float2(float x, float y); 
#line 143 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline float3 make_float3(float x, float y, float z); 
#line 145 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline float4 make_float4(float x, float y, float z, float w); 
#line 147 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline longlong1 make_longlong1(__int64 x); 
#line 149 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ulonglong1 make_ulonglong1(unsigned __int64 x); 
#line 151 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline longlong2 make_longlong2(__int64 x, __int64 y); 
#line 153 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ulonglong2 make_ulonglong2(unsigned __int64 x, unsigned __int64 y); 
#line 155 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline longlong3 make_longlong3(__int64 x, __int64 y, __int64 z); 
#line 157 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ulonglong3 make_ulonglong3(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z); 
#line 159 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline longlong4 make_longlong4(__int64 x, __int64 y, __int64 z, __int64 w); 
#line 161 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline ulonglong4 make_ulonglong4(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z, unsigned __int64 w); 
#line 163 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline double1 make_double1(double x); 
#line 165 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline double2 make_double2(double x, double y); 
#line 167 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline double3 make_double3(double x, double y, double z); 
#line 169 "e:\\cudatoolkit\\include\\vector_functions.h"
static __inline double4 make_double4(double x, double y, double z, double w); 
#line 75 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline char1 make_char1(signed char x) 
#line 76 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 77 "e:\\cudatoolkit\\include\\vector_functions.hpp"
char1 t; (t.x) = x; return t; 
#line 78 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 80 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline uchar1 make_uchar1(unsigned char x) 
#line 81 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 82 "e:\\cudatoolkit\\include\\vector_functions.hpp"
uchar1 t; (t.x) = x; return t; 
#line 83 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 85 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline char2 make_char2(signed char x, signed char y) 
#line 86 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 87 "e:\\cudatoolkit\\include\\vector_functions.hpp"
char2 t; (t.x) = x; (t.y) = y; return t; 
#line 88 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 90 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline uchar2 make_uchar2(unsigned char x, unsigned char y) 
#line 91 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 92 "e:\\cudatoolkit\\include\\vector_functions.hpp"
uchar2 t; (t.x) = x; (t.y) = y; return t; 
#line 93 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 95 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline char3 make_char3(signed char x, signed char y, signed char z) 
#line 96 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 97 "e:\\cudatoolkit\\include\\vector_functions.hpp"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 98 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 100 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z) 
#line 101 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 102 "e:\\cudatoolkit\\include\\vector_functions.hpp"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 103 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 105 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline char4 make_char4(signed char x, signed char y, signed char z, signed char w) 
#line 106 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 107 "e:\\cudatoolkit\\include\\vector_functions.hpp"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 108 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 110 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w) 
#line 111 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 112 "e:\\cudatoolkit\\include\\vector_functions.hpp"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 113 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 115 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline short1 make_short1(short x) 
#line 116 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 117 "e:\\cudatoolkit\\include\\vector_functions.hpp"
short1 t; (t.x) = x; return t; 
#line 118 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 120 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ushort1 make_ushort1(unsigned short x) 
#line 121 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 122 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ushort1 t; (t.x) = x; return t; 
#line 123 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 125 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline short2 make_short2(short x, short y) 
#line 126 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 127 "e:\\cudatoolkit\\include\\vector_functions.hpp"
short2 t; (t.x) = x; (t.y) = y; return t; 
#line 128 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 130 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ushort2 make_ushort2(unsigned short x, unsigned short y) 
#line 131 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 132 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ushort2 t; (t.x) = x; (t.y) = y; return t; 
#line 133 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 135 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline short3 make_short3(short x, short y, short z) 
#line 136 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 137 "e:\\cudatoolkit\\include\\vector_functions.hpp"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 138 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 140 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z) 
#line 141 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 142 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 143 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 145 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline short4 make_short4(short x, short y, short z, short w) 
#line 146 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 147 "e:\\cudatoolkit\\include\\vector_functions.hpp"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 148 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 150 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w) 
#line 151 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 152 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 153 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 155 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline int1 make_int1(int x) 
#line 156 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 157 "e:\\cudatoolkit\\include\\vector_functions.hpp"
int1 t; (t.x) = x; return t; 
#line 158 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 160 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline uint1 make_uint1(unsigned x) 
#line 161 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 162 "e:\\cudatoolkit\\include\\vector_functions.hpp"
uint1 t; (t.x) = x; return t; 
#line 163 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 165 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline int2 make_int2(int x, int y) 
#line 166 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 167 "e:\\cudatoolkit\\include\\vector_functions.hpp"
int2 t; (t.x) = x; (t.y) = y; return t; 
#line 168 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 170 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline uint2 make_uint2(unsigned x, unsigned y) 
#line 171 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 172 "e:\\cudatoolkit\\include\\vector_functions.hpp"
uint2 t; (t.x) = x; (t.y) = y; return t; 
#line 173 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 175 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline int3 make_int3(int x, int y, int z) 
#line 176 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 177 "e:\\cudatoolkit\\include\\vector_functions.hpp"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 178 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 180 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline uint3 make_uint3(unsigned x, unsigned y, unsigned z) 
#line 181 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 182 "e:\\cudatoolkit\\include\\vector_functions.hpp"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 183 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 185 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline int4 make_int4(int x, int y, int z, int w) 
#line 186 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 187 "e:\\cudatoolkit\\include\\vector_functions.hpp"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 188 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 190 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w) 
#line 191 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 192 "e:\\cudatoolkit\\include\\vector_functions.hpp"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 193 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 195 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline long1 make_long1(long x) 
#line 196 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 197 "e:\\cudatoolkit\\include\\vector_functions.hpp"
long1 t; (t.x) = x; return t; 
#line 198 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 200 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ulong1 make_ulong1(unsigned long x) 
#line 201 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 202 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ulong1 t; (t.x) = x; return t; 
#line 203 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 205 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline long2 make_long2(long x, long y) 
#line 206 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 207 "e:\\cudatoolkit\\include\\vector_functions.hpp"
long2 t; (t.x) = x; (t.y) = y; return t; 
#line 208 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 210 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ulong2 make_ulong2(unsigned long x, unsigned long y) 
#line 211 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 212 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ulong2 t; (t.x) = x; (t.y) = y; return t; 
#line 213 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 215 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline long3 make_long3(long x, long y, long z) 
#line 216 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 217 "e:\\cudatoolkit\\include\\vector_functions.hpp"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 218 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 220 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z) 
#line 221 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 222 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 223 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 225 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline long4 make_long4(long x, long y, long z, long w) 
#line 226 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 227 "e:\\cudatoolkit\\include\\vector_functions.hpp"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 228 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 230 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w) 
#line 231 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 232 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 233 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 235 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline float1 make_float1(float x) 
#line 236 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 237 "e:\\cudatoolkit\\include\\vector_functions.hpp"
float1 t; (t.x) = x; return t; 
#line 238 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 240 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline float2 make_float2(float x, float y) 
#line 241 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 242 "e:\\cudatoolkit\\include\\vector_functions.hpp"
float2 t; (t.x) = x; (t.y) = y; return t; 
#line 243 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 245 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline float3 make_float3(float x, float y, float z) 
#line 246 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 247 "e:\\cudatoolkit\\include\\vector_functions.hpp"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 248 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 250 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline float4 make_float4(float x, float y, float z, float w) 
#line 251 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 252 "e:\\cudatoolkit\\include\\vector_functions.hpp"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 253 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 255 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline longlong1 make_longlong1(__int64 x) 
#line 256 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 257 "e:\\cudatoolkit\\include\\vector_functions.hpp"
longlong1 t; (t.x) = x; return t; 
#line 258 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 260 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ulonglong1 make_ulonglong1(unsigned __int64 x) 
#line 261 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 262 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ulonglong1 t; (t.x) = x; return t; 
#line 263 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 265 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline longlong2 make_longlong2(__int64 x, __int64 y) 
#line 266 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 267 "e:\\cudatoolkit\\include\\vector_functions.hpp"
longlong2 t; (t.x) = x; (t.y) = y; return t; 
#line 268 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 270 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ulonglong2 make_ulonglong2(unsigned __int64 x, unsigned __int64 y) 
#line 271 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 272 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ulonglong2 t; (t.x) = x; (t.y) = y; return t; 
#line 273 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 275 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline longlong3 make_longlong3(__int64 x, __int64 y, __int64 z) 
#line 276 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 277 "e:\\cudatoolkit\\include\\vector_functions.hpp"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 278 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 280 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ulonglong3 make_ulonglong3(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z) 
#line 281 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 282 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 283 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 285 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline longlong4 make_longlong4(__int64 x, __int64 y, __int64 z, __int64 w) 
#line 286 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 287 "e:\\cudatoolkit\\include\\vector_functions.hpp"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 288 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 290 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline ulonglong4 make_ulonglong4(unsigned __int64 x, unsigned __int64 y, unsigned __int64 z, unsigned __int64 w) 
#line 291 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 292 "e:\\cudatoolkit\\include\\vector_functions.hpp"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 293 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 295 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline double1 make_double1(double x) 
#line 296 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 297 "e:\\cudatoolkit\\include\\vector_functions.hpp"
double1 t; (t.x) = x; return t; 
#line 298 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 300 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline double2 make_double2(double x, double y) 
#line 301 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 302 "e:\\cudatoolkit\\include\\vector_functions.hpp"
double2 t; (t.x) = x; (t.y) = y; return t; 
#line 303 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 305 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline double3 make_double3(double x, double y, double z) 
#line 306 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 307 "e:\\cudatoolkit\\include\\vector_functions.hpp"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t; 
#line 308 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 310 "e:\\cudatoolkit\\include\\vector_functions.hpp"
static __inline double4 make_double4(double x, double y, double z, double w) 
#line 311 "e:\\cudatoolkit\\include\\vector_functions.hpp"
{ 
#line 312 "e:\\cudatoolkit\\include\\vector_functions.hpp"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t; 
#line 313 "e:\\cudatoolkit\\include\\vector_functions.hpp"
} 
#line 47 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl _memccpy(void * _Dst, const void * _Src, int _Val, size_t _MaxCount); } 
#line 48 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) const void *__cdecl memchr(const void * _Buf, int _Val, size_t _MaxCount); } 
#line 49 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _memicmp(const void * _Buf1, const void * _Buf2, size_t _Size); } 
#line 50 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _memicmp_l(const void * _Buf1, const void * _Buf2, size_t _Size, _locale_t _Locale); } 
#line 51 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl memcmp(const void * _Buf1, const void * _Buf2, size_t _Size); } 
#line 55 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { void *__cdecl memcpy(void * _Dst, const void * _Src, size_t _Size); } 
#line 57 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl memcpy_s(void * _Dst, rsize_t _DstSize, const void * _Src, rsize_t _MaxCount); } 
#line 94 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { void *__cdecl memset(void * _Dst, int _Val, size_t _Size); } 
#line 98 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl memccpy(void * _Dst, const void * _Src, int _Val, size_t _Size); } 
#line 99 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl memicmp(const void * _Buf1, const void * _Buf2, size_t _Size); } 
#line 105 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strset_s(char * _Dst, size_t _DstSize, int _Value); } 
#line 106 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strset_s ( char ( & _Dest ) [ _Size ], int _Value ) throw ( ) { return _strset_s ( _Dest, _Size, _Value ); }
#line 107 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl _strset(char * _Dest, int _Value); } 
#line 109 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strcpy_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src); } 
#line 111 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl strcpy_s ( char ( & _Dest ) [ _Size ], const char * _Source ) throw ( ) { return strcpy_s ( _Dest, _Size, _Source ); }
#line 112 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strcpy(char * _Dest, const char * _Source); } 
#line 114 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strcat_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src); } 
#line 116 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl strcat_s ( char ( & _Dest ) [ _Size ], const char * _Source ) throw ( ) { return strcat_s ( _Dest, _Size, _Source ); }
#line 118 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strcat(char * _Dest, const char * _Source); } 
#line 120 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { int __cdecl strcmp(const char * _Str1, const char * _Str2); } 
#line 121 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { size_t __cdecl strlen(const char * _Str); } 
#line 125 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { 
#line 122 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
__declspec(dllimport) size_t __cdecl 
#line 125 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
strnlen(const char * _Str, size_t _MaxCount); } 
#line 130 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { static __inline size_t __cdecl strnlen_s(const char *_Str, size_t _MaxCount) 
#line 131 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
{ 
#line 132 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
return (_Str == (0)) ? 0 : strnlen(_Str, _MaxCount); 
#line 133 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
} } 
#line 136 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl memmove_s(void * _Dst, rsize_t _DstSize, const void * _Src, rsize_t _MaxCount); } 
#line 139 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) void *__cdecl memmove(void * _Dst, const void * _Src, size_t _Size); } 
#line 146 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strdup(const char * _Src); } 
#line 152 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strchr(const char * _Str, int _Val); } 
#line 153 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricmp(const char * _Str1, const char * _Str2); } 
#line 154 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strcmpi(const char * _Str1, const char * _Str2); } 
#line 155 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricmp_l(const char * _Str1, const char * _Str2, _locale_t _Locale); } 
#line 156 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strcoll(const char * _Str1, const char * _Str2); } 
#line 157 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strcoll_l(const char * _Str1, const char * _Str2, _locale_t _Locale); } 
#line 158 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricoll(const char * _Str1, const char * _Str2); } 
#line 159 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _stricoll_l(const char * _Str1, const char * _Str2, _locale_t _Locale); } 
#line 160 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strncoll(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 161 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strncoll_l(const char * _Str1, const char * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 162 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicoll(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 163 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicoll_l(const char * _Str1, const char * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 164 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strcspn(const char * _Str, const char * _Control); } 
#line 165 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strerror(const char * _ErrMsg); } 
#line 166 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strerror_s(char * _Buf, size_t _SizeInBytes, const char * _ErrMsg); } 
#line 167 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strerror_s ( char ( & _Buffer ) [ _Size ], const char * _ErrorMessage ) throw ( ) { return _strerror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 168 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strerror(int); } 
#line 170 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strerror_s(char * _Buf, size_t _SizeInBytes, int _ErrNum); } 
#line 172 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl strerror_s ( char ( & _Buffer ) [ _Size ], int _ErrorMessage ) throw ( ) { return strerror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 173 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strlwr_s(char * _Str, size_t _Size); } 
#line 174 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strlwr_s ( char ( & _String ) [ _Size ] ) throw ( ) { return _strlwr_s ( _String, _Size ); }
#line 175 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strlwr(char * _String); } 
#line 176 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strlwr_s_l(char * _Str, size_t _Size, _locale_t _Locale); } 
#line 177 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strlwr_s_l ( char ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _strlwr_s_l ( _String, _Size, _Locale ); }
#line 178 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strlwr_l(char * _String, _locale_t _Locale); } 
#line 180 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strncat_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src, rsize_t _MaxCount); } 
#line 182 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl strncat_s ( char ( & _Dest ) [ _Size ], const char * _Source, size_t _Count ) throw ( ) { return strncat_s ( _Dest, _Size, _Source, _Count ); }
#pragma warning(push)
#pragma warning(disable:6059)
#line 186 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strncat(char * _Dest, const char * _Source, size_t _Count); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl strncmp(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 189 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicmp(const char * _Str1, const char * _Str2, size_t _MaxCount); } 
#line 190 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _strnicmp_l(const char * _Str1, const char * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 192 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl strncpy_s(char * _Dst, rsize_t _SizeInBytes, const char * _Src, rsize_t _MaxCount); } 
#line 194 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl strncpy_s ( char ( & _Dest ) [ _Size ], const char * _Source, size_t _Count ) throw ( ) { return strncpy_s ( _Dest, _Size, _Source, _Count ); }
#line 195 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strncpy(char * _Dest, const char * _Source, size_t _Count); } 
#line 196 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strnset_s(char * _Str, size_t _SizeInBytes, int _Val, size_t _MaxCount); } 
#line 197 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strnset_s ( char ( & _Dest ) [ _Size ], int _Val, size_t _Count ) throw ( ) { return _strnset_s ( _Dest, _Size, _Val, _Count ); }
#line 198 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strnset(char * _Dest, int _Val, size_t _Count); } 
#line 199 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strpbrk(const char * _Str, const char * _Control); } 
#line 200 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strrchr(const char * _Str, int _Ch); } 
#line 201 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strrev(char * _Str); } 
#line 202 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strspn(const char * _Str, const char * _Control); } 
#line 203 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) const char *__cdecl strstr(const char * _Str, const char * _SubStr); } 
#line 204 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strtok(char * _Str, const char * _Delim); } 
#line 206 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strtok_s(char * _Str, const char * _Delim, char ** _Context); } 
#line 208 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strupr_s(char * _Str, size_t _Size); } 
#line 209 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strupr_s ( char ( & _String ) [ _Size ] ) throw ( ) { return _strupr_s ( _String, _Size ); }
#line 210 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strupr(char * _String); } 
#line 211 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strupr_s_l(char * _Str, size_t _Size, _locale_t _Locale); } 
#line 212 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _strupr_s_l ( char ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _strupr_s_l ( _String, _Size, _Locale ); }
#line 213 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl _strupr_l(char * _String, _locale_t _Locale); } 
#line 214 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl strxfrm(char * _Dst, const char * _Src, size_t _MaxCount); } 
#line 215 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl _strxfrm_l(char * _Dst, const char * _Src, size_t _MaxCount, _locale_t _Locale); } 
#line 221 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
inline char *__cdecl strchr(char *_Str, int _Ch) 
#line 222 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
{ return (char *)strchr((const char *)_Str, _Ch); } 
#line 223 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
inline char *__cdecl strpbrk(char *_Str, const char *_Control) 
#line 224 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
{ return (char *)strpbrk((const char *)_Str, _Control); } 
#line 225 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
inline char *__cdecl strrchr(char *_Str, int _Ch) 
#line 226 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
{ return (char *)strrchr((const char *)_Str, _Ch); } 
#line 227 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
inline char *__cdecl strstr(char *_Str, const char *_SubStr) 
#line 228 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
{ return (char *)strstr((const char *)_Str, _SubStr); } 
#line 232 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
inline void *__cdecl memchr(void *_Pv, int _C, size_t _N) 
#line 233 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
{ return (void *)memchr((const void *)_Pv, _C, _N); } 
#line 245 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strdup(const char * _Src); } 
#line 252 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strcmpi(const char * _Str1, const char * _Str2); } 
#line 253 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl stricmp(const char * _Str1, const char * _Str2); } 
#line 254 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strlwr(char * _Str); } 
#line 255 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl strnicmp(const char * _Str1, const char * _Str, size_t _MaxCount); } 
#line 256 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strnset(char * _Str, int _Val, size_t _MaxCount); } 
#line 257 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strrev(char * _Str); } 
#line 258 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { char *__cdecl strset(char * _Str, int _Val); } 
#line 259 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) char *__cdecl strupr(char * _Str); } 
#line 273 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsdup(const __wchar_t * _Str); } 
#line 280 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcscat_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src); } 
#line 282 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl wcscat_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source ) throw ( ) { return wcscat_s ( _Dest, _Size, _Source ); }
#line 284 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcscat(__wchar_t * _Dest, const __wchar_t * _Source); } 
#line 288 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcschr(const __wchar_t * _Str, __wchar_t _Ch); } 
#line 289 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcscmp(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 291 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcscpy_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src); } 
#line 293 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl wcscpy_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source ) throw ( ) { return wcscpy_s ( _Dest, _Size, _Source ); }
#line 294 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcscpy(__wchar_t * _Dest, const __wchar_t * _Source); } 
#line 295 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcscspn(const __wchar_t * _Str, const __wchar_t * _Control); } 
#line 296 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcslen(const __wchar_t * _Str); } 
#line 300 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { 
#line 297 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
__declspec(dllimport) size_t __cdecl 
#line 300 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
wcsnlen(const __wchar_t * _Src, size_t _MaxCount); } 
#line 305 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { static __inline size_t __cdecl wcsnlen_s(const __wchar_t *_Src, size_t _MaxCount) 
#line 306 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
{ 
#line 307 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
return (_Src == (0)) ? 0 : wcsnlen(_Src, _MaxCount); 
#line 308 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
} } 
#line 311 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcsncat_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src, rsize_t _MaxCount); } 
#line 313 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl wcsncat_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _Count ) throw ( ) { return wcsncat_s ( _Dest, _Size, _Source, _Count ); }
#pragma warning(push)
#pragma warning(disable:6059)
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsncat(__wchar_t * _Dest, const __wchar_t * _Source, size_t _Count); } 
#pragma warning(pop)
extern "C" { __declspec(dllimport) int __cdecl wcsncmp(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 320 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcsncpy_s(__wchar_t * _Dst, rsize_t _SizeInWords, const __wchar_t * _Src, rsize_t _MaxCount); } 
#line 322 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl wcsncpy_s ( wchar_t ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _Count ) throw ( ) { return wcsncpy_s ( _Dest, _Size, _Source, _Count ); }
#line 323 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsncpy(__wchar_t * _Dest, const __wchar_t * _Source, size_t _Count); } 
#line 324 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcspbrk(const __wchar_t * _Str, const __wchar_t * _Control); } 
#line 325 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcsrchr(const __wchar_t * _Str, __wchar_t _Ch); } 
#line 326 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsspn(const __wchar_t * _Str, const __wchar_t * _Control); } 
#line 329 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) const __wchar_t *__cdecl wcsstr(const __wchar_t * _Str, const __wchar_t * _SubStr); } 
#line 330 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcstok(__wchar_t * _Str, const __wchar_t * _Delim); } 
#line 332 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcstok_s(__wchar_t * _Str, const __wchar_t * _Delim, __wchar_t ** _Context); } 
#line 334 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcserror(int _ErrNum); } 
#line 335 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcserror_s(__wchar_t * _Buf, size_t _SizeInWords, int _ErrNum); } 
#line 336 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcserror_s ( wchar_t ( & _Buffer ) [ _Size ], int _Error ) throw ( ) { return _wcserror_s ( _Buffer, _Size, _Error ); }
#line 337 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl __wcserror(const __wchar_t * _Str); } 
#line 338 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl __wcserror_s(__wchar_t * _Buffer, size_t _SizeInWords, const __wchar_t * _ErrMsg); } 
#line 339 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl __wcserror_s ( wchar_t ( & _Buffer ) [ _Size ], const wchar_t * _ErrorMessage ) throw ( ) { return __wcserror_s ( _Buffer, _Size, _ErrorMessage ); }
#line 341 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicmp(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 342 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicmp_l(const __wchar_t * _Str1, const __wchar_t * _Str2, _locale_t _Locale); } 
#line 343 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicmp(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 344 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicmp_l(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 345 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsnset_s(__wchar_t * _Dst, size_t _SizeInWords, __wchar_t _Val, size_t _MaxCount); } 
#line 346 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsnset_s ( wchar_t ( & _Dst ) [ _Size ], wchar_t _Val, size_t _MaxCount ) throw ( ) { return _wcsnset_s ( _Dst, _Size, _Val, _MaxCount ); }
#line 347 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsnset(__wchar_t * _Str, __wchar_t _Val, size_t _MaxCount); } 
#line 348 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsrev(__wchar_t * _Str); } 
#line 349 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsset_s(__wchar_t * _Dst, size_t _SizeInWords, __wchar_t _Value); } 
#line 350 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsset_s ( wchar_t ( & _Str ) [ _Size ], wchar_t _Val ) throw ( ) { return _wcsset_s ( _Str, _Size, _Val ); }
#line 351 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsset(__wchar_t * _Str, __wchar_t _Val); } 
#line 353 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcslwr_s(__wchar_t * _Str, size_t _SizeInWords); } 
#line 354 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcslwr_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _wcslwr_s ( _String, _Size ); }
#line 355 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcslwr(__wchar_t * _String); } 
#line 356 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcslwr_s_l(__wchar_t * _Str, size_t _SizeInWords, _locale_t _Locale); } 
#line 357 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcslwr_s_l ( wchar_t ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _wcslwr_s_l ( _String, _Size, _Locale ); }
#line 358 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcslwr_l(__wchar_t * _String, _locale_t _Locale); } 
#line 359 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsupr_s(__wchar_t * _Str, size_t _Size); } 
#line 360 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsupr_s ( wchar_t ( & _String ) [ _Size ] ) throw ( ) { return _wcsupr_s ( _String, _Size ); }
#line 361 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsupr(__wchar_t * _String); } 
#line 362 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcsupr_s_l(__wchar_t * _Str, size_t _Size, _locale_t _Locale); } 
#line 363 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
template < size_t _Size > inline errno_t __cdecl _wcsupr_s_l ( wchar_t ( & _String ) [ _Size ], _locale_t _Locale ) throw ( ) { return _wcsupr_s_l ( _String, _Size, _Locale ); }
#line 364 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wcsupr_l(__wchar_t * _String, _locale_t _Locale); } 
#line 365 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsxfrm(__wchar_t * _Dst, const __wchar_t * _Src, size_t _MaxCount); } 
#line 366 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcsxfrm_l(__wchar_t * _Dst, const __wchar_t * _Src, size_t _MaxCount, _locale_t _Locale); } 
#line 367 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcscoll(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 368 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcscoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, _locale_t _Locale); } 
#line 369 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicoll(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 370 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsicoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, _locale_t _Locale); } 
#line 371 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsncoll(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 372 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsncoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 373 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicoll(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 374 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl _wcsnicoll_l(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount, _locale_t _Locale); } 
#line 382 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
inline __wchar_t *__cdecl wcschr(__wchar_t *_Str, __wchar_t _Ch) 
#line 383 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
{ return (__wchar_t *)wcschr((const __wchar_t *)_Str, _Ch); } 
#line 384 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
inline __wchar_t *__cdecl wcspbrk(__wchar_t *_Str, const __wchar_t *_Control) 
#line 385 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
{ return (__wchar_t *)wcspbrk((const __wchar_t *)_Str, _Control); } 
#line 386 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
inline __wchar_t *__cdecl wcsrchr(__wchar_t *_Str, __wchar_t _Ch) 
#line 387 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
{ return (__wchar_t *)wcsrchr((const __wchar_t *)_Str, _Ch); } 
#line 390 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
inline __wchar_t *__cdecl wcsstr(__wchar_t *_Str, const __wchar_t *_SubStr) 
#line 391 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
{ return (__wchar_t *)wcsstr((const __wchar_t *)_Str, _SubStr); } 
#line 403 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsdup(const __wchar_t * _Str); } 
#line 413 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsicmp(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 414 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsnicmp(const __wchar_t * _Str1, const __wchar_t * _Str2, size_t _MaxCount); } 
#line 415 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsnset(__wchar_t * _Str, __wchar_t _Val, size_t _MaxCount); } 
#line 416 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsrev(__wchar_t * _Str); } 
#line 417 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsset(__wchar_t * _Str, __wchar_t _Val); } 
#line 418 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcslwr(__wchar_t * _Str); } 
#line 419 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl wcsupr(__wchar_t * _Str); } 
#line 420 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\string.h"
extern "C" { __declspec(dllimport) int __cdecl wcsicoll(const __wchar_t * _Str1, const __wchar_t * _Str2); } 
#line 32 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
#pragma pack ( push, 8 )
#line 89 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { typedef long clock_t; }
#line 113 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { struct tm { 
#line 114 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
int tm_sec; 
#line 115 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
int tm_min; 
#line 116 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
int tm_hour; 
#line 117 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
int tm_mday; 
#line 118 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
int tm_mon; 
#line 119 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
int tm_year; 
#line 120 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
int tm_wday; 
#line 121 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
int tm_yday; 
#line 122 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
int tm_isdst; 
#line 123 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
}; }
#line 147 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) int *__cdecl __daylight(); } 
#line 151 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) long *__cdecl __dstbias(); } 
#line 155 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) long *__cdecl __timezone(); } 
#line 159 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) char **__cdecl __tzname(); } 
#line 162 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_daylight(int * _Daylight); } 
#line 163 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_dstbias(long * _Daylight_savings_bias); } 
#line 164 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_timezone(long * _Timezone); } 
#line 165 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_tzname(size_t * _ReturnValue, char * _Buffer, size_t _SizeInBytes, int _Index); } 
#line 174 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl asctime(const tm * _Tm); } 
#line 176 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl asctime_s(char * _Buf, size_t _SizeInBytes, const tm * _Tm); } 
#line 178 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl asctime_s ( char ( & _Buffer ) [ _Size ], const struct tm * _Time ) throw ( ) { return asctime_s ( _Buffer, _Size, _Time ); }
#line 180 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _ctime32(const __time32_t * _Time); } 
#line 181 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ctime32_s(char * _Buf, size_t _SizeInBytes, const __time32_t * _Time); } 
#line 182 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _ctime32_s ( char ( & _Buffer ) [ _Size ], const __time32_t * _Time ) throw ( ) { return _ctime32_s ( _Buffer, _Size, _Time ); }
#line 184 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) clock_t __cdecl clock(); } 
#line 185 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) double __cdecl _difftime32(__time32_t _Time1, __time32_t _Time2); } 
#line 187 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _gmtime32(const __time32_t * _Time); } 
#line 188 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gmtime32_s(tm * _Tm, const __time32_t * _Time); } 
#line 190 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _localtime32(const __time32_t * _Time); } 
#line 191 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _localtime32_s(tm * _Tm, const __time32_t * _Time); } 
#line 193 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl strftime(char * _Buf, size_t _SizeInBytes, const char * _Format, const tm * _Tm); } 
#line 194 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl _strftime_l(char * _Buf, size_t _Max_size, const char * _Format, const tm * _Tm, _locale_t _Locale); } 
#line 196 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strdate_s(char * _Buf, size_t _SizeInBytes); } 
#line 197 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _strdate_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return _strdate_s ( _Buffer, _Size ); }
#line 198 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _strdate(char * _Buffer); } 
#line 200 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _strtime_s(char * _Buf, size_t _SizeInBytes); } 
#line 201 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _strtime_s ( char ( & _Buffer ) [ _Size ] ) throw ( ) { return _strtime_s ( _Buffer, _Size ); }
#line 202 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _strtime(char * _Buffer); } 
#line 204 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _time32(__time32_t * _Time); } 
#line 205 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _mktime32(tm * _Tm); } 
#line 206 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) __time32_t __cdecl _mkgmtime32(tm * _Tm); } 
#line 210 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) void __cdecl _tzset(); } 
#line 214 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) double __cdecl _difftime64(__time64_t _Time1, __time64_t _Time2); } 
#line 215 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) char *__cdecl _ctime64(const __time64_t * _Time); } 
#line 216 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ctime64_s(char * _Buf, size_t _SizeInBytes, const __time64_t * _Time); } 
#line 217 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _ctime64_s ( char ( & _Buffer ) [ _Size ], const __time64_t * _Time ) throw ( ) { return _ctime64_s ( _Buffer, _Size, _Time ); }
#line 219 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _gmtime64(const __time64_t * _Time); } 
#line 220 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gmtime64_s(tm * _Tm, const __time64_t * _Time); } 
#line 222 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) tm *__cdecl _localtime64(const __time64_t * _Time); } 
#line 223 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _localtime64_s(tm * _Tm, const __time64_t * _Time); } 
#line 225 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _mktime64(tm * _Tm); } 
#line 226 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _mkgmtime64(tm * _Tm); } 
#line 227 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) __time64_t __cdecl _time64(__time64_t * _Time); } 
#line 231 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime in" "stead. See online help for details.")) unsigned __cdecl _getsystime(tm * _Tm); } 
#line 232 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime in" "stead. See online help for details.")) unsigned __cdecl _setsystime(tm * _Tm, unsigned _MilliSec); } 
#line 245 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wasctime(const tm * _Tm); } 
#line 246 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wasctime_s(__wchar_t * _Buf, size_t _SizeInWords, const tm * _Tm); } 
#line 247 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _wasctime_s ( wchar_t ( & _Buffer ) [ _Size ], const struct tm * _Time ) throw ( ) { return _wasctime_s ( _Buffer, _Size, _Time ); }
#line 249 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wctime32(const __time32_t * _Time); } 
#line 250 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctime32_s(__wchar_t * _Buf, size_t _SizeInWords, const __time32_t * _Time); } 
#line 251 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _wctime32_s ( wchar_t ( & _Buffer ) [ _Size ], const __time32_t * _Time ) throw ( ) { return _wctime32_s ( _Buffer, _Size, _Time ); }
#line 253 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcsftime(__wchar_t * _Buf, size_t _SizeInWords, const __wchar_t * _Format, const tm * _Tm); } 
#line 254 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcsftime_l(__wchar_t * _Buf, size_t _SizeInWords, const __wchar_t * _Format, const tm * _Tm, _locale_t _Locale); } 
#line 256 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wstrdate_s(__wchar_t * _Buf, size_t _SizeInWords); } 
#line 257 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _wstrdate_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wstrdate_s ( _Buffer, _Size ); }
#line 258 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wstrdate(__wchar_t * _Buffer); } 
#line 260 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wstrtime_s(__wchar_t * _Buf, size_t _SizeInWords); } 
#line 261 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _wstrtime_s ( wchar_t ( & _Buffer ) [ _Size ] ) throw ( ) { return _wstrtime_s ( _Buffer, _Size ); }
#line 262 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wstrtime(__wchar_t * _Buffer); } 
#line 264 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wctime64(const __time64_t * _Time); } 
#line 265 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctime64_s(__wchar_t * _Buf, size_t _SizeInWords, const __time64_t * _Time); } 
#line 266 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
template < size_t _Size > inline errno_t __cdecl _wctime64_s ( wchar_t ( & _Buffer ) [ _Size ], const __time64_t * _Time ) throw ( ) { return _wctime64_s ( _Buffer, _Size, _Time ); }
#line 27 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\wtime.inl"
#pragma warning(push)
#pragma warning(disable:4996)
#line 44 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\wtime.inl"
extern "C" { static __inline __wchar_t *__cdecl _wctime(const time_t *_Time) 
#line 45 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\wtime.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _wctime64(_Time); 
#pragma warning( pop )
} } 
#line 52 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\wtime.inl"
extern "C" { static __inline errno_t __cdecl _wctime_s(__wchar_t *_Buffer, size_t _SizeInWords, const time_t *_Time) 
#line 53 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\wtime.inl"
{ 
#line 54 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\wtime.inl"
return _wctime64_s(_Buffer, _SizeInWords, _Time); 
#line 55 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\wtime.inl"
} } 
#line 58 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\wtime.inl"
#pragma warning(pop)
#line 82 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline double __cdecl difftime(time_t _Time1, time_t _Time2) 
#line 83 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
{ 
#line 84 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
return _difftime64(_Time1, _Time2); 
#line 85 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
} } 
#line 86 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline char *__cdecl ctime(const time_t *_Time) 
#line 87 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _ctime64(_Time); 
#pragma warning( pop )
} } 
#line 94 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline errno_t __cdecl ctime_s(char *_Buffer, size_t _SizeInBytes, const time_t *_Time) 
#line 95 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
{ 
#line 96 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
return _ctime64_s(_Buffer, _SizeInBytes, _Time); 
#line 97 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
} } 
#line 99 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline tm *__cdecl gmtime(const time_t *_Time) 
#line 100 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _gmtime64(_Time); 
#pragma warning( pop )
} } 
#line 107 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline errno_t __cdecl gmtime_s(tm *_Tm, const time_t *_Time) 
#line 108 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
{ 
#line 109 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
return _gmtime64_s(_Tm, _Time); 
#line 110 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
} } 
#line 112 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline tm *__cdecl localtime(const time_t *_Time) 
#line 113 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
{ 
#pragma warning( push )
#pragma warning( disable : 4996 )
return _localtime64(_Time); 
#pragma warning( pop )
} } 
#line 119 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline errno_t __cdecl localtime_s(tm *_Tm, const time_t *_Time) 
#line 120 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
{ 
#line 121 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
return _localtime64_s(_Tm, _Time); 
#line 122 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
} } 
#line 123 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline time_t __cdecl mktime(tm *_Tm) 
#line 124 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
{ 
#line 125 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
return _mktime64(_Tm); 
#line 126 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
} } 
#line 127 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline time_t __cdecl _mkgmtime(tm *_Tm) 
#line 128 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
{ 
#line 129 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
return _mkgmtime64(_Tm); 
#line 130 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
} } 
#line 131 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
extern "C" { static __inline time_t __cdecl time(time_t *_Time) 
#line 132 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
{ 
#line 133 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
return _time64(_Time); 
#line 134 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.inl"
} } 
#line 291 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" __declspec(dllimport) int daylight; 
#line 292 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" __declspec(dllimport) long timezone; 
#line 293 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" __declspec(dllimport) char *tzname[2]; 
#line 297 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
extern "C" { __declspec(dllimport) void __cdecl tzset(); } 
#line 307 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\time.h"
#pragma pack ( pop )
#line 71 "e:\\cudatoolkit\\include\\common_functions.h"
extern "C" { __declspec(dllimport) extern clock_t __cdecl clock(); } 
#line 72 "e:\\cudatoolkit\\include\\common_functions.h"
extern "C" { extern void *__cdecl memset(void *, int, size_t); } 
#line 73 "e:\\cudatoolkit\\include\\common_functions.h"
extern "C" { extern void *__cdecl memcpy(void *, const void *, size_t); } 
#line 154 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __cdecl abs(int); } 
#line 155 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern long __cdecl labs(long); } 
#line 156 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __int64 llabs(__int64); } 
#line 206 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double __cdecl fabs(double x); } 
#line 247 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float fabsf(float x); } 
#line 251 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline int min(int, int); 
#line 253 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline unsigned umin(unsigned, unsigned); 
#line 254 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline __int64 llmin(__int64, __int64); 
#line 255 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline unsigned __int64 ullmin(unsigned __int64, unsigned __int64); 
#line 278 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fminf(float x, float y); } 
#line 298 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl fmin(double x, double y); 
#line 303 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline int max(int, int); 
#line 305 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline unsigned umax(unsigned, unsigned); 
#line 306 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline __int64 llmax(__int64, __int64); 
#line 307 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline unsigned __int64 ullmax(unsigned __int64, unsigned __int64); 
#line 330 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fmaxf(float x, float y); } 
#line 350 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl fmax(double, double); 
#line 392 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl sin(double x); 
#line 425 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl cos(double x); 
#line 444 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern void sincos(double x, double * sptr, double * cptr); } 
#line 460 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern void sincosf(float x, float * sptr, float * cptr); } 
#line 505 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl tan(double x); 
#line 574 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl sqrt(double x); 
#line 646 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double rsqrt(double x); } 
#line 716 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float rsqrtf(float x); } 
#line 774 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl log2(double x); 
#line 799 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl exp2(double x); 
#line 824 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl exp2f(float x); } 
#line 849 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double exp10(double x); } 
#line 872 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float exp10f(float x); } 
#line 920 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl expm1(double x); 
#line 965 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl expm1f(float x); } 
#line 1020 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl log2f(float x); } 
#line 1072 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl log10(double x); 
#line 1143 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl log(double x); 
#line 1239 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl log1p(double x); 
#line 1336 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl log1pf(float x); } 
#line 1409 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl floor(double x); 
#line 1448 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl exp(double x); 
#line 1479 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl cosh(double x); 
#line 1509 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl sinh(double x); 
#line 1539 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl tanh(double x); 
#line 1576 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl acosh(double x); 
#line 1614 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl acoshf(float x); } 
#line 1630 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl asinh(double x); 
#line 1646 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl asinhf(float x); } 
#line 1700 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl atanh(double x); 
#line 1754 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl atanhf(float x); } 
#line 1811 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double x, int exp); 
#line 1867 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float ldexpf(float x, int exp); } 
#line 1921 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl logb(double x); 
#line 1976 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl logbf(float x); } 
#line 2006 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) int __cdecl ilogb(double x); 
#line 2036 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int __cdecl ilogbf(float x); } 
#line 2112 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl scalbn(double x, int n); 
#line 2188 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl scalbnf(float x, int n); } 
#line 2264 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl scalbln(double x, long n); 
#line 2340 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl scalblnf(float x, long n); } 
#line 2416 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double x, int * nptr); 
#line 2491 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float frexpf(float x, int * nptr); } 
#line 2507 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl round(double x); 
#line 2524 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl roundf(float x); } 
#line 2542 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) long __cdecl lround(double x); 
#line 2560 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern long __cdecl lroundf(float x); } 
#line 2578 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) __int64 __cdecl llround(double x); 
#line 2596 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern __int64 __cdecl llroundf(float x); } 
#line 2611 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl rint(double x); 
#line 2626 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl rintf(float x); } 
#line 2642 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) long __cdecl lrint(double x); 
#line 2658 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern long __cdecl lrintf(float x); } 
#line 2674 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) __int64 __cdecl llrint(double x); 
#line 2690 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern __int64 __cdecl llrintf(float x); } 
#line 2743 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl nearbyint(double x); 
#line 2796 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl nearbyintf(float x); } 
#line 2856 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double x); 
#line 2870 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl trunc(double x); 
#line 2885 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl truncf(float x); } 
#line 2911 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl fdim(double x, double y); 
#line 2937 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fdimf(float x, float y); } 
#line 2971 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl atan2(double y, double x); 
#line 3002 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl atan(double x); 
#line 3025 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl acos(double x); 
#line 3057 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl asin(double x); 
#line 3097 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { static __inline double __cdecl hypot(double x, double y); } 
#line 3151 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double rhypot(double x, double y); } 
#line 3195 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { static __inline float __cdecl hypotf(float x, float y); } 
#line 3249 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float rhypotf(float x, float y); } 
#line 3296 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl norm3d(double a, double b, double c); } 
#line 3347 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double rnorm3d(double a, double b, double c); } 
#line 3396 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl norm4d(double a, double b, double c, double d); } 
#line 3452 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double rnorm4d(double a, double b, double c, double d); } 
#line 3497 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double norm(int dim, const double * t); } 
#line 3548 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double rnorm(int dim, const double * t); } 
#line 3600 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float rnormf(int dim, const float * a); } 
#line 3644 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float normf(int dim, const float * a); } 
#line 3689 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float norm3df(float a, float b, float c); } 
#line 3740 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float rnorm3df(float a, float b, float c); } 
#line 3789 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float norm4df(float a, float b, float c, float d); } 
#line 3845 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float rnorm4df(float a, float b, float c, float d); } 
#line 3931 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl cbrt(double x); 
#line 4017 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl cbrtf(float x); } 
#line 4070 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double rcbrt(double x); } 
#line 4120 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float rcbrtf(float x); } 
#line 4180 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double sinpi(double x); } 
#line 4240 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float sinpif(float x); } 
#line 4292 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double cospi(double x); } 
#line 4344 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float cospif(float x); } 
#line 4374 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern void sincospi(double x, double * sptr, double * cptr); } 
#line 4404 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern void sincospif(float x, float * sptr, float * cptr); } 
#line 4716 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl pow(double x, double y); 
#line 4772 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl modf(double x, double * iptr); } 
#line 4831 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" double __cdecl fmod(double x, double y); 
#line 4919 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl remainder(double x, double y); 
#line 5009 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl remainderf(float x, float y); } 
#line 5063 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl remquo(double x, double y, int * quo); } 
#line 5117 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl remquof(float x, float y, int * quo); } 
#line 5156 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl j0(double x); } 
#line 5198 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float j0f(float x); } 
#line 5259 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl j1(double x); } 
#line 5320 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float j1f(float x); } 
#line 5363 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl jn(int n, double x); } 
#line 5406 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float jnf(int n, float x); } 
#line 5458 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl y0(double x); } 
#line 5510 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float y0f(float x); } 
#line 5562 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl y1(double x); } 
#line 5614 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float y1f(float x); } 
#line 5667 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl yn(int n, double x); } 
#line 5720 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float ynf(int n, float x); } 
#line 5747 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl cyl_bessel_i0(double x); } 
#line 5773 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float cyl_bessel_i0f(float x); } 
#line 5800 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl cyl_bessel_i1(double x); } 
#line 5826 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float cyl_bessel_i1f(float x); } 
#line 5911 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl erf(double x); 
#line 5993 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl erff(float x); } 
#line 6055 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double erfinv(double y); } 
#line 6112 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float erfinvf(float y); } 
#line 6153 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl erfc(double x); 
#line 6191 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl erfcf(float x); } 
#line 6319 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl lgamma(double x); 
#line 6380 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double erfcinv(double y); } 
#line 6436 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float erfcinvf(float y); } 
#line 6494 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double normcdfinv(double y); } 
#line 6552 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float normcdfinvf(float y); } 
#line 6595 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double normcdf(double y); } 
#line 6638 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float normcdff(float y); } 
#line 6713 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern double erfcx(double x); } 
#line 6788 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern float erfcxf(float x); } 
#line 6924 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl lgammaf(float x); } 
#line 7033 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl tgamma(double x); 
#line 7142 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl tgammaf(float x); } 
#line 7155 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl copysign(double x, double y); 
#line 7168 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl copysignf(float x, float y); } 
#line 7205 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" __declspec(dllimport) double __cdecl nextafter(double x, double y); 
#line 7242 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl nextafterf(float x, float y); } 
#line 7258 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl nan(const char * tagp); } 
#line 7274 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl nanf(const char * tagp); } 
#line 7279 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __isinff(float); } 
#line 7280 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __isnanf(float); } 
#line 7290 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __finite(double); } 
#line 7291 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __finitef(float); } 
#line 7292 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __signbit(double); } 
#line 7293 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __isnan(double); } 
#line 7294 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __isinf(double); } 
#line 7297 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __signbitf(float); } 
#line 7458 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl fma(double x, double y, double z); } 
#line 7616 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl fmaf(float x, float y, float z); } 
#line 7625 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __signbitl(long double); } 
#line 7631 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __finitel(long double); } 
#line 7632 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __isinfl(long double); } 
#line 7633 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern int __isnanl(long double); } 
#line 7683 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float acosf(float x); } 
#line 7723 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float asinf(float x); } 
#line 7763 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float atanf(float x); } 
#line 7796 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float atan2f(float y, float x); } 
#line 7820 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float cosf(float x); } 
#line 7862 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float sinf(float x); } 
#line 7904 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float tanf(float x); } 
#line 7928 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float coshf(float x); } 
#line 7969 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float sinhf(float x); } 
#line 7999 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float tanhf(float x); } 
#line 8050 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float logf(float x); } 
#line 8100 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float expf(float x); } 
#line 8151 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float log10f(float x); } 
#line 8206 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float modff(float x, float * iptr); } 
#line 8514 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float powf(float x, float y); } 
#line 8583 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float sqrtf(float x); } 
#line 8642 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float ceilf(float x); } 
#line 8714 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float floorf(float x); } 
#line 8773 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { extern __inline float fmodf(float x, float y); } 
#line 24 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
#pragma pack ( push, 8 )
#line 37 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { struct _exception { 
#line 38 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
int type; 
#line 39 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
char *name; 
#line 40 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
double arg1; 
#line 41 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
double arg2; 
#line 42 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
double retval; 
#line 43 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; }
#line 54 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { struct _complex { 
#line 55 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
double x, y; 
#line 56 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; }
#line 67 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { typedef float float_t; }
#line 68 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { typedef double double_t; }
#line 90 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double _HUGE; 
#line 184 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { void __cdecl _fperrraise(int _Except); } 
#line 186 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dclass(double _X); } 
#line 187 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldclass(long double _X); } 
#line 188 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdclass(float _X); } 
#line 190 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _dsign(double _X); } 
#line 191 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _ldsign(long double _X); } 
#line 192 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _fdsign(float _X); } 
#line 194 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _dpcomp(double _X, double _Y); } 
#line 195 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _ldpcomp(long double _X, long double _Y); } 
#line 196 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _fdpcomp(float _X, float _Y); } 
#line 198 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dtest(double * _Px); } 
#line 199 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldtest(long double * _Px); } 
#line 200 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdtest(float * _Px); } 
#line 202 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _d_int(double * _Px, short _Xexp); } 
#line 203 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ld_int(long double * _Px, short _Xexp); } 
#line 204 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fd_int(float * _Px, short _Xexp); } 
#line 206 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dscale(double * _Px, long _Lexp); } 
#line 207 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldscale(long double * _Px, long _Lexp); } 
#line 208 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdscale(float * _Px, long _Lexp); } 
#line 210 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dunscale(short * _Pex, double * _Px); } 
#line 211 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldunscale(short * _Pex, long double * _Px); } 
#line 212 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdunscale(short * _Pex, float * _Px); } 
#line 214 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dexp(double * _Px, double _Y, long _Eoff); } 
#line 215 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _ldexp(long double * _Px, long double _Y, long _Eoff); } 
#line 216 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdexp(float * _Px, float _Y, long _Eoff); } 
#line 218 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _dnorm(unsigned short * _Ps); } 
#line 219 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) short __cdecl _fdnorm(unsigned short * _Ps); } 
#line 221 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl _dpoly(double _X, const double * _Tab, int _N); } 
#line 222 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { long double __cdecl _ldpoly(long double _X, const long double * _Tab, int _N); } 
#line 223 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { float __cdecl _fdpoly(float _X, const float * _Tab, int _N); } 
#line 225 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _dlog(double _X, int _Baseflag); } 
#line 226 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl _ldlog(long double _X, int _Baseflag); } 
#line 227 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _fdlog(float _X, int _Baseflag); } 
#line 229 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _dsin(double _X, unsigned _Qoff); } 
#line 230 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl _ldsin(long double _X, unsigned _Qoff); } 
#line 231 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _fdsin(float _X, unsigned _Qoff); } 
#line 238 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { typedef 
#line 235 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
union { 
#line 236 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
unsigned short _Sh[8]; 
#line 237 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
double _Val; 
#line 238 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} _double_val; }
#line 245 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { typedef 
#line 242 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
union { 
#line 243 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
unsigned short _Sh[8]; 
#line 244 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
float _Val; 
#line 245 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} _float_val; }
#line 252 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { typedef 
#line 249 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
union { 
#line 250 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
unsigned short _Sh[8]; 
#line 251 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
long double _Val; 
#line 252 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} _ldouble_val; }
#line 260 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { typedef 
#line 255 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
union { 
#line 256 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
unsigned short _Word[8]; 
#line 257 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
float _Float; 
#line 258 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
double _Double; 
#line 259 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
long double _Long_double; 
#line 260 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} _float_const; }
#line 262 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" const _float_const _Denorm_C, _Inf_C, _Nan_C, _Snan_C, _Hugeval_C; 
#line 263 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" const _float_const _FDenorm_C, _FInf_C, _FNan_C, _FSnan_C; 
#line 264 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" const _float_const _LDenorm_C, _LInf_C, _LNan_C, _LSnan_C; 
#line 266 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" const _float_const _Eps_C, _Rteps_C; 
#line 267 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" const _float_const _FEps_C, _FRteps_C; 
#line 268 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" const _float_const _LEps_C, _LRteps_C; 
#line 270 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" const double _Zero_C, _Xbig_C; 
#line 271 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" const float _FZero_C, _FXbig_C; 
#line 272 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" const long double _LZero_C, _LXbig_C; 
#line 304 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
__declspec(nothrow) inline int fpclassify(float _X) 
#line 305 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 306 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _fdtest(&_X); 
#line 307 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} 
#line 309 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
__declspec(nothrow) inline int fpclassify(double _X) 
#line 310 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 311 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _dtest(&_X); 
#line 312 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} 
#line 314 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
__declspec(nothrow) inline int fpclassify(long double _X) 
#line 315 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 316 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _ldtest(&_X); 
#line 317 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} 
#line 319 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
__declspec(nothrow) inline bool signbit(float _X) 
#line 320 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 321 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _fdsign(_X) != 0; 
#line 322 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} 
#line 324 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
__declspec(nothrow) inline bool signbit(double _X) 
#line 325 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 326 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _dsign(_X) != 0; 
#line 327 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} 
#line 329 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
__declspec(nothrow) inline bool signbit(long double _X) 
#line 330 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 331 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _ldsign(_X) != 0; 
#line 332 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} 
#line 334 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
__declspec(nothrow) inline int _fpcomp(float _X, float _Y) 
#line 335 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 336 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _fdpcomp(_X, _Y); 
#line 337 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} 
#line 339 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
__declspec(nothrow) inline int _fpcomp(double _X, double _Y) 
#line 340 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 341 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _dpcomp(_X, _Y); 
#line 342 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} 
#line 344 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
__declspec(nothrow) inline int _fpcomp(long double _X, long double _Y) 
#line 345 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 346 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _ldpcomp(_X, _Y); 
#line 347 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} 
#line 349 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template< class _Trc, class _Tre> struct _Combined_type { 
#line 351 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
typedef float _Type; 
#line 352 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; 
#line 354 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template<> struct _Combined_type< float, double>  { 
#line 356 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
typedef double _Type; 
#line 357 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; 
#line 359 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template<> struct _Combined_type< float, long double>  { 
#line 361 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
typedef long double _Type; 
#line 362 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; 
#line 364 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template< class _Ty, class _T2> struct _Real_widened { 
#line 366 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
typedef long double _Type; 
#line 367 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; 
#line 369 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template<> struct _Real_widened< float, float>  { 
#line 371 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
typedef float _Type; 
#line 372 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; 
#line 374 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template<> struct _Real_widened< float, double>  { 
#line 376 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
typedef double _Type; 
#line 377 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; 
#line 379 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template<> struct _Real_widened< double, float>  { 
#line 381 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
typedef double _Type; 
#line 382 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; 
#line 384 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template<> struct _Real_widened< double, double>  { 
#line 386 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
typedef double _Type; 
#line 387 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; 
#line 389 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template< class _Ty> struct _Real_type { 
#line 391 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
typedef double _Type; 
#line 392 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; 
#line 394 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template<> struct _Real_type< float>  { 
#line 396 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
typedef float _Type; 
#line 397 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; 
#line 399 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template<> struct _Real_type< long double>  { 
#line 401 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
typedef long double _Type; 
#line 402 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
}; 
#line 404 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _T1, class _T2 > inline __declspec ( nothrow ) int _fpcomp ( _T1 _X, _T2 _Y )
{
    typedef typename _Combined_type < float,
        typename _Real_widened <
        typename _Real_type < _T1 > :: _Type,
        typename _Real_type < _T2 > :: _Type > :: _Type > :: _Type _Tw;
    return ( _fpcomp ( ( _Tw ) _X, ( _Tw ) _Y ) );
}
#line 413 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isfinite ( _Ty _X )
{
    return ( fpclassify ( _X ) <= 0 );
}
#line 418 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isinf ( _Ty _X )
{
    return ( fpclassify ( _X ) == 1 );
}
#line 423 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isnan ( _Ty _X )
{
    return ( fpclassify ( _X ) == 2 );
}
#line 428 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _Ty > inline __declspec ( nothrow ) bool isnormal ( _Ty _X )
{
    return ( fpclassify ( _X ) == ( - 1 ) );
}
#line 433 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isgreater ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & 4 ) != 0 );
}
#line 438 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isgreaterequal ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & ( 2 | 4 ) ) != 0 );
}
#line 443 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isless ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & 1 ) != 0 );
}
#line 448 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool islessequal ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & ( 1 | 2 ) ) != 0 );
}
#line 453 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool islessgreater ( _Ty1 _X, _Ty2 _Y )
{
    return ( ( _fpcomp ( _X, _Y ) & ( 1 | 4 ) ) != 0 );
}
#line 458 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _Ty1, class _Ty2 > inline __declspec ( nothrow ) bool isunordered ( _Ty1 _X, _Ty2 _Y )
{
    return ( _fpcomp ( _X, _Y ) == 0 );
}
#line 470 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { int __cdecl abs(int _X); } 
#line 471 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { long __cdecl labs(long _X); } 
#line 472 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __int64 __cdecl llabs(__int64 _X); } 
#line 474 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl acos(double _X); 
#line 475 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl acosh(double _X); 
#line 476 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl asin(double _X); 
#line 477 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl asinh(double _X); 
#line 478 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl atan(double _X); 
#line 479 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl atanh(double _X); 
#line 480 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl atan2(double _Y, double _X); 
#line 482 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl cbrt(double _X); 
#line 483 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl copysign(double _X, double _Y); 
#line 484 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl cos(double _X); 
#line 485 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl cosh(double _X); 
#line 486 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl erf(double _X); 
#line 487 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl erfc(double _X); 
#line 488 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl exp(double _X); 
#line 489 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl exp2(double _X); 
#line 490 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl expm1(double _X); 
#line 491 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { double __cdecl fabs(double _X); } 
#line 492 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl fdim(double _X, double _Y); 
#line 493 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl fma(double _X, double _Y, double _Z); } 
#line 494 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl fmax(double _X, double _Y); 
#line 495 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl fmin(double _X, double _Y); 
#line 496 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl fmod(double _X, double _Y); 
#line 497 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) int __cdecl ilogb(double _X); 
#line 498 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl lgamma(double _X); 
#line 499 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) __int64 __cdecl llrint(double _X); 
#line 500 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) __int64 __cdecl llround(double _X); 
#line 501 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl log(double _X); 
#line 502 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl log10(double _X); 
#line 503 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl log1p(double _X); 
#line 504 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl log2(double _X); 
#line 505 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl logb(double _X); 
#line 506 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) long __cdecl lrint(double _X); 
#line 507 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) long __cdecl lround(double _X); 
#line 508 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl nan(const char *); } 
#line 509 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl nearbyint(double _X); 
#line 510 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl nextafter(double _X, double _Y); 
#line 511 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl nexttoward(double _X, long double _Y); 
#line 512 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl pow(double _X, double _Y); 
#line 513 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl remainder(double _X, double _Y); 
#line 514 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl remquo(double _X, double _Y, int * _Z); } 
#line 515 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl rint(double _X); 
#line 516 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl round(double _X); 
#line 517 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl scalbln(double _X, long _Y); 
#line 518 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl scalbn(double _X, int _Y); 
#line 519 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl sin(double _X); 
#line 520 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl sinh(double _X); 
#line 521 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl sqrt(double _X); 
#line 522 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl tan(double _X); 
#line 523 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" double __cdecl tanh(double _X); 
#line 524 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl tgamma(double _X); 
#line 525 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl trunc(double _X); 
#line 527 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl atof(const char * _String); } 
#line 528 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _atof_l(const char * _String, _locale_t _Locale); } 
#line 530 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _cabs(_complex _Complex_value); } 
#line 531 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double _X); 
#line 533 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _chgsign(double _X); } 
#line 534 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _copysign(double _Number, double _Sign); } 
#line 536 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl floor(double _X); 
#line 537 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double _X, int * _Y); 
#line 538 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _hypot(double _X, double _Y); } 
#line 539 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _j0(double _X); } 
#line 540 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _j1(double _X); } 
#line 541 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _jn(int _X, double _Y); } 
#line 542 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double _X, int _Y); 
#line 547 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { int __cdecl _matherr(_exception * _Except); } 
#line 550 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl modf(double _X, double * _Y); } 
#line 551 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _y0(double _X); } 
#line 552 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _y1(double _X); } 
#line 553 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl _yn(int _X, double _Y); } 
#line 555 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline double __cdecl hypot(double _X, double _Y) 
#line 556 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 557 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _hypot(_X, _Y); 
#line 558 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 561 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl acoshf(float _X); } 
#line 562 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl asinhf(float _X); } 
#line 563 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl atanhf(float _X); } 
#line 564 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl cbrtf(float _X); } 
#line 565 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _chgsignf(float _X); } 
#line 566 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl copysignf(float _X, float _Y); } 
#line 567 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _copysignf(float _Number, float _Sign); } 
#line 568 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl erff(float _X); } 
#line 569 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl erfcf(float _X); } 
#line 570 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl expm1f(float _X); } 
#line 571 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl exp2f(float _X); } 
#line 572 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fdimf(float _X, float _Y); } 
#line 573 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fmaf(float _X, float _Y, float _Z); } 
#line 574 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fmaxf(float _X, float _Y); } 
#line 575 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl fminf(float _X, float _Y); } 
#line 576 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl _hypotf(float _X, float _Y); } 
#line 577 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) int __cdecl ilogbf(float _X); } 
#line 578 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl lgammaf(float _X); } 
#line 579 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llrintf(float _X); } 
#line 580 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llroundf(float _X); } 
#line 581 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl log1pf(float _X); } 
#line 582 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl log2f(float _X); } 
#line 583 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl logbf(float _X); } 
#line 584 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lrintf(float _X); } 
#line 585 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lroundf(float _X); } 
#line 586 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nanf(const char *); } 
#line 587 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nearbyintf(float _X); } 
#line 588 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nextafterf(float _X, float _Y); } 
#line 589 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl nexttowardf(float _X, long double _Y); } 
#line 590 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl remainderf(float _X, float _Y); } 
#line 591 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl remquof(float _X, float _Y, int * _Z); } 
#line 592 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl rintf(float _X); } 
#line 593 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl roundf(float _X); } 
#line 594 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl scalblnf(float _X, long _Y); } 
#line 595 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl scalbnf(float _X, int _Y); } 
#line 596 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl tgammaf(float _X); } 
#line 597 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) float __cdecl truncf(float _X); } 
#line 601 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) int __cdecl _set_SSE2_enable(int _Flag); } 
#line 637 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl acosf(float _X) 
#line 638 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 639 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)acos(_X); 
#line 640 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 642 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl asinf(float _X) 
#line 643 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 644 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)asin(_X); 
#line 645 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 647 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl atan2f(float _Y, float _X) 
#line 648 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 649 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)atan2(_Y, _X); 
#line 650 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 652 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl atanf(float _X) 
#line 653 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 654 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)atan(_X); 
#line 655 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 657 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl ceilf(float _X) 
#line 658 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 659 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)ceil(_X); 
#line 660 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 662 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl cosf(float _X) 
#line 663 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 664 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)cos(_X); 
#line 665 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 667 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl coshf(float _X) 
#line 668 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 669 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)cosh(_X); 
#line 670 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 672 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl expf(float _X) 
#line 673 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 674 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)exp(_X); 
#line 675 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 685 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl fabsf(float _X) 
#line 686 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 687 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)fabs(_X); 
#line 688 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 699 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl floorf(float _X) 
#line 700 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 701 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)floor(_X); 
#line 702 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 704 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl fmodf(float _X, float _Y) 
#line 705 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 706 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)fmod(_X, _Y); 
#line 707 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 711 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl frexpf(float _X, int *_Y) 
#line 712 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 713 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)frexp(_X, _Y); 
#line 714 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 716 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl hypotf(float _X, float _Y) 
#line 717 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 718 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _hypotf(_X, _Y); 
#line 719 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 721 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl ldexpf(float _X, int _Y) 
#line 722 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 723 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)ldexp(_X, _Y); 
#line 724 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 740 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl log10f(float _X) 
#line 741 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 742 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)log10(_X); 
#line 743 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 745 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl logf(float _X) 
#line 746 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 747 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)log(_X); 
#line 748 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 750 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl modff(float _X, float *_Y) 
#line 751 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 752 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
double _F, _I; 
#line 753 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
_F = modf(_X, &_I); 
#line 754 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
(*_Y) = ((float)_I); 
#line 755 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)_F; 
#line 756 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 758 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl powf(float _X, float _Y) 
#line 759 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 760 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)pow(_X, _Y); 
#line 761 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 763 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl sinf(float _X) 
#line 764 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 765 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)sin(_X); 
#line 766 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 768 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl sinhf(float _X) 
#line 769 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 770 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)sinh(_X); 
#line 771 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 773 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl sqrtf(float _X) 
#line 774 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 775 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)sqrt(_X); 
#line 776 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 778 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl tanf(float _X) 
#line 779 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 780 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)tan(_X); 
#line 781 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 783 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline float __cdecl tanhf(float _X) 
#line 784 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 785 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return (float)tanh(_X); 
#line 786 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 790 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl acoshl(long double _X); } 
#line 792 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl acosl(long double _X) 
#line 793 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 794 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return acos((double)_X); 
#line 795 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 797 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl asinhl(long double _X); } 
#line 799 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl asinl(long double _X) 
#line 800 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 801 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return asin((double)_X); 
#line 802 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 804 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl atan2l(long double _Y, long double _X) 
#line 805 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 806 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return atan2((double)_Y, (double)_X); 
#line 807 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 809 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl atanhl(long double _X); } 
#line 811 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl atanl(long double _X) 
#line 812 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 813 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return atan((double)_X); 
#line 814 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 816 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl cbrtl(long double _X); } 
#line 818 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl ceill(long double _X) 
#line 819 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 820 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return ceil((double)_X); 
#line 821 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 823 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl _chgsignl(long double _X) 
#line 824 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 825 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _chgsign((double)_X); 
#line 826 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 828 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl copysignl(long double _X, long double _Y); } 
#line 830 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl _copysignl(long double _X, long double _Y) 
#line 831 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 832 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _copysign((double)_X, (double)_Y); 
#line 833 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 835 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl coshl(long double _X) 
#line 836 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 837 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return cosh((double)_X); 
#line 838 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 840 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl cosl(long double _X) 
#line 841 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 842 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return cos((double)_X); 
#line 843 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 845 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl erfl(long double _X); } 
#line 846 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl erfcl(long double _X); } 
#line 848 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl expl(long double _X) 
#line 849 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 850 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return exp((double)_X); 
#line 851 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 853 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl exp2l(long double _X); } 
#line 854 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl expm1l(long double _X); } 
#line 856 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl fabsl(long double _X) 
#line 857 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 858 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return fabs((double)_X); 
#line 859 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 861 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fdiml(long double _X, long double _Y); } 
#line 863 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl floorl(long double _X) 
#line 864 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 865 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return floor((double)_X); 
#line 866 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 868 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fmal(long double _X, long double _Y, long double _Z); } 
#line 869 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fmaxl(long double _X, long double _Y); } 
#line 870 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl fminl(long double _X, long double _Y); } 
#line 872 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl fmodl(long double _X, long double _Y) 
#line 873 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 874 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return fmod((double)_X, (double)_Y); 
#line 875 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 877 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl frexpl(long double _X, int *_Y) 
#line 878 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 879 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return frexp((double)_X, _Y); 
#line 880 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 882 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) int __cdecl ilogbl(long double _X); } 
#line 884 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl _hypotl(long double _X, long double _Y) 
#line 885 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 886 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _hypot((double)_X, (double)_Y); 
#line 887 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 889 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl hypotl(long double _X, long double _Y) 
#line 890 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 891 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _hypot((double)_X, (double)_Y); 
#line 892 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 894 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl ldexpl(long double _X, int _Y) 
#line 895 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 896 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return ldexp((double)_X, _Y); 
#line 897 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 899 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl lgammal(long double _X); } 
#line 900 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llrintl(long double _X); } 
#line 901 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) __int64 __cdecl llroundl(long double _X); } 
#line 903 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl logl(long double _X) 
#line 904 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 905 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return log((double)_X); 
#line 906 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 908 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl log10l(long double _X) 
#line 909 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 910 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return log10((double)_X); 
#line 911 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 913 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl log1pl(long double _X); } 
#line 914 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl log2l(long double _X); } 
#line 915 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl logbl(long double _X); } 
#line 916 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lrintl(long double _X); } 
#line 917 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long __cdecl lroundl(long double _X); } 
#line 919 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl modfl(long double _X, long double *_Y) 
#line 920 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 921 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
double _F, _I; 
#line 922 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
_F = modf((double)_X, &_I); 
#line 923 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
(*_Y) = _I; 
#line 924 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return _F; 
#line 925 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 926 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nanl(const char *); } 
#line 927 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nearbyintl(long double _X); } 
#line 928 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nextafterl(long double _X, long double _Y); } 
#line 929 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl nexttowardl(long double _X, long double _Y); } 
#line 931 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl powl(long double _X, long double _Y) 
#line 932 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 933 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return pow((double)_X, (double)_Y); 
#line 934 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 936 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl remainderl(long double _X, long double _Y); } 
#line 937 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl remquol(long double _X, long double _Y, int * _Z); } 
#line 938 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl rintl(long double _X); } 
#line 939 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl roundl(long double _X); } 
#line 940 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl scalblnl(long double _X, long _Y); } 
#line 941 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl scalbnl(long double _X, int _Y); } 
#line 943 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl sinhl(long double _X) 
#line 944 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 945 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return sinh((double)_X); 
#line 946 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 948 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl sinl(long double _X) 
#line 949 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 950 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return sin((double)_X); 
#line 951 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 953 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl sqrtl(long double _X) 
#line 954 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 955 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return sqrt((double)_X); 
#line 956 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 958 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl tanhl(long double _X) 
#line 959 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 960 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return tanh((double)_X); 
#line 961 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 963 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __inline long double __cdecl tanl(long double _X) 
#line 964 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ 
#line 965 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
return tan((double)_X); 
#line 966 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
} } 
#line 968 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl tgammal(long double _X); } 
#line 969 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) long double __cdecl truncl(long double _X); } 
#line 992 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" __declspec(dllimport) double HUGE; 
#line 997 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl j0(double _X); } 
#line 998 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl j1(double _X); } 
#line 999 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl jn(int _X, double _Y); } 
#line 1000 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl y0(double _X); } 
#line 1001 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl y1(double _X); } 
#line 1002 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
extern "C" { __declspec(dllimport) double __cdecl yn(int _X, double _Y); } 
#line 1012 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
template < class _Ty > inline
        _Ty _Pow_int ( _Ty _X, int _Y ) throw ( )
        { unsigned int _N;
        if ( _Y >= 0 )
                _N = ( unsigned int ) _Y;
        else
                _N = ( unsigned int ) ( - _Y );
        for ( _Ty _Z = _Ty ( 1 );; _X *= _X )
                { if ( ( _N & 1 ) != 0 )
                        _Z *= _X;
                if ( ( _N >>= 1 ) == 0 )
                        return ( _Y < 0 ? _Ty ( 1 ) / _Z : _Z ); } }
#line 1025 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline double __cdecl abs(double _X) throw() 
#line 1026 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fabs(_X); } 
#line 1027 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline double __cdecl pow(double _X, int _Y) throw() 
#line 1028 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 1029 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl abs(float _X) throw() 
#line 1030 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fabsf(_X); } 
#line 1031 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl acos(float _X) throw() 
#line 1032 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return acosf(_X); } 
#line 1033 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl acosh(float _X) throw() 
#line 1034 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return acoshf(_X); } 
#line 1035 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl asin(float _X) throw() 
#line 1036 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return asinf(_X); } 
#line 1037 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl asinh(float _X) throw() 
#line 1038 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return asinhf(_X); } 
#line 1039 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl atan(float _X) throw() 
#line 1040 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return atanf(_X); } 
#line 1041 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl atanh(float _X) throw() 
#line 1042 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return atanhf(_X); } 
#line 1043 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl atan2(float _Y, float _X) throw() 
#line 1044 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return atan2f(_Y, _X); } 
#line 1045 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl cbrt(float _X) throw() 
#line 1046 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return cbrtf(_X); } 
#line 1047 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl ceil(float _X) throw() 
#line 1048 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return ceilf(_X); } 
#line 1049 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl copysign(float _X, float _Y) throw() 
#line 1050 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return copysignf(_X, _Y); } 
#line 1051 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl cos(float _X) throw() 
#line 1052 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return cosf(_X); } 
#line 1053 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl cosh(float _X) throw() 
#line 1054 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return coshf(_X); } 
#line 1055 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl erf(float _X) throw() 
#line 1056 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return erff(_X); } 
#line 1057 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl erfc(float _X) throw() 
#line 1058 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return erfcf(_X); } 
#line 1059 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl exp(float _X) throw() 
#line 1060 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return expf(_X); } 
#line 1061 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl exp2(float _X) throw() 
#line 1062 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return exp2f(_X); } 
#line 1063 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl expm1(float _X) throw() 
#line 1064 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return expm1f(_X); } 
#line 1065 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl fabs(float _X) throw() 
#line 1066 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fabsf(_X); } 
#line 1067 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl fdim(float _X, float _Y) throw() 
#line 1068 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fdimf(_X, _Y); } 
#line 1069 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl floor(float _X) throw() 
#line 1070 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return floorf(_X); } 
#line 1071 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl fma(float _X, float _Y, float _Z) throw() 
#line 1072 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fmaf(_X, _Y, _Z); } 
#line 1073 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl fmax(float _X, float _Y) throw() 
#line 1074 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fmaxf(_X, _Y); } 
#line 1075 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl fmin(float _X, float _Y) throw() 
#line 1076 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fminf(_X, _Y); } 
#line 1077 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl fmod(float _X, float _Y) throw() 
#line 1078 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fmodf(_X, _Y); } 
#line 1079 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl frexp(float _X, int *_Y) throw() 
#line 1080 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return frexpf(_X, _Y); } 
#line 1081 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl hypot(float _X, float _Y) throw() 
#line 1082 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return hypotf(_X, _Y); } 
#line 1083 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline int __cdecl ilogb(float _X) throw() 
#line 1084 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return ilogbf(_X); } 
#line 1085 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl ldexp(float _X, int _Y) throw() 
#line 1086 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return ldexpf(_X, _Y); } 
#line 1087 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl lgamma(float _X) throw() 
#line 1088 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return lgammaf(_X); } 
#line 1089 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline __int64 __cdecl llrint(float _X) throw() 
#line 1090 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return llrintf(_X); } 
#line 1091 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline __int64 __cdecl llround(float _X) throw() 
#line 1092 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return llroundf(_X); } 
#line 1093 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl log(float _X) throw() 
#line 1094 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return logf(_X); } 
#line 1095 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl log10(float _X) throw() 
#line 1096 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return log10f(_X); } 
#line 1097 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl log1p(float _X) throw() 
#line 1098 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return log1pf(_X); } 
#line 1099 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl log2(float _X) throw() 
#line 1100 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return log2f(_X); } 
#line 1101 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl logb(float _X) throw() 
#line 1102 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return logbf(_X); } 
#line 1103 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long __cdecl lrint(float _X) throw() 
#line 1104 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return lrintf(_X); } 
#line 1105 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long __cdecl lround(float _X) throw() 
#line 1106 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return lroundf(_X); } 
#line 1107 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl modf(float _X, float *_Y) throw() 
#line 1108 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return modff(_X, _Y); } 
#line 1109 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl nearbyint(float _X) throw() 
#line 1110 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return nearbyintf(_X); } 
#line 1111 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl nextafter(float _X, float _Y) throw() 
#line 1112 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return nextafterf(_X, _Y); } 
#line 1113 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl nexttoward(float _X, long double _Y) throw() 
#line 1114 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return nexttowardf(_X, _Y); } 
#line 1115 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl pow(float _X, float _Y) throw() 
#line 1116 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return powf(_X, _Y); } 
#line 1117 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl pow(float _X, int _Y) throw() 
#line 1118 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 1119 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl remainder(float _X, float _Y) throw() 
#line 1120 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return remainderf(_X, _Y); } 
#line 1121 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl remquo(float _X, float _Y, int *_Z) throw() 
#line 1122 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return remquof(_X, _Y, _Z); } 
#line 1123 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl rint(float _X) throw() 
#line 1124 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return rintf(_X); } 
#line 1125 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl round(float _X) throw() 
#line 1126 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return roundf(_X); } 
#line 1127 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl scalbln(float _X, long _Y) throw() 
#line 1128 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return scalblnf(_X, _Y); } 
#line 1129 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl scalbn(float _X, int _Y) throw() 
#line 1130 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return scalbnf(_X, _Y); } 
#line 1131 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl sin(float _X) throw() 
#line 1132 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return sinf(_X); } 
#line 1133 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl sinh(float _X) throw() 
#line 1134 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return sinhf(_X); } 
#line 1135 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl sqrt(float _X) throw() 
#line 1136 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return sqrtf(_X); } 
#line 1137 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl tan(float _X) throw() 
#line 1138 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return tanf(_X); } 
#line 1139 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl tanh(float _X) throw() 
#line 1140 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return tanhf(_X); } 
#line 1141 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl tgamma(float _X) throw() 
#line 1142 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return tgammaf(_X); } 
#line 1143 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline float __cdecl trunc(float _X) throw() 
#line 1144 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return truncf(_X); } 
#line 1145 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl abs(long double _X) throw() 
#line 1146 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fabsl(_X); } 
#line 1147 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl acos(long double _X) throw() 
#line 1148 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return acosl(_X); } 
#line 1149 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl acosh(long double _X) throw() 
#line 1150 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return acoshl(_X); } 
#line 1151 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl asin(long double _X) throw() 
#line 1152 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return asinl(_X); } 
#line 1153 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl asinh(long double _X) throw() 
#line 1154 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return asinhl(_X); } 
#line 1155 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl atan(long double _X) throw() 
#line 1156 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return atanl(_X); } 
#line 1157 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl atanh(long double _X) throw() 
#line 1158 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return atanhl(_X); } 
#line 1159 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl atan2(long double _Y, long double _X) throw() 
#line 1160 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return atan2l(_Y, _X); } 
#line 1161 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl cbrt(long double _X) throw() 
#line 1162 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return cbrtl(_X); } 
#line 1163 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl ceil(long double _X) throw() 
#line 1164 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return ceill(_X); } 
#line 1165 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl copysign(long double _X, long double _Y) throw() 
#line 1166 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return copysignl(_X, _Y); } 
#line 1167 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl cos(long double _X) throw() 
#line 1168 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return cosl(_X); } 
#line 1169 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl cosh(long double _X) throw() 
#line 1170 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return coshl(_X); } 
#line 1171 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl erf(long double _X) throw() 
#line 1172 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return erfl(_X); } 
#line 1173 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl erfc(long double _X) throw() 
#line 1174 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return erfcl(_X); } 
#line 1175 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl exp(long double _X) throw() 
#line 1176 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return expl(_X); } 
#line 1177 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl exp2(long double _X) throw() 
#line 1178 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return exp2l(_X); } 
#line 1179 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl expm1(long double _X) throw() 
#line 1180 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return expm1l(_X); } 
#line 1181 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl fabs(long double _X) throw() 
#line 1182 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fabsl(_X); } 
#line 1183 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl fdim(long double _X, long double _Y) throw() 
#line 1184 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fdiml(_X, _Y); } 
#line 1185 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl floor(long double _X) throw() 
#line 1186 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return floorl(_X); } 
#line 1187 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl fma(long double _X, long double _Y, long double _Z) throw() 
#line 1188 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fmal(_X, _Y, _Z); } 
#line 1189 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl fmax(long double _X, long double _Y) throw() 
#line 1190 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fmaxl(_X, _Y); } 
#line 1191 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl fmin(long double _X, long double _Y) throw() 
#line 1192 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fminl(_X, _Y); } 
#line 1193 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl fmod(long double _X, long double _Y) throw() 
#line 1194 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return fmodl(_X, _Y); } 
#line 1195 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl frexp(long double _X, int *_Y) throw() 
#line 1196 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return frexpl(_X, _Y); } 
#line 1197 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl hypot(long double _X, long double _Y) throw() 
#line 1198 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return hypotl(_X, _Y); } 
#line 1199 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline int __cdecl ilogb(long double _X) throw() 
#line 1200 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return ilogbl(_X); } 
#line 1201 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl ldexp(long double _X, int _Y) throw() 
#line 1202 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return ldexpl(_X, _Y); } 
#line 1203 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl lgamma(long double _X) throw() 
#line 1204 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return lgammal(_X); } 
#line 1205 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline __int64 __cdecl llrint(long double _X) throw() 
#line 1206 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return llrintl(_X); } 
#line 1207 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline __int64 __cdecl llround(long double _X) throw() 
#line 1208 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return llroundl(_X); } 
#line 1209 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl log(long double _X) throw() 
#line 1210 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return logl(_X); } 
#line 1211 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl log10(long double _X) throw() 
#line 1212 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return log10l(_X); } 
#line 1213 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl log1p(long double _X) throw() 
#line 1214 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return log1pl(_X); } 
#line 1215 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl log2(long double _X) throw() 
#line 1216 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return log2l(_X); } 
#line 1217 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl logb(long double _X) throw() 
#line 1218 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return logbl(_X); } 
#line 1219 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long __cdecl lrint(long double _X) throw() 
#line 1220 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return lrintl(_X); } 
#line 1221 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long __cdecl lround(long double _X) throw() 
#line 1222 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return lroundl(_X); } 
#line 1223 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl modf(long double _X, long double *_Y) throw() 
#line 1224 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return modfl(_X, _Y); } 
#line 1225 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl nearbyint(long double _X) throw() 
#line 1226 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return nearbyintl(_X); } 
#line 1227 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl nextafter(long double _X, long double _Y) throw() 
#line 1228 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return nextafterl(_X, _Y); } 
#line 1229 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl nexttoward(long double _X, long double _Y) throw() 
#line 1230 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return nexttowardl(_X, _Y); } 
#line 1231 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl pow(long double _X, long double _Y) throw() 
#line 1232 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return powl(_X, _Y); } 
#line 1233 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl pow(long double _X, int _Y) throw() 
#line 1234 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return _Pow_int(_X, _Y); } 
#line 1235 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl remainder(long double _X, long double _Y) throw() 
#line 1236 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return remainderl(_X, _Y); } 
#line 1237 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl remquo(long double _X, long double _Y, int *_Z) throw() 
#line 1238 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return remquol(_X, _Y, _Z); } 
#line 1239 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl rint(long double _X) throw() 
#line 1240 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return rintl(_X); } 
#line 1241 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl round(long double _X) throw() 
#line 1242 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return roundl(_X); } 
#line 1243 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl scalbln(long double _X, long _Y) throw() 
#line 1244 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return scalblnl(_X, _Y); } 
#line 1245 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl scalbn(long double _X, int _Y) throw() 
#line 1246 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return scalbnl(_X, _Y); } 
#line 1247 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl sin(long double _X) throw() 
#line 1248 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return sinl(_X); } 
#line 1249 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl sinh(long double _X) throw() 
#line 1250 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return sinhl(_X); } 
#line 1251 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl sqrt(long double _X) throw() 
#line 1252 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return sqrtl(_X); } 
#line 1253 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl tan(long double _X) throw() 
#line 1254 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return tanl(_X); } 
#line 1255 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl tanh(long double _X) throw() 
#line 1256 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return tanhl(_X); } 
#line 1257 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl tgamma(long double _X) throw() 
#line 1258 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return tgammal(_X); } 
#line 1259 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
inline long double __cdecl trunc(long double _X) throw() 
#line 1260 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
{ return truncl(_X); } 
#line 1265 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\math.h"
#pragma pack ( pop )
#line 28 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
#pragma pack ( push, 8 )
#line 52 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef int (__cdecl *_onexit_t)(void); }
#line 78 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 75 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
struct _div_t { 
#line 76 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
int quot; 
#line 77 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
int rem; 
#line 78 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} div_t; }
#line 83 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 80 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
struct _ldiv_t { 
#line 81 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
long quot; 
#line 82 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
long rem; 
#line 83 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} ldiv_t; }
#line 88 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 85 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
struct _lldiv_t { 
#line 86 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
__int64 quot; 
#line 87 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
__int64 rem; 
#line 88 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} lldiv_t; }
#line 102 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
#pragma pack ( 4 )
#line 105 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 103 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
struct { 
#line 104 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
unsigned char ld[10]; 
#line 105 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} _LDOUBLE; }
#pragma pack ( )
#line 124 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 122 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
struct { 
#line 123 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
double x; 
#line 124 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} _CRT_DOUBLE; }
#line 128 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 126 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
struct { 
#line 127 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
float f; 
#line 128 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} _CRT_FLOAT; }
#line 139 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 134 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
struct { 
#line 138 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
long double x; 
#line 139 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} _LONGDOUBLE; }
#line 143 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
#pragma pack ( 4 )
#line 146 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef 
#line 144 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
struct { 
#line 145 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
unsigned char ld12[12]; 
#line 146 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} _LDBL12; }
#pragma pack ( )
#line 170 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" __declspec(dllimport) int __mb_cur_max; 
#line 175 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl ___mb_cur_max_func(); } 
#line 176 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl ___mb_cur_max_l_func(_locale_t); } 
#line 215 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef void (__cdecl *_purecall_handler)(void); }
#line 218 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) _purecall_handler __cdecl _set_purecall_handler(_purecall_handler _Handler); } 
#line 219 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) _purecall_handler __cdecl _get_purecall_handler(); } 
#line 235 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { typedef void (__cdecl *_invalid_parameter_handler)(const __wchar_t *, const __wchar_t *, const __wchar_t *, unsigned, uintptr_t); }
#line 238 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) _invalid_parameter_handler __cdecl _set_invalid_parameter_handler(_invalid_parameter_handler _Handler); } 
#line 239 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) _invalid_parameter_handler __cdecl _get_invalid_parameter_handler(); } 
#line 252 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long *__cdecl __doserrno(); } 
#line 255 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _set_doserrno(unsigned long _Value); } 
#line 256 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _get_doserrno(unsigned long * _Value); } 
#line 259 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char **__cdecl __sys_errlist(); } 
#line 262 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int *__cdecl __sys_nerr(); } 
#line 268 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int *__cdecl __p___argc(); } 
#line 269 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char ***__cdecl __p___argv(); } 
#line 270 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t ***__cdecl __p___wargv(); } 
#line 271 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char ***__cdecl __p__environ(); } 
#line 272 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t ***__cdecl __p__wenviron(); } 
#line 275 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char **__cdecl __p__pgmptr(); } 
#line 276 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t **__cdecl __p__wpgmptr(); } 
#line 288 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" __declspec(dllimport) int __argc; 
#line 289 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" __declspec(dllimport) char **__argv; 
#line 290 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t **__wargv; 
#line 306 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" __declspec(dllimport) char **_environ; 
#line 307 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t **_wenviron; 
#line 311 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" __declspec(dllimport) char *_pgmptr; 
#line 312 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" __declspec(dllimport) __wchar_t *_wpgmptr; 
#line 339 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _get_pgmptr(char ** _Value); } 
#line 340 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { errno_t __cdecl _get_wpgmptr(__wchar_t ** _Value); } 
#line 346 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" __declspec(dllimport) int _fmode; 
#line 353 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _set_fmode(int _Mode); } 
#line 354 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _get_fmode(int * _PMode); } 
#line 363 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template< class _CountofType, size_t _SizeOfArray> char (*__countof_helper(_CountofType (& _Array)[_SizeOfArray]))[_SizeOfArray]; 
#line 376 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl exit(int _Code); } 
#line 378 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl _exit(int _Code); } 
#line 379 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noreturn) void __cdecl abort(); } 
#line 382 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __cdecl _set_abort_behavior(unsigned _Flags, unsigned _Mask); } 
#line 384 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl abs(int _X); } 
#line 385 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { long __cdecl labs(long _X); } 
#line 386 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __int64 __cdecl llabs(__int64 _X); } 
#line 388 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __int64 __cdecl _abs64(__int64); } 
#line 426 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { int __cdecl atexit(void (__cdecl *)(void)); } 
#line 428 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl atof(const char * _String); } 
#line 429 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _atof_l(const char * _String, _locale_t _Locale); } 
#line 430 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl atoi(const char * _Str); } 
#line 431 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoi_l(const char * _Str, _locale_t _Locale); } 
#line 432 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl atol(const char * _Str); } 
#line 433 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _atol_l(const char * _Str, _locale_t _Locale); } 
#line 434 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl atoll(const char * _Str); } 
#line 435 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _atoll_l(const char * _Str, _locale_t _Locale); } 
#line 439 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void *__cdecl bsearch_s(const void * _Key, const void * _Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(void *, const void *, const void *), void * _Context); } 
#line 443 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void *__cdecl bsearch(const void * _Key, const void * _Base, size_t _NumOfElements, size_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(const void *, const void *)); } 
#line 448 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl qsort_s(void * _Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(void *, const void *, const void *), void * _Context); } 
#line 452 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl qsort(void * _Base, size_t _NumOfElements, size_t _SizeOfElements, int (__cdecl * _PtFuncCompare)(const void *, const void *)); } 
#line 456 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned short __cdecl _byteswap_ushort(unsigned short _Short); } 
#line 457 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned long __cdecl _byteswap_ulong(unsigned long _Long); } 
#line 458 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _byteswap_uint64(unsigned __int64 _Int64); } 
#line 459 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) div_t __cdecl div(int _Numerator, int _Denominator); } 
#line 462 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl getenv(const char * _VarName); } 
#line 464 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl getenv_s(size_t * _ReturnSize, char * _DstBuf, rsize_t _DstSize, const char * _VarName); } 
#line 466 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl getenv_s ( size_t * _ReturnSize, char ( & _Dest ) [ _Size ], const char * _VarName ) throw ( ) { return getenv_s ( _ReturnSize, _Dest, _Size, _VarName ); }
#line 472 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _dupenv_s(char ** _PBuffer, size_t * _PBufferSizeInBytes, const char * _VarName); } 
#line 479 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _itoa_s(int _Value, char * _DstBuf, size_t _Size, int _Radix); } 
#line 480 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _itoa_s ( int _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _itoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 481 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _itoa(int _Value, char * _Dest, int _Radix); } 
#line 482 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _i64toa_s(__int64 _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 483 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _i64toa(__int64 _Val, char * _DstBuf, int _Radix); } 
#line 484 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ui64toa_s(unsigned __int64 _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 485 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ui64toa(unsigned __int64 _Val, char * _DstBuf, int _Radix); } 
#line 486 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _atoi64(const char * _String); } 
#line 487 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _atoi64_l(const char * _String, _locale_t _Locale); } 
#line 488 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _strtoi64(const char * _String, char ** _EndPtr, int _Radix); } 
#line 489 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _strtoi64_l(const char * _String, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 490 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _strtoui64(const char * _String, char ** _EndPtr, int _Radix); } 
#line 491 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _strtoui64_l(const char * _String, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 492 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) ldiv_t __cdecl ldiv(long _Numerator, long _Denominator); } 
#line 493 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) lldiv_t __cdecl lldiv(__int64 _Numerator, __int64 _Denominator); } 
#line 497 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
inline long abs(long _X) throw() 
#line 498 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
{ 
#line 499 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
return labs(_X); 
#line 500 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} 
#line 501 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
inline __int64 abs(__int64 _X) throw() 
#line 502 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
{ 
#line 503 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
return llabs(_X); 
#line 504 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} 
#line 505 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
inline ldiv_t div(long _A1, long _A2) throw() 
#line 506 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
{ 
#line 507 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
return ldiv(_A1, _A2); 
#line 508 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} 
#line 509 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
inline lldiv_t div(__int64 _A1, __int64 _A2) throw() 
#line 510 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
{ 
#line 511 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
return lldiv(_A1, _A2); 
#line 512 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
} 
#line 515 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ltoa_s(long _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 516 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ltoa_s ( long _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ltoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 517 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ltoa(long _Value, char * _Dest, int _Radix); } 
#line 518 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl mblen(const char * _Ch, size_t _MaxCount); } 
#line 519 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _mblen_l(const char * _Ch, size_t _MaxCount, _locale_t _Locale); } 
#line 520 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrlen(const char * _Str); } 
#line 521 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrlen_l(const char * _Str, _locale_t _Locale); } 
#line 522 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrnlen(const char * _Str, size_t _MaxCount); } 
#line 523 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstrnlen_l(const char * _Str, size_t _MaxCount, _locale_t _Locale); } 
#line 524 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl mbtowc(__wchar_t * _DstCh, const char * _SrcCh, size_t _SrcSizeInBytes); } 
#line 525 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _mbtowc_l(__wchar_t * _DstCh, const char * _SrcCh, size_t _SrcSizeInBytes, _locale_t _Locale); } 
#line 526 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl mbstowcs_s(size_t * _PtNumOfCharConverted, __wchar_t * _DstBuf, size_t _SizeInWords, const char * _SrcBuf, size_t _MaxCount); } 
#line 527 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl mbstowcs_s ( size_t * _PtNumOfCharConverted, wchar_t ( & _Dest ) [ _Size ], const char * _Source, size_t _MaxCount ) throw ( ) { return mbstowcs_s ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount ); }
#line 528 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl mbstowcs(__wchar_t * _Dest, const char * _Source, size_t _MaxCount); } 
#line 530 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _mbstowcs_s_l(size_t * _PtNumOfCharConverted, __wchar_t * _DstBuf, size_t _SizeInWords, const char * _SrcBuf, size_t _MaxCount, _locale_t _Locale); } 
#line 531 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _mbstowcs_s_l ( size_t * _PtNumOfCharConverted, wchar_t ( & _Dest ) [ _Size ], const char * _Source, size_t _MaxCount, _locale_t _Locale ) throw ( ) { return _mbstowcs_s_l ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale ); }
#line 532 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _mbstowcs_l(__wchar_t * _Dest, const char * _Source, size_t _MaxCount, _locale_t _Locale); } 
#line 534 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl rand(); } 
#line 539 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _set_error_mode(int _Mode); } 
#line 541 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl srand(unsigned _Seed); } 
#line 542 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl strtod(const char * _Str, char ** _EndPtr); } 
#line 543 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _strtod_l(const char * _Str, char ** _EndPtr, _locale_t _Locale); } 
#line 544 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl strtol(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 545 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _strtol_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 546 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl strtoll(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 547 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _strtoll_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 548 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl strtoul(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 549 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl _strtoul_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 550 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl strtoull(const char * _Str, char ** _EndPtr, int _Radix); } 
#line 551 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _strtoull_l(const char * _Str, char ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 552 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl strtold(const char * _Str, char ** _EndPtr); } 
#line 553 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl _strtold_l(const char * _Str, char ** _EndPtr, _locale_t _Locale); } 
#line 554 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl strtof(const char * _Str, char ** _EndPtr); } 
#line 555 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl _strtof_l(const char * _Str, char ** _EndPtr, _locale_t _Locale); } 
#line 560 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl system(const char * _Command); } 
#line 564 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ultoa_s(unsigned long _Val, char * _DstBuf, size_t _Size, int _Radix); } 
#line 565 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ultoa_s ( unsigned long _Value, char ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ultoa_s ( _Value, _Dest, _Size, _Radix ); }
#line 566 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ultoa(unsigned long _Value, char * _Dest, int _Radix); } 
#line 567 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl wctomb(char * _MbCh, __wchar_t _WCh); } 
#line 568 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wctomb_l(char * _MbCh, __wchar_t _WCh, _locale_t _Locale); } 
#line 570 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wctomb_s(int * _SizeConverted, char * _MbCh, rsize_t _SizeInBytes, __wchar_t _WCh); } 
#line 572 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wctomb_s_l(int * _SizeConverted, char * _MbCh, size_t _SizeInBytes, __wchar_t _WCh, _locale_t _Locale); } 
#line 573 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl wcstombs_s(size_t * _PtNumOfCharConverted, char * _Dst, size_t _DstSizeInBytes, const __wchar_t * _Src, size_t _MaxCountInBytes); } 
#line 574 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl wcstombs_s ( size_t * _PtNumOfCharConverted, char ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _MaxCount ) throw ( ) { return wcstombs_s ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount ); }
#line 575 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl wcstombs(char * _Dest, const __wchar_t * _Source, size_t _MaxCount); } 
#line 576 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wcstombs_s_l(size_t * _PtNumOfCharConverted, char * _Dst, size_t _DstSizeInBytes, const __wchar_t * _Src, size_t _MaxCountInBytes, _locale_t _Locale); } 
#line 577 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wcstombs_s_l ( size_t * _PtNumOfCharConverted, char ( & _Dest ) [ _Size ], const wchar_t * _Source, size_t _MaxCount, _locale_t _Locale ) throw ( ) { return _wcstombs_s_l ( _PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale ); }
#line 578 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _wcstombs_l(char * _Dest, const __wchar_t * _Source, size_t _MaxCount, _locale_t _Locale); } 
#line 640 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl calloc(size_t _Count, size_t _Size); } 
#line 641 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) void __cdecl free(void * _Memory); } 
#line 642 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl malloc(size_t _Size); } 
#line 644 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl realloc(void * _Memory, size_t _NewSize); } 
#line 646 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _recalloc(void * _Memory, size_t _Count, size_t _Size); } 
#line 647 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) void __cdecl _aligned_free(void * _Memory); } 
#line 648 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_malloc(size_t _Size, size_t _Alignment); } 
#line 649 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_malloc(size_t _Size, size_t _Alignment, size_t _Offset); } 
#line 651 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_realloc(void * _Memory, size_t _NewSize, size_t _Alignment); } 
#line 653 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_recalloc(void * _Memory, size_t _Count, size_t _Size, size_t _Alignment); } 
#line 655 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_realloc(void * _Memory, size_t _NewSize, size_t _Alignment, size_t _Offset); } 
#line 657 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __declspec(noalias) __declspec(restrict) void *__cdecl _aligned_offset_recalloc(void * _Memory, size_t _Count, size_t _Size, size_t _Alignment, size_t _Offset); } 
#line 658 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) size_t __cdecl _aligned_msize(void * _Memory, size_t _Alignment, size_t _Offset); } 
#line 685 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _itow_s(int _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 686 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _itow_s ( int _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _itow_s ( _Value, _Dest, _Size, _Radix ); }
#line 687 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _itow(int _Value, __wchar_t * _Dest, int _Radix); } 
#line 688 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ltow_s(long _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 689 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ltow_s ( long _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ltow_s ( _Value, _Dest, _Size, _Radix ); }
#line 690 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ltow(long _Value, __wchar_t * _Dest, int _Radix); } 
#line 691 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ultow_s(unsigned long _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 692 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ultow_s ( unsigned long _Value, wchar_t ( & _Dest ) [ _Size ], int _Radix ) throw ( ) { return _ultow_s ( _Value, _Dest, _Size, _Radix ); }
#line 693 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ultow(unsigned long _Value, __wchar_t * _Dest, int _Radix); } 
#line 694 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl wcstod(const __wchar_t * _Str, __wchar_t ** _EndPtr); } 
#line 695 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wcstod_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, _locale_t _Locale); } 
#line 696 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl wcstol(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 697 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wcstol_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 698 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl wcstoll(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 699 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wcstoll_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 700 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl wcstoul(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 701 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned long __cdecl _wcstoul_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 702 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl wcstoull(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 703 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _wcstoull_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 704 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl wcstold(const __wchar_t * _Str, __wchar_t ** _EndPtr); } 
#line 705 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long double __cdecl _wcstold_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, _locale_t _Locale); } 
#line 706 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl wcstof(const __wchar_t * _Str, __wchar_t ** _EndPtr); } 
#line 707 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) float __cdecl _wcstof_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, _locale_t _Locale); } 
#line 711 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wgetenv(const __wchar_t * _VarName); } 
#line 712 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wgetenv_s(size_t * _ReturnSize, __wchar_t * _DstBuf, size_t _DstSizeInWords, const __wchar_t * _VarName); } 
#line 713 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wgetenv_s ( size_t * _ReturnSize, wchar_t ( & _Dest ) [ _Size ], const wchar_t * _VarName ) throw ( ) { return _wgetenv_s ( _ReturnSize, _Dest, _Size, _VarName ); }
#line 720 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wdupenv_s(__wchar_t ** _Buffer, size_t * _BufferSizeInWords, const __wchar_t * _VarName); } 
#line 728 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wsystem(const __wchar_t * _Command); } 
#line 733 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wtof(const __wchar_t * _Str); } 
#line 734 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) double __cdecl _wtof_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 735 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wtoi(const __wchar_t * _Str); } 
#line 736 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wtoi_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 737 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wtol(const __wchar_t * _Str); } 
#line 738 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) long __cdecl _wtol_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 739 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoll(const __wchar_t * _Str); } 
#line 740 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoll_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 742 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _i64tow_s(__int64 _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 743 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _i64tow(__int64 _Val, __wchar_t * _DstBuf, int _Radix); } 
#line 744 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ui64tow_s(unsigned __int64 _Val, __wchar_t * _DstBuf, size_t _SizeInWords, int _Radix); } 
#line 745 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _ui64tow(unsigned __int64 _Val, __wchar_t * _DstBuf, int _Radix); } 
#line 746 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoi64(const __wchar_t * _Str); } 
#line 747 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wtoi64_l(const __wchar_t * _Str, _locale_t _Locale); } 
#line 748 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wcstoi64(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 749 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __int64 __cdecl _wcstoi64_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 750 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _wcstoui64(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix); } 
#line 751 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) unsigned __int64 __cdecl _wcstoui64_l(const __wchar_t * _Str, __wchar_t ** _EndPtr, int _Radix, _locale_t _Locale); } 
#line 770 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _fullpath(char * _FullPath, const char * _Path, size_t _SizeInBytes); } 
#line 778 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _ecvt_s(char * _DstBuf, size_t _Size, double _Val, int _NumOfDights, int * _PtDec, int * _PtSign); } 
#line 779 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _ecvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits, int * _PtDec, int * _PtSign ) throw ( ) { return _ecvt_s ( _Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign ); }
#line 780 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _ecvt(double _Val, int _NumOfDigits, int * _PtDec, int * _PtSign); } 
#line 781 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _fcvt_s(char * _DstBuf, size_t _Size, double _Val, int _NumOfDec, int * _PtDec, int * _PtSign); } 
#line 782 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _fcvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits, int * _PtDec, int * _PtSign ) throw ( ) { return _fcvt_s ( _Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign ); }
#line 783 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _fcvt(double _Val, int _NumOfDec, int * _PtDec, int * _PtSign); } 
#line 784 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _gcvt_s(char * _DstBuf, size_t _Size, double _Val, int _NumOfDigits); } 
#line 785 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _gcvt_s ( char ( & _Dest ) [ _Size ], double _Value, int _NumOfDigits ) throw ( ) { return _gcvt_s ( _Dest, _Size, _Value, _NumOfDigits ); }
#line 786 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl _gcvt(double _Val, int _NumOfDigits, char * _DstBuf); } 
#line 788 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atodbl(_CRT_DOUBLE * _Result, char * _Str); } 
#line 789 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoldbl(_LDOUBLE * _Result, char * _Str); } 
#line 790 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoflt(_CRT_FLOAT * _Result, const char * _Str); } 
#line 791 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atodbl_l(_CRT_DOUBLE * _Result, char * _Str, _locale_t _Locale); } 
#line 792 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoldbl_l(_LDOUBLE * _Result, char * _Str, _locale_t _Locale); } 
#line 793 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _atoflt_l(_CRT_FLOAT * _Result, const char * _Str, _locale_t _Locale); } 
#line 794 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned long __cdecl _lrotl(unsigned long _Val, int _Shift); } 
#line 795 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned long __cdecl _lrotr(unsigned long _Val, int _Shift); } 
#line 796 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _makepath_s(char * _PathResult, size_t _SizeInWords, const char * _Drive, const char * _Dir, const char * _Filename, const char * _Ext); } 
#line 798 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _makepath_s ( char ( & _Path ) [ _Size ], const char * _Drive, const char * _Dir, const char * _Filename, const char * _Ext ) throw ( ) { return _makepath_s ( _Path, _Size, _Drive, _Dir, _Filename, _Ext ); }
#line 799 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _makepath(char * _Path, const char * _Drive, const char * _Dir, const char * _Filename, const char * _Ext); } 
#line 826 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { _onexit_t __cdecl _onexit(_onexit_t _Func); } 
#line 831 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl perror(const char * _ErrMsg); } 
#line 834 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
#pragma warning (push)
#pragma warning (disable:6540)
#line 838 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _putenv(const char * _EnvString); } 
#line 839 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _putenv_s(const char * _Name, const char * _Value); } 
#line 842 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __cdecl _rotl(unsigned _Val, int _Shift); } 
#line 843 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _rotl64(unsigned __int64 _Val, int _Shift); } 
#line 844 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __cdecl _rotr(unsigned _Val, int _Shift); } 
#line 845 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { unsigned __int64 __cdecl _rotr64(unsigned __int64 _Val, int _Shift); } 
#pragma warning (pop)
#line 849 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _searchenv_s(const char * _Filename, const char * _EnvVar, char * _ResultPath, size_t _SizeInBytes); } 
#line 850 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _searchenv_s ( const char * _Filename, const char * _EnvVar, char ( & _ResultPath ) [ _Size ] ) throw ( ) { return _searchenv_s ( _Filename, _EnvVar, _ResultPath, _Size ); }
#line 851 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _searchenv(const char * _Filename, const char * _EnvVar, char * _ResultPath); } 
#line 854 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _splitpath(const char * _FullPath, char * _Drive, char * _Dir, char * _Filename, char * _Ext); } 
#line 855 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _splitpath_s(const char * _FullPath, char * _Drive, size_t _DriveSize, char * _Dir, size_t _DirSize, char * _Filename, size_t _FilenameSize, char * _Ext, size_t _ExtSize); } 
#line 860 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize > inline errno_t __cdecl _splitpath_s ( const char * _Dest, char ( & _Drive ) [ _DriveSize ], char ( & _Dir ) [ _DirSize ], char ( & _Name ) [ _NameSize ], char ( & _Ext ) [ _ExtSize ] ) throw ( ) { return _splitpath_s ( _Dest, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize ); }
#line 862 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _swab(char * _Buf1, char * _Buf2, int _SizeInBytes); } 
#line 873 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) __wchar_t *__cdecl _wfullpath(__wchar_t * _FullPath, const __wchar_t * _Path, size_t _SizeInWords); } 
#line 879 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wmakepath_s(__wchar_t * _PathResult, size_t _SIZE, const __wchar_t * _Drive, const __wchar_t * _Dir, const __wchar_t * _Filename, const __wchar_t * _Ext); } 
#line 881 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wmakepath_s ( wchar_t ( & _ResultPath ) [ _Size ], const wchar_t * _Drive, const wchar_t * _Dir, const wchar_t * _Filename, const wchar_t * _Ext ) throw ( ) { return _wmakepath_s ( _ResultPath, _Size, _Drive, _Dir, _Filename, _Ext ); }
#line 882 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wmakepath(__wchar_t * _ResultPath, const __wchar_t * _Drive, const __wchar_t * _Dir, const __wchar_t * _Filename, const __wchar_t * _Ext); } 
#line 885 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wperror(const __wchar_t * _ErrMsg); } 
#line 889 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl _wputenv(const __wchar_t * _EnvString); } 
#line 890 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wputenv_s(const __wchar_t * _Name, const __wchar_t * _Value); } 
#line 891 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wsearchenv_s(const __wchar_t * _Filename, const __wchar_t * _EnvVar, __wchar_t * _ResultPath, size_t _SizeInWords); } 
#line 892 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _Size > inline errno_t __cdecl _wsearchenv_s ( const wchar_t * _Filename, const wchar_t * _EnvVar, wchar_t ( & _ResultPath ) [ _Size ] ) throw ( ) { return _wsearchenv_s ( _Filename, _EnvVar, _ResultPath, _Size ); }
#line 893 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wsearchenv(const __wchar_t * _Filename, const __wchar_t * _EnvVar, __wchar_t * _ResultPath); } 
#line 896 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl _wsplitpath(const __wchar_t * _FullPath, __wchar_t * _Drive, __wchar_t * _Dir, __wchar_t * _Filename, __wchar_t * _Ext); } 
#line 897 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) errno_t __cdecl _wsplitpath_s(const __wchar_t * _FullPath, __wchar_t * _Drive, size_t _DriveSize, __wchar_t * _Dir, size_t _DirSize, __wchar_t * _Filename, size_t _FilenameSize, __wchar_t * _Ext, size_t _ExtSize); } 
#line 902 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
template < size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize > inline errno_t __cdecl _wsplitpath_s ( const wchar_t * _Path, wchar_t ( & _Drive ) [ _DriveSize ], wchar_t ( & _Dir ) [ _DirSize ], wchar_t ( & _Name ) [ _NameSize ], wchar_t ( & _Ext ) [ _ExtSize ] ) throw ( ) { return _wsplitpath_s ( _Path, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize ); }
#line 909 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode in" "stead. See online help for details.")) __declspec(dllimport) void __cdecl _seterrormode(int _Mode); } 
#line 910 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. S" "ee online help for details.")) __declspec(dllimport) void __cdecl _beep(unsigned _Frequency, unsigned _Duration); } 
#line 911 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. " "See online help for details.")) __declspec(dllimport) void __cdecl _sleep(unsigned long _Duration); } 
#line 932 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
#pragma warning(push)
#pragma warning(disable: 4141)
extern "C" { __declspec(dllimport) char *__cdecl ecvt(double _Val, int _NumOfDigits, int * _PtDec, int * _PtSign); } 
#line 935 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl fcvt(double _Val, int _NumOfDec, int * _PtDec, int * _PtSign); } 
#line 936 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl gcvt(double _Val, int _NumOfDigits, char * _DstBuf); } 
#line 937 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl itoa(int _Val, char * _DstBuf, int _Radix); } 
#line 938 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl ltoa(long _Val, char * _DstBuf, int _Radix); } 
#line 941 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) int __cdecl putenv(const char * _EnvString); } 
#line 944 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) void __cdecl swab(char * _Buf1, char * _Buf2, int _SizeInBytes); } 
#line 945 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
extern "C" { __declspec(dllimport) char *__cdecl ultoa(unsigned long _Val, char * _Dstbuf, int _Radix); } 
#pragma warning(pop)
extern "C" { _onexit_t __cdecl onexit(_onexit_t _Func); } 
#line 205 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
#pragma detect_mismatch("_MSC_VER", "1800")
#line 209 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
#pragma detect_mismatch("_ITERATOR_DEBUG_LEVEL", "0")
#line 218 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
#pragma detect_mismatch("RuntimeLibrary", "MD_DynamicRelease")
#line 57 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\use_ansi.h"
#pragma comment(lib, "msvcprt")
#line 957 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\stdlib.h"
#pragma pack ( pop )
#line 10 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
#pragma pack ( push, 8 )
#line 568 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
namespace std { 
#line 569 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
typedef bool _Bool; 
#line 570 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
}
#line 586 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
typedef __int64 _Longlong; 
#line 587 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
typedef unsigned __int64 _ULonglong; 
#line 605 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
typedef unsigned short char16_t; 
#line 606 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
typedef unsigned char32_t; 
#line 619 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
namespace std { 
#line 620 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
enum _Uninitialized { 
#line 622 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
_Noinit
#line 623 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
}; 
#line 627 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
#pragma warning(push)
#pragma warning(disable:4412)
class __declspec(dllimport) _Lockit { 
#line 652 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
public: __thiscall _Lockit(); 
#line 653 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
explicit __thiscall _Lockit(int); 
#line 654 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
__thiscall ~_Lockit() throw(); 
#line 657 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Lockit_ctor(int); 
#line 658 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Lockit_dtor(int); 
#line 661 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
private: static void __cdecl _Lockit_ctor(_Lockit *); 
#line 662 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Lockit_ctor(_Lockit *, int); 
#line 663 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Lockit_dtor(_Lockit *); 
#line 666 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
public: _Lockit(const _Lockit &) = delete;
#line 667 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
_Lockit &operator=(const _Lockit &) = delete;
#line 670 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
private: int _Locktype; 
#line 685 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
}; 
#line 772 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
class __declspec(dllimport) _Init_locks { 
#line 788 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
public: __thiscall _Init_locks(); 
#line 789 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
__thiscall ~_Init_locks() throw(); 
#line 793 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
private: static void __cdecl _Init_locks_ctor(_Init_locks *); 
#line 794 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
static void __cdecl _Init_locks_dtor(_Init_locks *); 
#line 805 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
}; 
#line 807 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
#pragma warning(pop)
}
#line 817 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
__declspec(dllimport) void __cdecl _Atexit(void (__cdecl *)(void)); 
#line 819 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
typedef int _Mbstatet; 
#line 820 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
typedef unsigned long _Uint32t; 
#line 9 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
#pragma warning(push,3)
#line 829 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\yvals.h"
#pragma pack ( pop )
#line 8 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
#pragma pack ( push, 8 )
#line 13 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
namespace std { 
#line 15 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _T1, class 
#line 16 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Ret> struct unary_function; 
#line 20 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _T1, class 
#line 21 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_T2, class 
#line 22 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Ret> struct binary_function; 
#line 26 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Nil { 
#line 28 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 29 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
static _Nil _Nil_obj; 
#line 32 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template < class _Ty,
 _Ty _Val >
 struct integral_constant
 {
 static const _Ty value = _Val;

 typedef _Ty value_type;
 typedef integral_constant < _Ty, _Val > type;

 operator value_type ( ) const
  {
  return ( value );
  }
 };
#line 47 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef integral_constant< bool, true>  true_type; 
#line 48 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef integral_constant< bool, false>  false_type; 
#line 51 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< bool > 
#line 52 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Cat_base : public false_type { 
#line 55 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 58 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Cat_base< true>  : public true_type { 
#line 61 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 64 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< bool _Test, class 
#line 65 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Ty = void> 
#line 66 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct enable_if { 
#line 68 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 70 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 71 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct enable_if< true, _Ty>  { 
#line 73 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type; 
#line 74 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 77 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< bool _Test, class 
#line 78 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Ty1, class 
#line 79 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Ty2> 
#line 80 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct conditional { 
#line 82 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty2 type; 
#line 83 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 85 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty1, class 
#line 86 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Ty2> 
#line 87 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct conditional< true, _Ty1, _Ty2>  { 
#line 89 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty1 type; 
#line 90 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 93 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty1, class _Ty2> 
#line 94 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct is_same : public false_type { 
#line 97 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 99 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty1> 
#line 100 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct is_same< _Ty1, _Ty1>  : public true_type { 
#line 103 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 106 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 107 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_const { 
#line 109 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type; 
#line 110 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 112 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 113 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_const< const _Ty>  { 
#line 115 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type; 
#line 116 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 118 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 119 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_const< const _Ty []>  { 
#line 121 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type[]; 
#line 122 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 124 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty, unsigned _Nx> 
#line 125 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_const< const _Ty [_Nx]>  { 
#line 127 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type[_Nx]; 
#line 128 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 131 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 132 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_volatile { 
#line 134 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type; 
#line 135 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 137 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 138 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_volatile< volatile _Ty>  { 
#line 140 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type; 
#line 141 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 143 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 144 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_volatile< volatile _Ty []>  { 
#line 146 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type[]; 
#line 147 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 149 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty, unsigned _Nx> 
#line 150 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_volatile< volatile _Ty [_Nx]>  { 
#line 152 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type[_Nx]; 
#line 153 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 156 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 157 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_cv { 
#line 160 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef typename remove_const< typename remove_volatile< _Ty> ::type> ::type type; 
#line 161 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 164 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 165 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Is_integral : public false_type { 
#line 168 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 171 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< bool>  : public true_type { 
#line 174 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 177 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< char>  : public true_type { 
#line 180 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 183 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< unsigned char>  : public true_type { 
#line 186 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 189 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< signed char>  : public true_type { 
#line 192 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 196 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< __wchar_t>  : public true_type { 
#line 199 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 203 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< unsigned short>  : public true_type { 
#line 206 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 209 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< signed short>  : public true_type { 
#line 212 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 215 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< unsigned>  : public true_type { 
#line 218 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 221 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< signed int>  : public true_type { 
#line 224 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 227 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< unsigned long>  : public true_type { 
#line 230 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 233 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< signed long>  : public true_type { 
#line 236 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 254 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< __int64>  : public true_type { 
#line 257 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 260 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_integral< unsigned __int64>  : public true_type { 
#line 263 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 267 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 268 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct is_integral : public _Is_integral< typename remove_cv< _Ty> ::type>  { 
#line 271 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 274 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 275 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Is_floating_point : public false_type { 
#line 278 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 281 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_floating_point< float>  : public true_type { 
#line 284 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 287 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_floating_point< double>  : public true_type { 
#line 290 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 293 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template<> struct _Is_floating_point< long double>  : public true_type { 
#line 296 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 299 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 300 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct is_floating_point : public _Is_floating_point< typename remove_cv< _Ty> ::type>  { 
#line 303 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 305 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 306 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Is_numeric : public _Cat_base< is_integral< _Ty> ::value || is_floating_point< _Ty> ::value>  { 
#line 310 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 313 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 314 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_reference { 
#line 316 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type; 
#line 317 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 319 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 320 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_reference< _Ty &>  { 
#line 322 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type; 
#line 323 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 325 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 326 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct remove_reference< _Ty &&>  { 
#line 328 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type; 
#line 329 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 332 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Tgt, class 
#line 333 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Src> 
#line 334 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Copy_cv { 
#line 336 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 337 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Tgtx &type; 
#line 338 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 340 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Tgt, class 
#line 341 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Src> 
#line 342 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Copy_cv< _Tgt, const _Src>  { 
#line 344 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 345 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef const _Tgtx &type; 
#line 346 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 348 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Tgt, class 
#line 349 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Src> 
#line 350 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Copy_cv< _Tgt, volatile _Src>  { 
#line 352 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 353 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef volatile _Tgtx &type; 
#line 354 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 356 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Tgt, class 
#line 357 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Src> 
#line 358 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Copy_cv< _Tgt, const volatile _Src>  { 
#line 360 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef typename remove_reference< _Tgt> ::type _Tgtx; 
#line 361 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef const volatile _Tgtx &type; 
#line 362 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 364 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Tgt, class 
#line 365 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Src> 
#line 366 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Copy_cv< _Tgt, _Src &>  { 
#line 368 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef typename std::_Copy_cv< _Tgt, _Src> ::type type; 
#line 369 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 372 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Wrap_int { 
#line 374 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
_Wrap_int(int) 
#line 375 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
{ 
#line 376 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
} 
#line 377 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 379 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 380 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Identity { 
#line 382 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
typedef _Ty type; 
#line 383 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}; 
#line 419 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Ty> 
#line 420 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
struct _Has_result_type { 
#line 421 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
template< class _Uty> static auto _Fn(int, _Identity< typename _Uty::result_type>  * = 0, _Identity< typename _Uty::result_type>  * = 0, _Identity< typename _Uty::result_type>  * = 0)->true_type; template< class _Uty> static auto _Fn(_Wrap_int)->false_type; typedef decltype((_Fn< _Ty> (0))) type; }; 
#line 422 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
}
#line 424 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
#pragma warning(pop)
#line 11 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
#pragma warning(push,3)
#line 425 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtr1common"
#pragma pack ( pop )
#line 10 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
#pragma pack ( push, 8 )
#line 15 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
namespace std { 
#line 16 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
template< class _Ty> 
#line 17 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
struct _Promote_to_float { 
#line 20 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
typedef typename conditional< is_integral< _Ty> ::value, double, _Ty> ::type type; 
#line 21 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
}; 
#line 23 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
template< class _Ty1, class 
#line 24 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
_Ty2> 
#line 25 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
struct _Common_float_type { 
#line 27 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
typedef typename _Promote_to_float< _Ty1> ::type _Ty1f; 
#line 28 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
typedef typename _Promote_to_float< _Ty2> ::type _Ty2f; 
#line 33 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
typedef typename conditional< is_same< typename _Promote_to_float< _Ty1> ::type, long double> ::value || is_same< typename _Promote_to_float< _Ty2> ::type, long double> ::value, long double, typename conditional< is_same< typename _Promote_to_float< _Ty1> ::type, double> ::value || is_same< typename _Promote_to_float< _Ty2> ::type, double> ::value, double, float> ::type> ::type type; 
#line 34 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
}; 
#line 35 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
}
#line 75 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl pow(double, double); 
#line 76 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
inline float __cdecl pow(float, float) throw(); 
#line 77 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
inline long double __cdecl pow(long double, long double) throw(); 
#line 79 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
template < class _Ty1,
 class _Ty2 > inline
 typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value
  && :: std :: _Is_numeric < _Ty2 > :: value,
  typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type
 pow ( const _Ty1 _Left, const _Ty2 _Right )
 {
 typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type;
 return ( :: pow ( type ( _Left ), type ( _Right ) ) );
 }
#line 91 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl acos(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type acos ( _Ty _Left ) { return ( :: acos ( ( double ) _Left ) ); }
#line 92 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl asin(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type asin ( _Ty _Left ) { return ( :: asin ( ( double ) _Left ) ); }
#line 93 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl atan(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type atan ( _Ty _Left ) { return ( :: atan ( ( double ) _Left ) ); }
#line 94 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl atan2(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type atan2 ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: atan2 ( ( type ) _Left, ( type ) _Right ) ); }
#line 95 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl ceil(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type ceil ( _Ty _Left ) { return ( :: ceil ( ( double ) _Left ) ); }
#line 96 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl cos(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type cos ( _Ty _Left ) { return ( :: cos ( ( double ) _Left ) ); }
#line 97 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl cosh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type cosh ( _Ty _Left ) { return ( :: cosh ( ( double ) _Left ) ); }
#line 98 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl exp(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type exp ( _Ty _Left ) { return ( :: exp ( ( double ) _Left ) ); }
#line 100 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl floor(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type floor ( _Ty _Left ) { return ( :: floor ( ( double ) _Left ) ); }
#line 101 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl fmod(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fmod ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fmod ( ( type ) _Left, ( type ) _Right ) ); }
#line 102 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl frexp(double, int *); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type frexp ( _Ty _Left, int * _Arg2 ) { return ( :: frexp ( ( double ) _Left, _Arg2 ) ); }
#line 103 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl ldexp(double, int); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type ldexp ( _Ty _Left, int _Arg2 ) { return ( :: ldexp ( ( double ) _Left, _Arg2 ) ); }
#line 104 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl log(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log ( _Ty _Left ) { return ( :: log ( ( double ) _Left ) ); }
#line 105 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl log10(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log10 ( _Ty _Left ) { return ( :: log10 ( ( double ) _Left ) ); }
#line 108 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl sin(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sin ( _Ty _Left ) { return ( :: sin ( ( double ) _Left ) ); }
#line 109 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl sinh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sinh ( _Ty _Left ) { return ( :: sinh ( ( double ) _Left ) ); }
#line 110 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl sqrt(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type sqrt ( _Ty _Left ) { return ( :: sqrt ( ( double ) _Left ) ); }
#line 111 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl tan(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type tan ( _Ty _Left ) { return ( :: tan ( ( double ) _Left ) ); }
#line 112 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" double __cdecl tanh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type tanh ( _Ty _Left ) { return ( :: tanh ( ( double ) _Left ) ); }
#line 124 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
inline float _Fma(float _Left, float _Middle, float _Right) 
#line 125 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
{ 
#line 126 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
return ::fmaf(_Left, _Middle, _Right); 
#line 127 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
} 
#line 129 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
inline double _Fma(double _Left, double _Middle, double _Right) 
#line 130 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
{ 
#line 131 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
return ::fma(_Left, _Middle, _Right); 
#line 132 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
} 
#line 134 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
inline long double _Fma(long double _Left, long double _Middle, long double _Right) 
#line 135 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
{ 
#line 136 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
return ::fmal(_Left, _Middle, _Right); 
#line 137 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
} 
#line 139 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
template < class _Ty1,
 class _Ty2,
 class _Ty3 > inline
 typename :: std :: _Common_float_type < _Ty1,
  typename :: std :: _Common_float_type < _Ty2, _Ty3 > :: type > :: type
 fma ( _Ty1 _Left, _Ty2 _Middle, _Ty3 _Right )
 {
 typedef typename :: std :: _Common_float_type < _Ty1,
  typename :: std :: _Common_float_type < _Ty2, _Ty3 > :: type > :: type type;
 return ( _Fma ( ( type ) _Left, ( type ) _Middle, ( type ) _Right ) );
 }
#line 152 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
inline float _Remquo(float _Left, float _Right, int *_Pquo) 
#line 153 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
{ 
#line 154 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
return ::remquof(_Left, _Right, _Pquo); 
#line 155 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
} 
#line 157 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
inline double _Remquo(double _Left, double _Right, int *_Pquo) 
#line 158 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
{ 
#line 159 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
return ::remquo(_Left, _Right, _Pquo); 
#line 160 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
} 
#line 162 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
inline long double _Remquo(long double _Left, long double _Right, int *_Pquo) 
#line 163 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
{ 
#line 164 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
return ::remquol(_Left, _Right, _Pquo); 
#line 165 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
} 
#line 167 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
template < class _Ty1,
 class _Ty2 > inline
 typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type
 remquo ( _Ty1 _Left, _Ty2 _Right, int * _Pquo )
 {
 typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type;
 return ( _Remquo ( ( type ) _Left, ( type ) _Right, _Pquo ) );
 }
#line 176 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl acosh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type acosh ( _Ty _Left ) { return ( :: acosh ( ( double ) _Left ) ); }
#line 177 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl asinh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type asinh ( _Ty _Left ) { return ( :: asinh ( ( double ) _Left ) ); }
#line 178 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl atanh(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type atanh ( _Ty _Left ) { return ( :: atanh ( ( double ) _Left ) ); }
#line 179 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl cbrt(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type cbrt ( _Ty _Left ) { return ( :: cbrt ( ( double ) _Left ) ); }
#line 180 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl copysign(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type copysign ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: copysign ( ( type ) _Left, ( type ) _Right ) ); }
#line 181 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl erf(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type erf ( _Ty _Left ) { return ( :: erf ( ( double ) _Left ) ); }
#line 182 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl erfc(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type erfc ( _Ty _Left ) { return ( :: erfc ( ( double ) _Left ) ); }
#line 183 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl expm1(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type expm1 ( _Ty _Left ) { return ( :: expm1 ( ( double ) _Left ) ); }
#line 184 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl exp2(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type exp2 ( _Ty _Left ) { return ( :: exp2 ( ( double ) _Left ) ); }
#line 186 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl fdim(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fdim ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fdim ( ( type ) _Left, ( type ) _Right ) ); }
#line 188 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl fmax(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fmax ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fmax ( ( type ) _Left, ( type ) _Right ) ); }
#line 189 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl fmin(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type fmin ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: fmin ( ( type ) _Left, ( type ) _Right ) ); }
#line 190 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __inline double __cdecl hypot(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type hypot ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: hypot ( ( type ) _Left, ( type ) _Right ) ); }
#line 191 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) int __cdecl ilogb(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, int > :: type ilogb ( _Ty _Left ) { return ( :: ilogb ( ( double ) _Left ) ); }
#line 192 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl lgamma(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type lgamma ( _Ty _Left ) { return ( :: lgamma ( ( double ) _Left ) ); }
#line 193 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) __int64 __cdecl llrint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long long > :: type llrint ( _Ty _Left ) { return ( :: llrint ( ( double ) _Left ) ); }
#line 194 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) __int64 __cdecl llround(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long long > :: type llround ( _Ty _Left ) { return ( :: llround ( ( double ) _Left ) ); }
#line 195 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl log1p(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log1p ( _Ty _Left ) { return ( :: log1p ( ( double ) _Left ) ); }
#line 196 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl log2(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type log2 ( _Ty _Left ) { return ( :: log2 ( ( double ) _Left ) ); }
#line 197 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl logb(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type logb ( _Ty _Left ) { return ( :: logb ( ( double ) _Left ) ); }
#line 198 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) long __cdecl lrint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long > :: type lrint ( _Ty _Left ) { return ( :: lrint ( ( double ) _Left ) ); }
#line 199 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) long __cdecl lround(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, long > :: type lround ( _Ty _Left ) { return ( :: lround ( ( double ) _Left ) ); }
#line 200 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl nearbyint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type nearbyint ( _Ty _Left ) { return ( :: nearbyint ( ( double ) _Left ) ); }
#line 201 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl nextafter(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type nextafter ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: nextafter ( ( type ) _Left, ( type ) _Right ) ); }
#line 202 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl nexttoward(double, long double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type nexttoward ( _Ty _Left, long double _Arg2 ) { return ( :: nexttoward ( ( double ) _Left, _Arg2 ) ); }
#line 203 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl remainder(double, double); template < class _Ty1, class _Ty2 > inline typename :: std :: enable_if < :: std :: _Is_numeric < _Ty1 > :: value && :: std :: _Is_numeric < _Ty2 > :: value, typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type > :: type remainder ( _Ty1 _Left, _Ty2 _Right ) { typedef typename :: std :: _Common_float_type < _Ty1, _Ty2 > :: type type; return ( :: remainder ( ( type ) _Left, ( type ) _Right ) ); }
#line 205 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl rint(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type rint ( _Ty _Left ) { return ( :: rint ( ( double ) _Left ) ); }
#line 206 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl round(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type round ( _Ty _Left ) { return ( :: round ( ( double ) _Left ) ); }
#line 207 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl scalbln(double, long); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type scalbln ( _Ty _Left, long _Arg2 ) { return ( :: scalbln ( ( double ) _Left, _Arg2 ) ); }
#line 208 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl scalbn(double, int); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type scalbn ( _Ty _Left, int _Arg2 ) { return ( :: scalbn ( ( double ) _Left, _Arg2 ) ); }
#line 209 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl tgamma(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type tgamma ( _Ty _Left ) { return ( :: tgamma ( ( double ) _Left ) ); }
#line 210 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
extern "C" __declspec(dllimport) double __cdecl trunc(double); template < class _Ty > inline typename :: std :: enable_if < :: std :: is_integral < _Ty > :: value, double > :: type trunc ( _Ty _Left ) { return ( :: trunc ( ( double ) _Left ) ); }
#line 215 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\xtgmath.h"
#pragma warning(pop)
#pragma pack ( pop )
#line 22 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
namespace std { 
#line 23 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::abs;using ::acos;using ::asin;
#line 24 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::atan;using ::atan2;using ::ceil;
#line 25 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::cos;using ::cosh;using ::exp;
#line 26 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::fabs;using ::floor;using ::fmod;
#line 27 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::frexp;using ::ldexp;using ::log;
#line 28 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::log10;using ::modf;using ::pow;
#line 29 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::sin;using ::sinh;using ::sqrt;
#line 30 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::tan;using ::tanh;
#line 32 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::acosf;using ::asinf;
#line 33 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::atanf;using ::atan2f;using ::ceilf;
#line 34 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::cosf;using ::coshf;using ::expf;
#line 35 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::fabsf;using ::floorf;using ::fmodf;
#line 36 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::frexpf;using ::ldexpf;using ::logf;
#line 37 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::log10f;using ::modff;using ::powf;
#line 38 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::sinf;using ::sinhf;using ::sqrtf;
#line 39 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::tanf;using ::tanhf;
#line 41 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::acosl;using ::asinl;
#line 42 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::atanl;using ::atan2l;using ::ceill;
#line 43 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::cosl;using ::coshl;using ::expl;
#line 44 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::fabsl;using ::floorl;using ::fmodl;
#line 45 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::frexpl;using ::ldexpl;using ::logl;
#line 46 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::log10l;using ::modfl;using ::powl;
#line 47 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::sinl;using ::sinhl;using ::sqrtl;
#line 48 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::tanl;using ::tanhl;
#line 50 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::float_t;using ::double_t;
#line 52 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::acosh;using ::asinh;using ::atanh;
#line 53 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::cbrt;using ::erf;using ::erfc;
#line 54 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::expm1;using ::exp2;
#line 55 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::hypot;using ::ilogb;using ::lgamma;
#line 56 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::log1p;using ::log2;using ::logb;
#line 57 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::llrint;using ::lrint;using ::nearbyint;
#line 58 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::rint;using ::llround;using ::lround;
#line 59 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::fdim;using ::fma;using ::fmax;using ::fmin;
#line 60 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::round;using ::trunc;
#line 61 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::remainder;using ::remquo;
#line 62 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::copysign;using ::nan;using ::nextafter;
#line 63 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::scalbn;using ::scalbln;
#line 64 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::nexttoward;using ::tgamma;
#line 66 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::acoshf;using ::asinhf;using ::atanhf;
#line 67 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::cbrtf;using ::erff;using ::erfcf;
#line 68 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::expm1f;using ::exp2f;
#line 69 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::hypotf;using ::ilogbf;using ::lgammaf;
#line 70 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::log1pf;using ::log2f;using ::logbf;
#line 71 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::llrintf;using ::lrintf;using ::nearbyintf;
#line 72 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::rintf;using ::llroundf;using ::lroundf;
#line 73 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::fdimf;using ::fmaf;using ::fmaxf;using ::fminf;
#line 74 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::roundf;using ::truncf;
#line 75 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::remainderf;using ::remquof;
#line 76 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::copysignf;using ::nanf;
#line 77 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::nextafterf;using ::scalbnf;using ::scalblnf;
#line 78 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::nexttowardf;using ::tgammaf;
#line 80 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::acoshl;using ::asinhl;using ::atanhl;
#line 81 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::cbrtl;using ::erfl;using ::erfcl;
#line 82 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::expm1l;using ::exp2l;
#line 83 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::hypotl;using ::ilogbl;using ::lgammal;
#line 84 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::log1pl;using ::log2l;using ::logbl;
#line 85 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::llrintl;using ::lrintl;using ::nearbyintl;
#line 86 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::rintl;using ::llroundl;using ::lroundl;
#line 87 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::fdiml;using ::fmal;using ::fmaxl;using ::fminl;
#line 88 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::roundl;using ::truncl;
#line 89 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::remainderl;using ::remquol;
#line 90 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::copysignl;using ::nanl;
#line 91 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::nextafterl;using ::scalbnl;using ::scalblnl;
#line 92 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::nexttowardl;using ::tgammal;
#line 94 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::fpclassify;using ::signbit;
#line 95 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::isfinite;using ::isinf;
#line 96 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::isnan;using ::isnormal;
#line 97 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::isgreater;using ::isgreaterequal;
#line 98 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::isless;using ::islessequal;
#line 99 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
using ::islessgreater;using ::isunordered;
#line 100 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cmath"
}
#line 17 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
namespace std { 
#line 18 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::size_t;using ::div_t;using ::ldiv_t;
#line 19 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::abort;using ::abs;using ::atexit;
#line 20 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::atof;using ::atoi;using ::atol;
#line 21 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::bsearch;using ::calloc;using ::div;
#line 22 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::exit;using ::free;
#line 23 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::labs;using ::ldiv;using ::malloc;
#line 24 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::mblen;using ::mbstowcs;using ::mbtowc;
#line 25 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::qsort;using ::rand;using ::realloc;
#line 26 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::srand;using ::strtod;using ::strtol;
#line 27 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::strtoul;
#line 28 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::wcstombs;using ::wctomb;
#line 30 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::lldiv_t;
#line 33 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::getenv;
#line 34 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::system;
#line 37 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::atoll;using ::llabs;using ::lldiv;
#line 38 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::strtof;using ::strtold;
#line 39 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
using ::strtoll;using ::strtoull;
#line 40 "E:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/../../VC/INCLUDE\\cstdlib"
}
#line 8968 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern double __cdecl _hypot(double x, double y); } 
#line 8969 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern float __cdecl _hypotf(float x, float y); } 
#line 8979 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline bool signbit(long double); 
#line 8980 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int _ldsign(long double); } 
#line 9023 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline bool signbit(double); 
#line 9024 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int _dsign(double); } 
#line 9068 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline bool signbit(float); 
#line 9069 "e:\\cudatoolkit\\include\\math_functions.h"
extern "C" { __declspec(dllimport) extern int _fdsign(float); } 
#line 9077 "e:\\cudatoolkit\\include\\math_functions.h"
static __inline bool isinf(long double a); 
#line 9112 "e:\\cudatoolkit\\include\\math_functions.h"
static __inline bool isinf(double a); 
#line 9150 "e:\\cudatoolkit\\include\\math_functions.h"
static __inline bool isinf(float a); 
#line 9157 "e:\\cudatoolkit\\include\\math_functions.h"
static __inline bool isnan(long double a); 
#line 9190 "e:\\cudatoolkit\\include\\math_functions.h"
static __inline bool isnan(double a); 
#line 9226 "e:\\cudatoolkit\\include\\math_functions.h"
static __inline bool isnan(float a); 
#line 9233 "e:\\cudatoolkit\\include\\math_functions.h"
static __inline bool isfinite(long double a); 
#line 9270 "e:\\cudatoolkit\\include\\math_functions.h"
static __inline bool isfinite(double a); 
#line 9306 "e:\\cudatoolkit\\include\\math_functions.h"
static __inline bool isfinite(float a); 
#line 9314 "e:\\cudatoolkit\\include\\math_functions.h"
template< class T> extern inline T _Pow_int(T, int) throw(); 
#line 9315 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline __int64 abs(__int64) throw(); 
#line 9386 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline long __cdecl abs(long) throw(); 
#line 9390 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl abs(float) throw(); 
#line 9391 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline double __cdecl abs(double) throw(); 
#line 9392 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl fabs(float) throw(); 
#line 9393 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl ceil(float) throw(); 
#line 9394 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl floor(float) throw(); 
#line 9395 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl sqrt(float) throw(); 
#line 9396 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl pow(float, float) throw(); 
#line 9412 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl pow(float, int) throw(); 
#line 9413 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline double __cdecl pow(double, int) throw(); 
#line 9416 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl log(float) throw(); 
#line 9417 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl log10(float) throw(); 
#line 9418 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl fmod(float, float) throw(); 
#line 9419 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl modf(float, float *) throw(); 
#line 9420 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl exp(float) throw(); 
#line 9421 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl frexp(float, int *) throw(); 
#line 9422 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl ldexp(float, int) throw(); 
#line 9423 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl asin(float) throw(); 
#line 9424 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl sin(float) throw(); 
#line 9425 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl sinh(float) throw(); 
#line 9426 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl acos(float) throw(); 
#line 9427 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl cos(float) throw(); 
#line 9428 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl cosh(float) throw(); 
#line 9429 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl atan(float) throw(); 
#line 9430 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl atan2(float, float) throw(); 
#line 9431 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl tan(float) throw(); 
#line 9432 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl tanh(float) throw(); 
#line 9564 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl logb(float) throw(); 
#line 9565 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline int __cdecl ilogb(float) throw(); 
#line 9566 "e:\\cudatoolkit\\include\\math_functions.h"
extern float __cdecl scalbn(float, float) throw(); 
#line 9567 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl scalbln(float, long) throw(); 
#line 9568 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl exp2(float) throw(); 
#line 9569 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl expm1(float) throw(); 
#line 9570 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl log2(float) throw(); 
#line 9571 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl log1p(float) throw(); 
#line 9572 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl acosh(float) throw(); 
#line 9573 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl asinh(float) throw(); 
#line 9574 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl atanh(float) throw(); 
#line 9575 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl hypot(float, float) throw(); 
#line 9576 "e:\\cudatoolkit\\include\\math_functions.h"
extern float __cdecl norm3d(float, float, float) throw(); 
#line 9577 "e:\\cudatoolkit\\include\\math_functions.h"
extern float __cdecl norm4d(float, float, float, float) throw(); 
#line 9578 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl cbrt(float) throw(); 
#line 9579 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl erf(float) throw(); 
#line 9580 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl erfc(float) throw(); 
#line 9581 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl lgamma(float) throw(); 
#line 9582 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl tgamma(float) throw(); 
#line 9583 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl copysign(float, float) throw(); 
#line 9584 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl nextafter(float, float) throw(); 
#line 9585 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl remainder(float, float) throw(); 
#line 9586 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl remquo(float, float, int *) throw(); 
#line 9587 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl round(float) throw(); 
#line 9588 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline long __cdecl lround(float) throw(); 
#line 9589 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline __int64 __cdecl llround(float) throw(); 
#line 9590 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl trunc(float) throw(); 
#line 9591 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl rint(float) throw(); 
#line 9592 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline long __cdecl lrint(float) throw(); 
#line 9593 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline __int64 __cdecl llrint(float) throw(); 
#line 9594 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl nearbyint(float) throw(); 
#line 9595 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl fdim(float, float) throw(); 
#line 9596 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl fma(float, float, float) throw(); 
#line 9597 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl fmax(float, float) throw(); 
#line 9598 "e:\\cudatoolkit\\include\\math_functions.h"
extern inline float __cdecl fmin(float, float) throw(); 
#line 9601 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float exp10(float a); 
#line 9603 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float rsqrt(float a); 
#line 9605 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float rcbrt(float a); 
#line 9607 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float sinpi(float a); 
#line 9609 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float cospi(float a); 
#line 9611 "e:\\cudatoolkit\\include\\math_functions.h"
static inline void sincospi(float a, float * sptr, float * cptr); 
#line 9613 "e:\\cudatoolkit\\include\\math_functions.h"
static inline void sincos(float a, float * sptr, float * cptr); 
#line 9615 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float j0(float a); 
#line 9617 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float j1(float a); 
#line 9619 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float jn(int n, float a); 
#line 9621 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float y0(float a); 
#line 9623 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float y1(float a); 
#line 9625 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float yn(int n, float a); 
#line 9627 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float cyl_bessel_i0(float a); 
#line 9629 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float cyl_bessel_i1(float a); 
#line 9631 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float erfinv(float a); 
#line 9633 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float erfcinv(float a); 
#line 9635 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float normcdfinv(float a); 
#line 9637 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float normcdf(float a); 
#line 9639 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float erfcx(float a); 
#line 9641 "e:\\cudatoolkit\\include\\math_functions.h"
static inline double copysign(double a, float b); 
#line 9643 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float copysign(float a, double b); 
#line 9645 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned min(unsigned a, unsigned b); 
#line 9647 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned min(int a, unsigned b); 
#line 9649 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned min(unsigned a, int b); 
#line 9651 "e:\\cudatoolkit\\include\\math_functions.h"
static inline long min(long a, long b); 
#line 9653 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned long min(unsigned long a, unsigned long b); 
#line 9655 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned long min(long a, unsigned long b); 
#line 9657 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned long min(unsigned long a, long b); 
#line 9659 "e:\\cudatoolkit\\include\\math_functions.h"
static inline __int64 min(__int64 a, __int64 b); 
#line 9661 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned __int64 min(unsigned __int64 a, unsigned __int64 b); 
#line 9663 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned __int64 min(__int64 a, unsigned __int64 b); 
#line 9665 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned __int64 min(unsigned __int64 a, __int64 b); 
#line 9667 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float min(float a, float b); 
#line 9669 "e:\\cudatoolkit\\include\\math_functions.h"
static inline double min(double a, double b); 
#line 9671 "e:\\cudatoolkit\\include\\math_functions.h"
static inline double min(float a, double b); 
#line 9673 "e:\\cudatoolkit\\include\\math_functions.h"
static inline double min(double a, float b); 
#line 9675 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned max(unsigned a, unsigned b); 
#line 9677 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned max(int a, unsigned b); 
#line 9679 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned max(unsigned a, int b); 
#line 9681 "e:\\cudatoolkit\\include\\math_functions.h"
static inline long max(long a, long b); 
#line 9683 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned long max(unsigned long a, unsigned long b); 
#line 9685 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned long max(long a, unsigned long b); 
#line 9687 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned long max(unsigned long a, long b); 
#line 9689 "e:\\cudatoolkit\\include\\math_functions.h"
static inline __int64 max(__int64 a, __int64 b); 
#line 9691 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned __int64 max(unsigned __int64 a, unsigned __int64 b); 
#line 9693 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned __int64 max(__int64 a, unsigned __int64 b); 
#line 9695 "e:\\cudatoolkit\\include\\math_functions.h"
static inline unsigned __int64 max(unsigned __int64 a, __int64 b); 
#line 9697 "e:\\cudatoolkit\\include\\math_functions.h"
static inline float max(float a, float b); 
#line 9699 "e:\\cudatoolkit\\include\\math_functions.h"
static inline double max(double a, double b); 
#line 9701 "e:\\cudatoolkit\\include\\math_functions.h"
static inline double max(float a, double b); 
#line 9703 "e:\\cudatoolkit\\include\\math_functions.h"
static inline double max(double a, float b); 
#line 314 "e:\\cudatoolkit\\include\\math_functions.hpp"
static __inline bool isinf(long double a) 
#line 315 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 319 "e:\\cudatoolkit\\include\\math_functions.hpp"
return isinf< long double> (a); 
#line 321 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 330 "e:\\cudatoolkit\\include\\math_functions.hpp"
static __inline bool isinf(double a) 
#line 331 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 335 "e:\\cudatoolkit\\include\\math_functions.hpp"
return isinf< double> (a); 
#line 337 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 346 "e:\\cudatoolkit\\include\\math_functions.hpp"
static __inline bool isinf(float a) 
#line 347 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 351 "e:\\cudatoolkit\\include\\math_functions.hpp"
return isinf< float> (a); 
#line 353 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 362 "e:\\cudatoolkit\\include\\math_functions.hpp"
static __inline bool isnan(long double a) 
#line 363 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 367 "e:\\cudatoolkit\\include\\math_functions.hpp"
return isnan< long double> (a); 
#line 369 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 378 "e:\\cudatoolkit\\include\\math_functions.hpp"
static __inline bool isnan(double a) 
#line 379 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 383 "e:\\cudatoolkit\\include\\math_functions.hpp"
return isnan< double> (a); 
#line 385 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 394 "e:\\cudatoolkit\\include\\math_functions.hpp"
static __inline bool isnan(float a) 
#line 395 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 399 "e:\\cudatoolkit\\include\\math_functions.hpp"
return isnan< float> (a); 
#line 401 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 410 "e:\\cudatoolkit\\include\\math_functions.hpp"
static __inline bool isfinite(long double a) 
#line 411 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 415 "e:\\cudatoolkit\\include\\math_functions.hpp"
return isfinite< long double> (a); 
#line 417 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 426 "e:\\cudatoolkit\\include\\math_functions.hpp"
static __inline bool isfinite(double a) 
#line 427 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 431 "e:\\cudatoolkit\\include\\math_functions.hpp"
return isfinite< double> (a); 
#line 433 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 442 "e:\\cudatoolkit\\include\\math_functions.hpp"
static __inline bool isfinite(float a) 
#line 443 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 447 "e:\\cudatoolkit\\include\\math_functions.hpp"
return isfinite< float> (a); 
#line 449 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 639 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float exp10(float a) 
#line 640 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 641 "e:\\cudatoolkit\\include\\math_functions.hpp"
return exp10f(a); 
#line 642 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 644 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float rsqrt(float a) 
#line 645 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 646 "e:\\cudatoolkit\\include\\math_functions.hpp"
return rsqrtf(a); 
#line 647 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 649 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float rcbrt(float a) 
#line 650 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 651 "e:\\cudatoolkit\\include\\math_functions.hpp"
return rcbrtf(a); 
#line 652 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 654 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float sinpi(float a) 
#line 655 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 656 "e:\\cudatoolkit\\include\\math_functions.hpp"
return sinpif(a); 
#line 657 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 659 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float cospi(float a) 
#line 660 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 661 "e:\\cudatoolkit\\include\\math_functions.hpp"
return cospif(a); 
#line 662 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 664 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline void sincospi(float a, float *sptr, float *cptr) 
#line 665 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 666 "e:\\cudatoolkit\\include\\math_functions.hpp"
sincospif(a, sptr, cptr); 
#line 667 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 669 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline void sincos(float a, float *sptr, float *cptr) 
#line 670 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 671 "e:\\cudatoolkit\\include\\math_functions.hpp"
sincosf(a, sptr, cptr); 
#line 672 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 674 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float j0(float a) 
#line 675 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 676 "e:\\cudatoolkit\\include\\math_functions.hpp"
return j0f(a); 
#line 677 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 679 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float j1(float a) 
#line 680 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 681 "e:\\cudatoolkit\\include\\math_functions.hpp"
return j1f(a); 
#line 682 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 684 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float jn(int n, float a) 
#line 685 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 686 "e:\\cudatoolkit\\include\\math_functions.hpp"
return jnf(n, a); 
#line 687 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 689 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float y0(float a) 
#line 690 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 691 "e:\\cudatoolkit\\include\\math_functions.hpp"
return y0f(a); 
#line 692 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 694 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float y1(float a) 
#line 695 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 696 "e:\\cudatoolkit\\include\\math_functions.hpp"
return y1f(a); 
#line 697 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 699 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float yn(int n, float a) 
#line 700 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 701 "e:\\cudatoolkit\\include\\math_functions.hpp"
return ynf(n, a); 
#line 702 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 704 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float cyl_bessel_i0(float a) 
#line 705 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 706 "e:\\cudatoolkit\\include\\math_functions.hpp"
return cyl_bessel_i0f(a); 
#line 707 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 709 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float cyl_bessel_i1(float a) 
#line 710 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 711 "e:\\cudatoolkit\\include\\math_functions.hpp"
return cyl_bessel_i1f(a); 
#line 712 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 714 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float erfinv(float a) 
#line 715 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 716 "e:\\cudatoolkit\\include\\math_functions.hpp"
return erfinvf(a); 
#line 717 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 719 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float erfcinv(float a) 
#line 720 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 721 "e:\\cudatoolkit\\include\\math_functions.hpp"
return erfcinvf(a); 
#line 722 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 724 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float normcdfinv(float a) 
#line 725 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 726 "e:\\cudatoolkit\\include\\math_functions.hpp"
return normcdfinvf(a); 
#line 727 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 729 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float normcdf(float a) 
#line 730 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 731 "e:\\cudatoolkit\\include\\math_functions.hpp"
return normcdff(a); 
#line 732 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 734 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float erfcx(float a) 
#line 735 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 736 "e:\\cudatoolkit\\include\\math_functions.hpp"
return erfcxf(a); 
#line 737 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 739 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline double copysign(double a, float b) 
#line 740 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 741 "e:\\cudatoolkit\\include\\math_functions.hpp"
return copysign(a, (double)b); 
#line 742 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 744 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float copysign(float a, double b) 
#line 745 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 746 "e:\\cudatoolkit\\include\\math_functions.hpp"
return copysignf(a, (float)b); 
#line 747 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 749 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned min(unsigned a, unsigned b) 
#line 750 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 751 "e:\\cudatoolkit\\include\\math_functions.hpp"
return umin(a, b); 
#line 752 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 754 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned min(int a, unsigned b) 
#line 755 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 756 "e:\\cudatoolkit\\include\\math_functions.hpp"
return umin((unsigned)a, b); 
#line 757 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 759 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned min(unsigned a, int b) 
#line 760 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 761 "e:\\cudatoolkit\\include\\math_functions.hpp"
return umin(a, (unsigned)b); 
#line 762 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 764 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline long min(long a, long b) 
#line 765 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 768 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 771 "e:\\cudatoolkit\\include\\math_functions.hpp"
if (sizeof(long) == sizeof(int)) { 
#line 773 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 775 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (long)min((int)a, (int)b); 
#line 776 "e:\\cudatoolkit\\include\\math_functions.hpp"
} else { 
#line 777 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (long)llmin((__int64)a, (__int64)b); 
#line 778 "e:\\cudatoolkit\\include\\math_functions.hpp"
}  
#line 779 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 781 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned long min(unsigned long a, unsigned long b) 
#line 782 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 784 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 786 "e:\\cudatoolkit\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 788 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 790 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b); 
#line 791 "e:\\cudatoolkit\\include\\math_functions.hpp"
} else { 
#line 792 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)ullmin((unsigned __int64)a, (unsigned __int64)b); 
#line 793 "e:\\cudatoolkit\\include\\math_functions.hpp"
}  
#line 794 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 796 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned long min(long a, unsigned long b) 
#line 797 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 799 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 801 "e:\\cudatoolkit\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 803 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 805 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b); 
#line 806 "e:\\cudatoolkit\\include\\math_functions.hpp"
} else { 
#line 807 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)ullmin((unsigned __int64)a, (unsigned __int64)b); 
#line 808 "e:\\cudatoolkit\\include\\math_functions.hpp"
}  
#line 809 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 811 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned long min(unsigned long a, long b) 
#line 812 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 814 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 816 "e:\\cudatoolkit\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 818 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 820 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b); 
#line 821 "e:\\cudatoolkit\\include\\math_functions.hpp"
} else { 
#line 822 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)ullmin((unsigned __int64)a, (unsigned __int64)b); 
#line 823 "e:\\cudatoolkit\\include\\math_functions.hpp"
}  
#line 824 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 826 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline __int64 min(__int64 a, __int64 b) 
#line 827 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 828 "e:\\cudatoolkit\\include\\math_functions.hpp"
return llmin(a, b); 
#line 829 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 831 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned __int64 min(unsigned __int64 a, unsigned __int64 b) 
#line 832 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 833 "e:\\cudatoolkit\\include\\math_functions.hpp"
return ullmin(a, b); 
#line 834 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 836 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned __int64 min(__int64 a, unsigned __int64 b) 
#line 837 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 838 "e:\\cudatoolkit\\include\\math_functions.hpp"
return ullmin((unsigned __int64)a, b); 
#line 839 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 841 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned __int64 min(unsigned __int64 a, __int64 b) 
#line 842 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 843 "e:\\cudatoolkit\\include\\math_functions.hpp"
return ullmin(a, (unsigned __int64)b); 
#line 844 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 846 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float min(float a, float b) 
#line 847 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 848 "e:\\cudatoolkit\\include\\math_functions.hpp"
return fminf(a, b); 
#line 849 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 851 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline double min(double a, double b) 
#line 852 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 853 "e:\\cudatoolkit\\include\\math_functions.hpp"
return fmin(a, b); 
#line 854 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 856 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline double min(float a, double b) 
#line 857 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 858 "e:\\cudatoolkit\\include\\math_functions.hpp"
return fmin((double)a, b); 
#line 859 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 861 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline double min(double a, float b) 
#line 862 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 863 "e:\\cudatoolkit\\include\\math_functions.hpp"
return fmin(a, (double)b); 
#line 864 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 866 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned max(unsigned a, unsigned b) 
#line 867 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 868 "e:\\cudatoolkit\\include\\math_functions.hpp"
return umax(a, b); 
#line 869 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 871 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned max(int a, unsigned b) 
#line 872 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 873 "e:\\cudatoolkit\\include\\math_functions.hpp"
return umax((unsigned)a, b); 
#line 874 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 876 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned max(unsigned a, int b) 
#line 877 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 878 "e:\\cudatoolkit\\include\\math_functions.hpp"
return umax(a, (unsigned)b); 
#line 879 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 881 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline long max(long a, long b) 
#line 882 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 885 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 887 "e:\\cudatoolkit\\include\\math_functions.hpp"
if (sizeof(long) == sizeof(int)) { 
#line 889 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 891 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (long)max((int)a, (int)b); 
#line 892 "e:\\cudatoolkit\\include\\math_functions.hpp"
} else { 
#line 893 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (long)llmax((__int64)a, (__int64)b); 
#line 894 "e:\\cudatoolkit\\include\\math_functions.hpp"
}  
#line 895 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 897 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned long max(unsigned long a, unsigned long b) 
#line 898 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 900 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 902 "e:\\cudatoolkit\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 904 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 906 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b); 
#line 907 "e:\\cudatoolkit\\include\\math_functions.hpp"
} else { 
#line 908 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)ullmax((unsigned __int64)a, (unsigned __int64)b); 
#line 909 "e:\\cudatoolkit\\include\\math_functions.hpp"
}  
#line 910 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 912 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned long max(long a, unsigned long b) 
#line 913 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 915 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 917 "e:\\cudatoolkit\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 919 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 921 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b); 
#line 922 "e:\\cudatoolkit\\include\\math_functions.hpp"
} else { 
#line 923 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)ullmax((unsigned __int64)a, (unsigned __int64)b); 
#line 924 "e:\\cudatoolkit\\include\\math_functions.hpp"
}  
#line 925 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 927 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned long max(unsigned long a, long b) 
#line 928 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 930 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (disable: 4127)
#line 932 "e:\\cudatoolkit\\include\\math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) { 
#line 934 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning (default: 4127)
#line 936 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b); 
#line 937 "e:\\cudatoolkit\\include\\math_functions.hpp"
} else { 
#line 938 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (unsigned long)ullmax((unsigned __int64)a, (unsigned __int64)b); 
#line 939 "e:\\cudatoolkit\\include\\math_functions.hpp"
}  
#line 940 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 942 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline __int64 max(__int64 a, __int64 b) 
#line 943 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 944 "e:\\cudatoolkit\\include\\math_functions.hpp"
return llmax(a, b); 
#line 945 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 947 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned __int64 max(unsigned __int64 a, unsigned __int64 b) 
#line 948 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 949 "e:\\cudatoolkit\\include\\math_functions.hpp"
return ullmax(a, b); 
#line 950 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 952 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned __int64 max(__int64 a, unsigned __int64 b) 
#line 953 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 954 "e:\\cudatoolkit\\include\\math_functions.hpp"
return ullmax((unsigned __int64)a, b); 
#line 955 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 957 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned __int64 max(unsigned __int64 a, __int64 b) 
#line 958 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 959 "e:\\cudatoolkit\\include\\math_functions.hpp"
return ullmax(a, (unsigned __int64)b); 
#line 960 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 962 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline float max(float a, float b) 
#line 963 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 964 "e:\\cudatoolkit\\include\\math_functions.hpp"
return fmaxf(a, b); 
#line 965 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 967 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline double max(double a, double b) 
#line 968 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 969 "e:\\cudatoolkit\\include\\math_functions.hpp"
return fmax(a, b); 
#line 970 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 972 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline double max(float a, double b) 
#line 973 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 974 "e:\\cudatoolkit\\include\\math_functions.hpp"
return fmax((double)a, b); 
#line 975 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 977 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline double max(double a, float b) 
#line 978 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 979 "e:\\cudatoolkit\\include\\math_functions.hpp"
return fmax(a, (double)b); 
#line 980 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 986 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning(disable : 4211)
#line 991 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline int min(int a, int b) 
#line 992 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 993 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (a < b) ? a : b; 
#line 994 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 996 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned umin(unsigned a, unsigned b) 
#line 997 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 998 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (a < b) ? a : b; 
#line 999 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 1001 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline __int64 llmin(__int64 a, __int64 b) 
#line 1002 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 1003 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (a < b) ? a : b; 
#line 1004 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 1006 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned __int64 ullmin(unsigned __int64 a, unsigned __int64 
#line 1007 "e:\\cudatoolkit\\include\\math_functions.hpp"
b) 
#line 1008 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 1009 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (a < b) ? a : b; 
#line 1010 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 1012 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline int max(int a, int b) 
#line 1013 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 1014 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (a > b) ? a : b; 
#line 1015 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 1017 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned umax(unsigned a, unsigned b) 
#line 1018 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 1019 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (a > b) ? a : b; 
#line 1020 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 1022 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline __int64 llmax(__int64 a, __int64 b) 
#line 1023 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 1024 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (a > b) ? a : b; 
#line 1025 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 1027 "e:\\cudatoolkit\\include\\math_functions.hpp"
static inline unsigned __int64 ullmax(unsigned __int64 a, unsigned __int64 
#line 1028 "e:\\cudatoolkit\\include\\math_functions.hpp"
b) 
#line 1029 "e:\\cudatoolkit\\include\\math_functions.hpp"
{ 
#line 1030 "e:\\cudatoolkit\\include\\math_functions.hpp"
return (a > b) ? a : b; 
#line 1031 "e:\\cudatoolkit\\include\\math_functions.hpp"
} 
#line 1034 "e:\\cudatoolkit\\include\\math_functions.hpp"
#pragma warning(default: 4211)
#line 77 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
template< class T, int dim = 1> 
#line 78 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
struct surface : public surfaceReference { 
#line 81 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
surface() 
#line 82 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
{ 
#line 83 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
(::surfaceReference::channelDesc) = cudaCreateChannelDesc< T> (); 
#line 84 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
} 
#line 86 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
surface(::cudaChannelFormatDesc desc) 
#line 87 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
{ 
#line 88 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
(::surfaceReference::channelDesc) = desc; 
#line 89 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
} 
#line 91 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
}; 
#line 93 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
template< int dim> 
#line 94 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
struct surface< void, dim>  : public surfaceReference { 
#line 97 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
surface() 
#line 98 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
{ 
#line 99 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
(::surfaceReference::channelDesc) = cudaCreateChannelDesc< void> (); 
#line 100 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
} 
#line 102 "e:\\cudatoolkit\\include\\cuda_surface_types.h"
}; 
#line 77 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType> 
#line 78 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
struct texture : public textureReference { 
#line 81 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
texture(int norm = 0, ::cudaTextureFilterMode 
#line 82 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
fMode = cudaFilterModePoint, ::cudaTextureAddressMode 
#line 83 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
aMode = cudaAddressModeClamp) 
#line 84 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
{ 
#line 85 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
(::textureReference::normalized) = norm; 
#line 86 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
(::textureReference::filterMode) = fMode; 
#line 87 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[0]) = aMode; 
#line 88 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[1]) = aMode; 
#line 89 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[2]) = aMode; 
#line 90 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
(::textureReference::channelDesc) = cudaCreateChannelDesc< T> (); 
#line 91 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
(::textureReference::sRGB) = 0; 
#line 92 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
} 
#line 94 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
texture(int norm, ::cudaTextureFilterMode 
#line 95 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
fMode, ::cudaTextureAddressMode 
#line 96 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
aMode, ::cudaChannelFormatDesc 
#line 97 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
desc) 
#line 98 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
{ 
#line 99 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
(::textureReference::normalized) = norm; 
#line 100 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
(::textureReference::filterMode) = fMode; 
#line 101 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[0]) = aMode; 
#line 102 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[1]) = aMode; 
#line 103 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
((::textureReference::addressMode)[2]) = aMode; 
#line 104 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
(::textureReference::channelDesc) = desc; 
#line 105 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
(::textureReference::sRGB) = 0; 
#line 106 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
} 
#line 108 "e:\\cudatoolkit\\include\\cuda_texture_types.h"
}; 
#line 3230 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline int mulhi(int a, int b); 
#line 3232 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline unsigned mulhi(unsigned a, unsigned b); 
#line 3234 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline unsigned mulhi(int a, unsigned b); 
#line 3236 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline unsigned mulhi(unsigned a, int b); 
#line 3238 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline __int64 mul64hi(__int64 a, __int64 b); 
#line 3240 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, unsigned __int64 b); 
#line 3242 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(__int64 a, unsigned __int64 b); 
#line 3244 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, __int64 b); 
#line 3246 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline int float_as_int(float a); 
#line 3248 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline float int_as_float(int a); 
#line 3250 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline unsigned float_as_uint(float a); 
#line 3252 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline float uint_as_float(unsigned a); 
#line 3254 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline float saturate(float a); 
#line 3256 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline int mul24(int a, int b); 
#line 3258 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline unsigned umul24(unsigned a, unsigned b); 
#line 3260 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline void trap(); 
#line 3263 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline void brkpt(int c = 0); 
#line 3265 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline void syncthreads(); 
#line 3267 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline void prof_trigger(int e); 
#line 3269 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline void threadfence(bool global = true); 
#line 3271 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline int float2int(float a, cudaRoundMode mode = cudaRoundZero); 
#line 3273 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero); 
#line 3275 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest); 
#line 3277 "e:\\cudatoolkit\\include\\device_functions.h"
static __inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest); 
#line 83 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline int mulhi(int a, int b) 
#line 84 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 86 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 95 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 88 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline unsigned mulhi(unsigned a, unsigned b) 
#line 89 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 91 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 100 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 93 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline unsigned mulhi(int a, unsigned b) 
#line 94 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 96 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 105 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 98 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline unsigned mulhi(unsigned a, int b) 
#line 99 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 101 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 110 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 103 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline __int64 mul64hi(__int64 a, __int64 b) 
#line 104 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 106 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 115 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 108 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, unsigned __int64 b) 
#line 109 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 111 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 120 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 113 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline unsigned __int64 mul64hi(__int64 a, unsigned __int64 b) 
#line 114 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 116 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 125 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 118 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline unsigned __int64 mul64hi(unsigned __int64 a, __int64 b) 
#line 119 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 121 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 130 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 123 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline int float_as_int(float a) 
#line 124 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 126 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 135 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 128 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline float int_as_float(int a) 
#line 129 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 131 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 140 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 133 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline unsigned float_as_uint(float a) 
#line 134 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 136 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 145 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 138 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline float uint_as_float(unsigned a) 
#line 139 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 141 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 150 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 142 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline float saturate(float a) 
#line 143 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;
#line 145 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 154 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 147 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline int mul24(int a, int b) 
#line 148 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 150 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 159 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 152 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline unsigned umul24(unsigned a, unsigned b) 
#line 153 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
#line 155 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 164 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 157 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline void trap() 
#line 158 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;
#line 160 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 169 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 163 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline void brkpt(int c) 
#line 164 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)c;
#line 166 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 175 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 168 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline void syncthreads() 
#line 169 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;
#line 171 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 180 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 173 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline void prof_trigger(int e) 
#line 174 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)e;
#line 191 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}





































#line 230 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 193 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline void threadfence(bool global) 
#line 194 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)global;
#line 196 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 205 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 198 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline int float2int(float a, cudaRoundMode mode) 
#line 199 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 204 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 213 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 206 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline unsigned float2uint(float a, cudaRoundMode mode) 
#line 207 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 212 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 221 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 214 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline float int2float(int a, cudaRoundMode mode) 
#line 215 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 220 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 229 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 222 "e:\\cudatoolkit\\include\\device_functions.hpp"
static __inline float uint2float(unsigned a, cudaRoundMode mode) 
#line 223 "e:\\cudatoolkit\\include\\device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 228 "e:\\cudatoolkit\\include\\device_functions.hpp"
::exit(___);}







#line 237 "e:\\cudatoolkit\\include\\device_functions.hpp"
#line 105 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline int atomicAdd(int * address, int val); 
#line 107 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned atomicAdd(unsigned * address, unsigned val); 
#line 109 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline int atomicSub(int * address, int val); 
#line 111 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned atomicSub(unsigned * address, unsigned val); 
#line 113 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline int atomicExch(int * address, int val); 
#line 115 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned atomicExch(unsigned * address, unsigned val); 
#line 117 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline float atomicExch(float * address, float val); 
#line 119 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline int atomicMin(int * address, int val); 
#line 121 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned atomicMin(unsigned * address, unsigned val); 
#line 123 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline int atomicMax(int * address, int val); 
#line 125 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned atomicMax(unsigned * address, unsigned val); 
#line 127 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned atomicInc(unsigned * address, unsigned val); 
#line 129 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned atomicDec(unsigned * address, unsigned val); 
#line 131 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline int atomicAnd(int * address, int val); 
#line 133 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned atomicAnd(unsigned * address, unsigned val); 
#line 135 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline int atomicOr(int * address, int val); 
#line 137 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned atomicOr(unsigned * address, unsigned val); 
#line 139 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline int atomicXor(int * address, int val); 
#line 141 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned atomicXor(unsigned * address, unsigned val); 
#line 143 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline int atomicCAS(int * address, int compare, int val); 
#line 145 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned atomicCAS(unsigned * address, unsigned compare, unsigned val); 
#line 178 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned __int64 atomicAdd(unsigned __int64 * address, unsigned __int64 val); 
#line 180 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned __int64 atomicExch(unsigned __int64 * address, unsigned __int64 val); 
#line 182 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline unsigned __int64 atomicCAS(unsigned __int64 * address, unsigned __int64 compare, unsigned __int64 val); 
#line 184 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline bool any(bool cond); 
#line 186 "e:\\cudatoolkit\\include\\device_atomic_functions.h"
static __inline bool all(bool cond); 
#line 78 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline int atomicAdd(int *address, int val) 
#line 79 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 81 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 90 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 83 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicAdd(unsigned *address, unsigned val) 
#line 84 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 86 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 95 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 88 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline int atomicSub(int *address, int val) 
#line 89 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 91 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 100 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 93 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicSub(unsigned *address, unsigned val) 
#line 94 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 96 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 105 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 98 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline int atomicExch(int *address, int val) 
#line 99 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 101 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 110 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 103 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicExch(unsigned *address, unsigned val) 
#line 104 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 106 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 115 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 108 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline float atomicExch(float *address, float val) 
#line 109 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 111 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 120 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 113 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline int atomicMin(int *address, int val) 
#line 114 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 116 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 125 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 118 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicMin(unsigned *address, unsigned val) 
#line 119 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 121 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 130 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 123 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline int atomicMax(int *address, int val) 
#line 124 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 126 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 135 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 128 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicMax(unsigned *address, unsigned val) 
#line 129 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 131 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 140 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 133 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicInc(unsigned *address, unsigned val) 
#line 134 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 136 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 145 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 138 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicDec(unsigned *address, unsigned val) 
#line 139 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 141 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 150 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 143 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline int atomicAnd(int *address, int val) 
#line 144 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 146 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 155 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 148 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicAnd(unsigned *address, unsigned val) 
#line 149 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 151 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 160 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 153 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline int atomicOr(int *address, int val) 
#line 154 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 156 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 165 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 158 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicOr(unsigned *address, unsigned val) 
#line 159 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 161 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 170 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 163 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline int atomicXor(int *address, int val) 
#line 164 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 166 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 175 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 168 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicXor(unsigned *address, unsigned val) 
#line 169 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 171 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 180 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 173 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline int atomicCAS(int *address, int compare, int val) 
#line 174 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 176 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 185 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 178 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) 
#line 179 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 181 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 190 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 201 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned __int64 atomicAdd(unsigned __int64 *address, unsigned __int64 val) 
#line 202 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 204 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 213 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 206 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned __int64 atomicExch(unsigned __int64 *address, unsigned __int64 val) 
#line 207 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 209 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 218 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 211 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline unsigned __int64 atomicCAS(unsigned __int64 *address, unsigned __int64 compare, unsigned __int64 val) 
#line 212 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)compare;(void)val;
#line 214 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 223 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 216 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline bool any(bool cond) 
#line 217 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)cond;
#line 219 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 228 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 221 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
static __inline bool all(bool cond) 
#line 222 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
{int volatile ___ = 1;(void)cond;
#line 224 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
::exit(___);}







#line 233 "e:\\cudatoolkit\\include\\device_atomic_functions.hpp"
#line 1143 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline double fma(double a, double b, double c, cudaRoundMode mode); 
#line 1145 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest); 
#line 1147 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest); 
#line 1149 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline double dsub(double a, double b, cudaRoundMode mode = cudaRoundNearest); 
#line 1151 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline int double2int(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1153 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1155 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline __int64 double2ll(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1157 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline unsigned __int64 double2ull(double a, cudaRoundMode mode = cudaRoundZero); 
#line 1159 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline double ll2double(__int64 a, cudaRoundMode mode = cudaRoundNearest); 
#line 1161 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline double ull2double(unsigned __int64 a, cudaRoundMode mode = cudaRoundNearest); 
#line 1163 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest); 
#line 1165 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest); 
#line 1167 "e:\\cudatoolkit\\include\\device_double_functions.h"
static __inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest); 
#line 85 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline double fma(double a, double b, double c, cudaRoundMode mode) 
#line 86 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
#line 91 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 100 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 93 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline double dmul(double a, double b, cudaRoundMode mode) 
#line 94 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 99 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 108 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 101 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline double dadd(double a, double b, cudaRoundMode mode) 
#line 102 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 107 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 116 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 109 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline double dsub(double a, double b, cudaRoundMode mode) 
#line 110 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
#line 115 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 124 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 117 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline int double2int(double a, cudaRoundMode mode) 
#line 118 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 123 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 132 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 125 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline unsigned double2uint(double a, cudaRoundMode mode) 
#line 126 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 131 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 140 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 133 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline __int64 double2ll(double a, cudaRoundMode mode) 
#line 134 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 139 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 148 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 141 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline unsigned __int64 double2ull(double a, cudaRoundMode mode) 
#line 142 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 147 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 156 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 149 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline double ll2double(__int64 a, cudaRoundMode mode) 
#line 150 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 155 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 164 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 157 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline double ull2double(unsigned __int64 a, cudaRoundMode mode) 
#line 158 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 163 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 172 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 165 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline double int2double(int a, cudaRoundMode mode) 
#line 166 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 168 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 177 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 170 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline double uint2double(unsigned a, cudaRoundMode mode) 
#line 171 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 173 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 182 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 175 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
static __inline double float2double(float a, cudaRoundMode mode) 
#line 176 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
#line 178 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
::exit(___);}







#line 187 "e:\\cudatoolkit\\include\\device_double_functions.hpp"
#line 85 "e:\\cudatoolkit\\include\\sm_20_atomic_functions.h"
static __inline float atomicAdd(float * address, float val); 
#line 76 "e:\\cudatoolkit\\include\\sm_20_atomic_functions.hpp"
static __inline float atomicAdd(float *address, float val) 
#line 77 "e:\\cudatoolkit\\include\\sm_20_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 79 "e:\\cudatoolkit\\include\\sm_20_atomic_functions.hpp"
::exit(___);}







#line 88 "e:\\cudatoolkit\\include\\sm_20_atomic_functions.hpp"
#line 93 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.h"
static __inline __int64 atomicMin(__int64 * address, __int64 val); 
#line 95 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.h"
static __inline __int64 atomicMax(__int64 * address, __int64 val); 
#line 97 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicMin(unsigned __int64 * address, unsigned __int64 val); 
#line 99 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicMax(unsigned __int64 * address, unsigned __int64 val); 
#line 101 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicAnd(unsigned __int64 * address, unsigned __int64 val); 
#line 103 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicOr(unsigned __int64 * address, unsigned __int64 val); 
#line 105 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.h"
static __inline unsigned __int64 atomicXor(unsigned __int64 * address, unsigned __int64 val); 
#line 78 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
static __inline __int64 atomicMin(__int64 *address, __int64 val) 
#line 79 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 81 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 90 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
#line 83 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
static __inline __int64 atomicMax(__int64 *address, __int64 val) 
#line 84 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 86 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 95 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
#line 88 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicMin(unsigned __int64 *address, unsigned __int64 val) 
#line 89 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 91 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 100 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
#line 93 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicMax(unsigned __int64 *address, unsigned __int64 val) 
#line 94 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 96 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 105 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
#line 98 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicAnd(unsigned __int64 *address, unsigned __int64 val) 
#line 99 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 101 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 110 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
#line 103 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicOr(unsigned __int64 *address, unsigned __int64 val) 
#line 104 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 106 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 115 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
#line 108 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
static __inline unsigned __int64 atomicXor(unsigned __int64 *address, unsigned __int64 val) 
#line 109 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
{int volatile ___ = 1;(void)address;(void)val;
#line 111 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
::exit(___);}







#line 120 "e:\\cudatoolkit\\include\\sm_32_atomic_functions.hpp"
#line 1468 "e:\\cudatoolkit\\include\\sm_20_intrinsics.h"
static __inline unsigned ballot(bool pred); 
#line 1470 "e:\\cudatoolkit\\include\\sm_20_intrinsics.h"
static __inline int syncthreads_count(bool pred); 
#line 1472 "e:\\cudatoolkit\\include\\sm_20_intrinsics.h"
static __inline bool syncthreads_and(bool pred); 
#line 1474 "e:\\cudatoolkit\\include\\sm_20_intrinsics.h"
static __inline bool syncthreads_or(bool pred); 
#line 1479 "e:\\cudatoolkit\\include\\sm_20_intrinsics.h"
static __inline unsigned __isGlobal(const void * ptr); 
#line 77 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
static __inline unsigned ballot(bool pred) 
#line 78 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 80 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 89 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
#line 82 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
static __inline int syncthreads_count(bool pred) 
#line 83 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 85 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 94 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
#line 87 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
static __inline bool syncthreads_and(bool pred) 
#line 88 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 90 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 99 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
#line 92 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
static __inline bool syncthreads_or(bool pred) 
#line 93 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)pred;
#line 95 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
::exit(___);}







#line 104 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
#line 100 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
static __inline unsigned __isGlobal(const void *ptr) 
#line 101 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
{int volatile ___ = 1;(void)ptr;
#line 114 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
::exit(___);}
















#line 132 "e:\\cudatoolkit\\include\\sm_20_intrinsics.hpp"
#line 91 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline int __shfl(int var, int srcLane, int width = 32); 
#line 93 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl(unsigned var, int srcLane, int width = 32); 
#line 95 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline int __shfl_up(int var, unsigned delta, int width = 32); 
#line 96 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl_up(unsigned var, unsigned delta, int width = 32); 
#line 98 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline int __shfl_down(int var, unsigned delta, int width = 32); 
#line 100 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl_down(unsigned var, unsigned delta, int width = 32); 
#line 102 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline int __shfl_xor(int var, int laneMask, int width = 32); 
#line 104 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned __shfl_xor(unsigned var, int laneMask, int width = 32); 
#line 106 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline float __shfl(float var, int srcLane, int width = 32); 
#line 108 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline float __shfl_up(float var, unsigned delta, int width = 32); 
#line 110 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline float __shfl_down(float var, unsigned delta, int width = 32); 
#line 112 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline float __shfl_xor(float var, int laneMask, int width = 32); 
#line 115 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl(__int64 var, int srcLane, int width = 32); 
#line 117 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl(unsigned __int64 var, int srcLane, int width = 32); 
#line 119 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl_up(__int64 var, unsigned delta, int width = 32); 
#line 121 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl_up(unsigned __int64 var, unsigned delta, int width = 32); 
#line 123 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl_down(__int64 var, unsigned delta, int width = 32); 
#line 125 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl_down(unsigned __int64 var, unsigned delta, int width = 32); 
#line 127 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline __int64 __shfl_xor(__int64 var, int laneMask, int width = 32); 
#line 129 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned __int64 __shfl_xor(unsigned __int64 var, int laneMask, int width = 32); 
#line 131 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline double __shfl(double var, int srcLane, int width = 32); 
#line 133 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline double __shfl_up(double var, unsigned delta, int width = 32); 
#line 135 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline double __shfl_down(double var, unsigned delta, int width = 32); 
#line 137 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline double __shfl_xor(double var, int laneMask, int width = 32); 
#line 141 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline long __shfl(long var, int srcLane, int width = 32); 
#line 143 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl(unsigned long var, int srcLane, int width = 32); 
#line 145 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline long __shfl_up(long var, unsigned delta, int width = 32); 
#line 147 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width = 32); 
#line 149 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline long __shfl_down(long var, unsigned delta, int width = 32); 
#line 151 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width = 32); 
#line 153 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline long __shfl_xor(long var, int laneMask, int width = 32); 
#line 155 "e:\\cudatoolkit\\include\\sm_30_intrinsics.h"
static __inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width = 32); 
#line 99 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl(int var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 104 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 118 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 106 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl(unsigned var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 108 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 117 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 110 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl_up(int var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 115 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 129 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 116 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl_up(unsigned var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 118 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 127 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 120 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl_down(int var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 125 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 139 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 127 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl_down(unsigned var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 129 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 138 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 131 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline int __shfl_xor(int var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 136 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}












#line 150 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 138 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __shfl_xor(unsigned var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 140 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 149 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 142 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl(float var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 148 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 164 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 150 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl_up(float var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 156 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 172 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 158 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl_down(float var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 164 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 180 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 166 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline float __shfl_xor(float var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 172 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}














#line 188 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 175 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl(__int64 var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 182 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 199 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 184 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl(unsigned __int64 var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 186 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 195 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 188 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl_up(__int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 195 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 212 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 197 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl_up(unsigned __int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 199 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 208 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 201 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl_down(__int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 208 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 225 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 210 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl_down(unsigned __int64 var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 212 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 221 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 214 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline __int64 __shfl_xor(__int64 var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 221 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 238 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 223 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned __int64 __shfl_xor(unsigned __int64 var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 225 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 234 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 227 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl(double var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 234 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 251 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 236 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl_up(double var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 243 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 260 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 245 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl_down(double var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 252 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 269 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 254 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline double __shfl_xor(double var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 261 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}















#line 278 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 265 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl(long var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 269 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 278 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 271 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl(unsigned long var, int srcLane, int width) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;
#line 275 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 284 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 277 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl_up(long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 281 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 290 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 283 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 287 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 296 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 289 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl_down(long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 293 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 302 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 295 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width) {int volatile ___ = 1;(void)var;(void)delta;(void)width;
#line 299 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 308 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 301 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline long __shfl_xor(long var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 305 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 314 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 307 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
static __inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;
#line 311 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
::exit(___);}







#line 320 "e:\\cudatoolkit\\include\\sm_30_intrinsics.hpp"
#line 80 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline long __ldg(const long * ptr); 
#line 81 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline unsigned long __ldg(const unsigned long * ptr); 
#line 84 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline char __ldg(const char * ptr); 
#line 85 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline signed char __ldg(const signed char * ptr); 
#line 86 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline short __ldg(const short * ptr); 
#line 87 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline int __ldg(const int * ptr); 
#line 88 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline __int64 __ldg(const __int64 * ptr); 
#line 89 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline char2 __ldg(const char2 * ptr); 
#line 90 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline char4 __ldg(const char4 * ptr); 
#line 91 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline short2 __ldg(const short2 * ptr); 
#line 92 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline short4 __ldg(const short4 * ptr); 
#line 93 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline int2 __ldg(const int2 * ptr); 
#line 94 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline int4 __ldg(const int4 * ptr); 
#line 95 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline longlong2 __ldg(const longlong2 * ptr); 
#line 97 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline unsigned char __ldg(const unsigned char * ptr); 
#line 98 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline unsigned short __ldg(const unsigned short * ptr); 
#line 99 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline unsigned __ldg(const unsigned * ptr); 
#line 100 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline unsigned __int64 __ldg(const unsigned __int64 * ptr); 
#line 101 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline uchar2 __ldg(const uchar2 * ptr); 
#line 102 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline uchar4 __ldg(const uchar4 * ptr); 
#line 103 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline ushort2 __ldg(const ushort2 * ptr); 
#line 104 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline ushort4 __ldg(const ushort4 * ptr); 
#line 105 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline uint2 __ldg(const uint2 * ptr); 
#line 106 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline uint4 __ldg(const uint4 * ptr); 
#line 107 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline ulonglong2 __ldg(const ulonglong2 * ptr); 
#line 109 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline float __ldg(const float * ptr); 
#line 110 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline double __ldg(const double * ptr); 
#line 111 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline float2 __ldg(const float2 * ptr); 
#line 112 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline float4 __ldg(const float4 * ptr); 
#line 113 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline double2 __ldg(const double2 * ptr); 
#line 120 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift); 
#line 121 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift); 
#line 124 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift); 
#line 125 "e:\\cudatoolkit\\include\\sm_32_intrinsics.h"
static __inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift); 
#line 102 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline long __ldg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 109 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 103 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline unsigned long __ldg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 110 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 107 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 114 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 108 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline signed char __ldg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 115 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 109 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 116 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 110 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 117 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 111 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline __int64 __ldg(const __int64 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 118 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 112 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 119 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 113 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 120 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 114 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 121 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 115 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 122 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 116 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 123 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 117 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 124 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 118 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 125 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 120 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 127 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 121 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 128 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 122 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 129 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 123 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __int64 __ldg(const unsigned __int64 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 130 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 124 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 131 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 125 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 132 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 126 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 133 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 127 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 134 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 128 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 135 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 129 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 136 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 130 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 137 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 132 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 139 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 133 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 140 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 134 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 141 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 135 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 142 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 136 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}





#line 143 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 145 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift) 
#line 146 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 150 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 162 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 151 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift) 
#line 152 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 156 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 168 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 159 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift) 
#line 160 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 164 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 176 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 165 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
static __inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift) 
#line 166 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
{int volatile ___ = 1;(void)lo;(void)hi;(void)shift;
#line 170 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
::exit(___);}










#line 182 "e:\\cudatoolkit\\include\\sm_32_intrinsics.hpp"
#line 112 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 113 "e:\\cudatoolkit\\include\\surface_functions.h"
surf1Dread(T *res, ::surface< void, 1>  surf, int x, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 114 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
#line 121 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 130 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 123 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 124 "e:\\cudatoolkit\\include\\surface_functions.h"
surf1Dread(::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 125 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 131 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}











#line 144 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 133 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 134 "e:\\cudatoolkit\\include\\surface_functions.h"
surf1Dread(T *res, ::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 135 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
#line 137 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 146 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 140 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 141 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 143 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 152 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 146 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline signed char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 147 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 149 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 158 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 152 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned char surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 153 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 155 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 164 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 158 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 159 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 161 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 170 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 164 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 165 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 167 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 176 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 170 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 171 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 175 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 186 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 178 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 179 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 181 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 190 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 184 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 185 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 189 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 200 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 192 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 193 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 195 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 204 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 198 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 199 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 201 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 210 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 204 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned short surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 205 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 207 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 216 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 210 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 211 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 213 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 222 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 216 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 217 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 219 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 228 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 222 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 223 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 227 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 238 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 230 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 231 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 233 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 242 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 236 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 237 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 241 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 252 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 244 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 245 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 247 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 256 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 250 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 251 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 253 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 262 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 256 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 257 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 259 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 268 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 262 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 263 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 265 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 274 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 268 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 269 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 271 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 280 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 274 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 275 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 279 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 290 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 282 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 283 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 285 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 294 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 288 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 289 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 293 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 304 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 296 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 297 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 299 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 308 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 302 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline __int64 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 303 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 305 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 314 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 308 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 309 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 311 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 320 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 314 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 315 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 317 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 326 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 320 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 321 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 323 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 332 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 326 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 327 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 331 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 342 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 334 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 335 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 337 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 346 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 342 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 343 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 345 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 354 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 348 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned long surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 349 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 351 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 360 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 354 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 355 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 357 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 366 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 360 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 361 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 363 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 372 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 366 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 367 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 371 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 382 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 374 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 375 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 379 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 390 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 382 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 383 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 387 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 398 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 390 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 391 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 395 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 406 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 400 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 401 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 403 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 412 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 406 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float1 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 407 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 409 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 418 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 412 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float2 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 413 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 417 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 428 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 420 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float4 surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 421 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
#line 425 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 436 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 460 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 461 "e:\\cudatoolkit\\include\\surface_functions.h"
surf2Dread(T *res, ::surface< void, 2>  surf, int x, int y, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 462 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
#line 469 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 478 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 471 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 472 "e:\\cudatoolkit\\include\\surface_functions.h"
surf2Dread(::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 473 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 479 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}











#line 492 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 481 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 482 "e:\\cudatoolkit\\include\\surface_functions.h"
surf2Dread(T *res, ::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 483 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
#line 485 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 494 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 488 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 489 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 491 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 500 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 494 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline signed char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 495 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 497 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 506 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 500 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned char surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 501 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 503 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 512 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 506 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 507 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 509 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 518 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 512 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 513 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 515 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 524 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 518 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 519 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 523 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 534 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 526 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 527 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 529 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 538 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 532 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 533 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 537 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 548 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 540 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 541 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 543 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 552 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 546 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 547 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 549 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 558 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 552 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned short surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 553 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 555 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 564 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 558 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 559 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 561 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 570 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 564 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 565 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 567 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 576 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 570 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 571 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 575 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 586 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 578 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 579 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 581 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 590 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 584 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 585 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 589 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 600 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 592 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 593 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 595 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 604 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 598 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 599 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 601 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 610 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 604 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 605 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 607 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 616 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 610 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 611 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 613 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 622 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 616 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 617 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 619 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 628 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 622 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 623 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 627 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 638 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 630 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 631 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 633 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 642 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 636 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 637 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 641 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 652 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 644 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 645 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 647 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 656 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 650 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline __int64 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 651 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 653 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 662 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 656 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 657 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 659 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 668 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 662 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 663 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 665 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 674 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 668 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 669 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 671 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 680 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 674 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 675 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 679 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 690 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 682 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 683 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 685 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 694 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 690 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 691 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 693 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 702 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 696 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned long surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 697 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 699 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 708 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 702 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 703 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 705 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 714 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 708 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 709 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 711 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 720 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 714 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 715 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 719 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 730 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 722 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 723 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 727 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 738 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 730 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 731 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 735 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 746 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 738 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 739 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 743 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 754 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 748 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 749 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 751 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 760 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 754 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float1 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 755 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 757 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 766 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 760 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float2 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 761 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 765 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 776 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 768 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float4 surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 769 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
#line 773 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 784 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 808 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 809 "e:\\cudatoolkit\\include\\surface_functions.h"
surf3Dread(T *res, ::surface< void, 3>  surf, int x, int y, int z, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 810 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
#line 817 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 826 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 819 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 820 "e:\\cudatoolkit\\include\\surface_functions.h"
surf3Dread(::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 821 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 827 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}











#line 840 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 829 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 830 "e:\\cudatoolkit\\include\\surface_functions.h"
surf3Dread(T *res, ::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 831 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 833 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 842 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 836 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 837 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 839 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 848 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 842 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline signed char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 843 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 845 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 854 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 848 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned char surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 849 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 851 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 860 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 854 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 855 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 857 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 866 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 860 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 861 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 863 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 872 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 866 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 867 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 871 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 882 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 874 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 875 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 877 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 886 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 880 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 881 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 885 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 896 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 888 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 889 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 891 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 900 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 894 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 895 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 897 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 906 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 900 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned short surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 901 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 903 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 912 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 906 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 907 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 909 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 918 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 912 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 913 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 915 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 924 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 918 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 919 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 923 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 934 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 926 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 927 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 929 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 938 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 932 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 933 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 937 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 948 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 940 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 941 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 943 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 952 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 946 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 947 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 949 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 958 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 952 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 953 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 955 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 964 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 958 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 959 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 961 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 970 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 964 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 965 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 967 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 976 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 970 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 971 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 975 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 986 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 978 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 979 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 981 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 990 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 984 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 985 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 989 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1000 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 992 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 993 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 995 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1004 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 998 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline __int64 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 999 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1001 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1010 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1004 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1005 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1007 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1016 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1010 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1011 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1013 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1022 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1016 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1017 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1019 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1028 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1022 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1023 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1027 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1038 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1030 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1031 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1033 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1042 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1038 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1039 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1041 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1050 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1044 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned long surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1045 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1047 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1056 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1050 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1051 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1053 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1062 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1056 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1057 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1059 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1068 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1062 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1063 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1067 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1078 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1070 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1071 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1075 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1086 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1078 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1079 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1083 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1094 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1086 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1087 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1091 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1102 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1096 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1097 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1099 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1108 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1102 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float1 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1103 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1105 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1114 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1108 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float2 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1109 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1113 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1124 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1116 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float4 surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 1117 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 1121 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1132 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1156 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1157 "e:\\cudatoolkit\\include\\surface_functions.h"
surf1DLayeredread(T *res, ::surface< void, 241>  surf, int x, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1158 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
#line 1165 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1174 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1167 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1168 "e:\\cudatoolkit\\include\\surface_functions.h"
surf1DLayeredread(::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1169 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1175 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}











#line 1188 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1177 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1178 "e:\\cudatoolkit\\include\\surface_functions.h"
surf1DLayeredread(T *res, ::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1179 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
#line 1181 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1190 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1184 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1185 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1187 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1196 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1190 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline signed char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1191 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1193 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1202 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1196 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned char surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1197 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1199 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1208 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1202 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1203 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1205 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1214 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1208 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1209 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1211 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1220 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1214 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1215 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1219 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1230 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1222 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1223 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1225 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1234 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1228 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1229 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1233 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1244 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1236 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1237 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1239 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1248 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1242 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1243 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1245 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1254 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1248 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned short surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1249 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1251 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1260 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1254 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1255 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1257 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1266 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1260 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1261 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1263 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1272 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1266 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1267 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1271 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1282 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1274 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1275 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1277 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1286 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1280 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1281 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1285 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1296 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1288 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1289 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1291 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1300 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1294 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1295 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1297 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1306 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1300 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1301 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1303 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1312 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1306 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1307 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1309 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1318 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1312 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1313 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1315 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1324 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1318 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1319 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1323 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1334 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1326 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1327 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1329 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1338 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1332 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1333 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1337 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1348 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1340 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1341 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1343 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1352 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1346 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline __int64 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1347 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1349 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1358 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1352 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1353 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1355 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1364 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1358 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1359 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1361 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1370 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1364 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1365 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1367 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1376 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1370 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1371 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1375 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1386 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1378 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1379 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1381 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1390 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1386 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1387 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1389 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1398 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1392 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned long surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1393 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1395 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1404 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1398 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1399 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1401 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1410 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1404 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1405 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1407 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1416 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1410 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1411 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1415 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1426 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1418 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1419 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1423 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1434 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1426 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1427 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1431 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1442 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1434 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1435 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1439 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1450 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1444 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1445 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1447 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1456 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1450 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float1 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1451 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1453 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1462 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1456 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float2 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1457 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1461 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1472 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1464 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float4 surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1465 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
#line 1469 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1480 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1515 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1516 "e:\\cudatoolkit\\include\\surface_functions.h"
surf2DLayeredread(T *res, ::surface< void, 242>  surf, int x, int y, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1517 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
#line 1524 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1533 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1526 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1527 "e:\\cudatoolkit\\include\\surface_functions.h"
surf2DLayeredread(::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1528 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1534 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}











#line 1547 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1536 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1537 "e:\\cudatoolkit\\include\\surface_functions.h"
surf2DLayeredread(T *res, ::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1538 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1540 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1549 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1543 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1544 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1546 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1555 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1549 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline signed char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1550 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1552 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1561 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1555 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned char surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1556 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1558 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1567 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1561 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1562 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1564 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1573 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1567 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1568 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1570 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1579 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1573 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1574 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1578 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1589 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1581 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1582 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1584 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1593 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1587 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1588 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1592 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1603 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1595 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1596 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1598 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1607 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1601 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1602 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1604 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1613 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1607 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned short surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1608 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1610 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1619 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1613 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1614 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1616 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1625 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1619 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1620 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1622 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1631 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1625 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1626 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1630 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1641 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1633 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1634 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1636 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1645 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1639 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1640 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1644 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1655 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1647 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1648 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1650 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1659 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1653 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1654 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1656 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1665 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1659 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1660 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1662 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1671 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1665 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1666 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1668 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1677 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1671 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1672 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1674 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1683 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1677 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1678 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1682 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1693 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1685 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1686 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1688 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1697 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1691 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1692 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1696 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1707 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1699 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1700 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1702 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1711 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1705 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline __int64 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1706 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1708 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1717 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1711 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1712 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1714 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1723 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1717 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1718 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1720 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1729 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1723 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1724 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1726 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1735 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1729 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1730 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1734 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1745 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1737 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1738 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1740 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1749 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1745 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1746 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1748 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1757 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1751 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned long surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1752 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1754 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1763 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1757 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1758 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1760 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1769 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1763 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1764 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1766 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1775 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1769 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1770 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1774 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1785 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1777 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1778 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1782 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1793 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1785 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1786 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1790 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1801 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1793 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1794 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1798 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1809 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1803 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1804 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1806 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1815 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1809 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float1 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1810 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1812 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1821 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1815 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float2 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1816 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1820 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1831 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1823 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float4 surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1824 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1828 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1839 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1851 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1852 "e:\\cudatoolkit\\include\\surface_functions.h"
surfCubemapread(T *res, ::surface< void, 12>  surf, int x, int y, int face, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1853 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
#line 1860 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1869 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1862 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 1863 "e:\\cudatoolkit\\include\\surface_functions.h"
surfCubemapread(::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1864 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1870 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}











#line 1883 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1872 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 1873 "e:\\cudatoolkit\\include\\surface_functions.h"
surfCubemapread(T *res, ::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 1874 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1876 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1885 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1879 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1880 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1882 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1891 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1885 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline signed char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1886 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1888 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1897 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1891 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned char surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1892 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1894 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1903 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1897 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1898 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1900 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1909 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1903 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1904 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1906 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1915 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1909 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1910 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1914 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1925 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1917 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1918 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1920 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1929 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1923 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1924 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1928 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1939 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1931 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1932 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1934 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1943 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1937 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1938 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1940 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1949 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1943 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned short surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1944 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1946 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1955 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1949 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1950 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1952 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1961 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1955 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1956 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1958 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1967 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1961 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1962 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1966 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1977 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1969 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1970 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1972 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1981 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1975 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1976 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1980 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 1991 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1983 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1984 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1986 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 1995 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1989 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1990 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1992 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2001 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 1995 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1996 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1998 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2007 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2001 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2002 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2004 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2013 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2007 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2008 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2010 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2019 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2013 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2014 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2018 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2029 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2021 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2022 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2024 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2033 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2027 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2028 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2032 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2043 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2035 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2036 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2038 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2047 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2041 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline __int64 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2042 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2044 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2053 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2047 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2048 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2050 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2059 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2053 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2054 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2056 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2065 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2059 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2060 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2062 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2071 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2065 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2066 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2070 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2081 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2073 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2074 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2076 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2085 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2081 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2082 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2084 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2093 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2087 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned long surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2088 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2090 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2099 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2093 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2094 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2096 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2105 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2099 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2100 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2102 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2111 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2105 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2106 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2110 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2121 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2113 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2114 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2118 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2129 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2121 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2122 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2126 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2137 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2129 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2130 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2134 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2145 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2139 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2140 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2142 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2151 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2145 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float1 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2146 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2148 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2157 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2151 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float2 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2152 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2156 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2167 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2159 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float4 surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 2160 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 2164 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2175 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2188 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2189 "e:\\cudatoolkit\\include\\surface_functions.h"
surfCubemapLayeredread(T *res, ::surface< void, 252>  surf, int x, int y, int layerFace, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2190 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
#line 2197 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2206 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2199 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline T 
#line 2200 "e:\\cudatoolkit\\include\\surface_functions.h"
surfCubemapLayeredread(::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2201 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2207 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}











#line 2220 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2209 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2210 "e:\\cudatoolkit\\include\\surface_functions.h"
surfCubemapLayeredread(T *res, ::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2211 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2213 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2222 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2216 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2217 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2219 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2228 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2222 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline signed char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2223 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2225 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2234 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2228 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned char surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2229 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2231 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2240 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2234 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2235 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2237 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2246 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2240 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2241 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2243 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2252 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2246 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2247 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2251 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2262 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2254 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2255 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2257 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2266 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2260 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline char4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2261 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2265 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2276 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2268 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uchar4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2269 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2271 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2280 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2274 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2275 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2277 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2286 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2280 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned short surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2281 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2283 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2292 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2286 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2287 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2289 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2298 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2292 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2293 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2295 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2304 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2298 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2299 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2303 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2314 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2306 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2307 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2309 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2318 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2312 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline short4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2313 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2317 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2328 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2320 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ushort4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2321 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2323 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2332 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2326 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2327 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2329 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2338 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2332 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2333 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2335 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2344 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2338 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2339 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2341 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2350 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2344 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2345 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2347 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2356 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2350 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2351 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2355 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2366 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2358 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2359 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2361 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2370 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2364 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline int4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2365 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2369 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2380 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2372 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline uint4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2373 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2375 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2384 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2378 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline __int64 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2379 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2381 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2390 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2384 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned __int64 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2385 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2387 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2396 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2390 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2391 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2393 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2402 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2396 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2397 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2399 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2408 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2402 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline longlong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2403 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2407 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2418 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2410 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulonglong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2411 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2413 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2422 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2418 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2419 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2421 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2430 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2424 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline unsigned long surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2425 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2427 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2436 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2430 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2431 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2433 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2442 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2436 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2437 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2439 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2448 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2442 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2443 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2447 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2458 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2450 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2451 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2455 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2466 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2458 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline long4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2459 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2463 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2474 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2466 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline ulong4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2467 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2471 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2482 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2476 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2477 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2479 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2488 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2482 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float1 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2483 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2485 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2494 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2488 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float2 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2489 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2493 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2504 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2496 "e:\\cudatoolkit\\include\\surface_functions.h"
template<> __forceinline float4 surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 2497 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 2501 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}









#line 2512 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2537 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2538 "e:\\cudatoolkit\\include\\surface_functions.h"
surf1Dwrite(T val, ::surface< void, 1>  surf, int x, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2539 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
#line 2557 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}

























#line 2584 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2559 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2560 "e:\\cudatoolkit\\include\\surface_functions.h"
surf1Dwrite(T val, ::surface< void, 1>  surf, int x, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2561 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 2563 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2572 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2566 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2568 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(signed char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2570 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2572 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2574 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2576 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2578 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2580 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(char4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2582 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uchar4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2584 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2586 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2588 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2590 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2592 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2594 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2596 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(short4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2598 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ushort4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2600 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2602 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2604 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2606 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2608 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2610 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2612 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(int4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2614 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(uint4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2616 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(__int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2618 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned __int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2620 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(longlong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2622 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulonglong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2624 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(longlong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2626 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulonglong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2630 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2632 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(unsigned long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2634 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2636 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2638 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2640 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2642 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(long4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2644 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(ulong4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2648 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2650 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2652 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2654 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1Dwrite(float4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2690 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2691 "e:\\cudatoolkit\\include\\surface_functions.h"
surf2Dwrite(T val, ::surface< void, 2>  surf, int x, int y, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2692 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
#line 2710 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}

























#line 2737 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2712 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2713 "e:\\cudatoolkit\\include\\surface_functions.h"
surf2Dwrite(T val, ::surface< void, 2>  surf, int x, int y, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2714 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 2716 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2725 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2719 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2721 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(signed char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2723 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2725 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2727 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2729 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2731 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2733 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(char4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2735 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uchar4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2737 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2739 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2741 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2743 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2745 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2747 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2749 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(short4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2751 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ushort4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2753 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2755 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2757 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2759 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2761 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2763 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2765 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(int4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2767 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(uint4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2769 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(__int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2771 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned __int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2773 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(longlong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2775 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulonglong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2777 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(longlong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2779 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulonglong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2783 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2785 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(unsigned long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2787 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2789 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2791 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2793 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2795 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(long4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2797 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(ulong4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2801 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2803 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2805 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2807 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2Dwrite(float4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2843 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2844 "e:\\cudatoolkit\\include\\surface_functions.h"
surf3Dwrite(T val, ::surface< void, 3>  surf, int x, int y, int z, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2845 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
#line 2863 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}

























#line 2890 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2865 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2866 "e:\\cudatoolkit\\include\\surface_functions.h"
surf3Dwrite(T val, ::surface< void, 3>  surf, int x, int y, int z, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2867 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 2869 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 2878 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 2872 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2874 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(signed char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2876 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2878 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2880 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2882 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2884 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2886 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(char4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2888 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uchar4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2890 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2892 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2894 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2896 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2898 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2900 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2902 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(short4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2904 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ushort4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2906 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2908 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2910 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2912 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2914 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2916 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2918 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(int4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2920 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(uint4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2922 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(__int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2924 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned __int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2926 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(longlong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2928 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulonglong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2930 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(longlong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2932 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulonglong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2936 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2938 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(unsigned long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2940 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2942 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2944 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2946 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2948 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(long4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2950 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(ulong4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2954 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2956 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2958 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2960 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf3Dwrite(float4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 2996 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 2997 "e:\\cudatoolkit\\include\\surface_functions.h"
surf1DLayeredwrite(T val, ::surface< void, 241>  surf, int x, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 2998 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
#line 3016 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}

























#line 3043 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 3018 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3019 "e:\\cudatoolkit\\include\\surface_functions.h"
surf1DLayeredwrite(T val, ::surface< void, 241>  surf, int x, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3020 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 3022 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 3031 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 3025 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3027 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(signed char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3029 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3031 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3033 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3035 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3037 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3039 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(char4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3041 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uchar4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3043 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3045 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3047 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3049 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3051 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3053 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3055 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(short4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3057 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ushort4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3059 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3061 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3063 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3065 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3067 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3069 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3071 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(int4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3073 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(uint4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3075 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(__int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3077 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned __int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3079 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(longlong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3081 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3083 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(longlong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3085 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3089 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3091 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3093 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3095 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3097 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3099 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3101 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(long4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3103 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(ulong4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3107 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3109 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3111 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3113 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf1DLayeredwrite(float4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3160 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3161 "e:\\cudatoolkit\\include\\surface_functions.h"
surf2DLayeredwrite(T val, ::surface< void, 242>  surf, int x, int y, int layer, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3162 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
#line 3180 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}

























#line 3207 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 3182 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3183 "e:\\cudatoolkit\\include\\surface_functions.h"
surf2DLayeredwrite(T val, ::surface< void, 242>  surf, int x, int y, int layer, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3184 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 3186 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 3195 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 3189 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3191 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(signed char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3193 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3195 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3197 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3199 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3201 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3203 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(char4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3205 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uchar4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3207 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3209 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3211 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3213 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3215 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3217 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3219 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(short4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3221 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ushort4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3223 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3225 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3227 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3229 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3231 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3233 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3235 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(int4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3237 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(uint4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3239 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(__int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3241 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned __int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3243 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(longlong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3245 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3247 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(longlong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3249 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3253 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3255 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3257 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3259 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3261 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3263 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3265 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(long4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3267 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(ulong4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3271 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3273 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3275 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3277 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surf2DLayeredwrite(float4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3302 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3303 "e:\\cudatoolkit\\include\\surface_functions.h"
surfCubemapwrite(T val, ::surface< void, 12>  surf, int x, int y, int face, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3304 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
#line 3322 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}

























#line 3349 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 3324 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3325 "e:\\cudatoolkit\\include\\surface_functions.h"
surfCubemapwrite(T val, ::surface< void, 12>  surf, int x, int y, int face, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3326 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 3328 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 3337 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 3331 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3333 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(signed char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3335 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3337 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3339 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3341 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3343 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3345 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(char4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3347 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uchar4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3349 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3351 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3353 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3355 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3357 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3359 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3361 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(short4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3363 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ushort4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3365 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3367 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3369 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3371 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3373 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3375 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3377 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(int4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3379 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(uint4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3381 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(__int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3383 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned __int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3385 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(longlong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3387 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulonglong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3389 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(longlong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3391 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulonglong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3395 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3397 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(unsigned long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3399 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3401 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3403 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3405 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3407 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(long4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3409 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(ulong4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3413 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3415 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3417 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3419 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapwrite(float4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3444 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3445 "e:\\cudatoolkit\\include\\surface_functions.h"
surfCubemapLayeredwrite(T val, ::surface< void, 252>  surf, int x, int y, int layerFace, int s, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3446 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
#line 3464 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}

























#line 3491 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 3466 "e:\\cudatoolkit\\include\\surface_functions.h"
template< class T> static __forceinline void 
#line 3467 "e:\\cudatoolkit\\include\\surface_functions.h"
surfCubemapLayeredwrite(T val, ::surface< void, 252>  surf, int x, int y, int layerFace, ::cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) 
#line 3468 "e:\\cudatoolkit\\include\\surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 3470 "e:\\cudatoolkit\\include\\surface_functions.h"
::exit(___);}







#line 3479 "e:\\cudatoolkit\\include\\surface_functions.h"
#line 3473 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3475 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(signed char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3477 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3479 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3481 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3483 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3485 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3487 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(char4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3489 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3491 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3493 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3495 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3497 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3499 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3501 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3503 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(short4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3505 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3507 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3509 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3511 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3513 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3515 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3517 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3519 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(int4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3521 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3523 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(__int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3525 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3527 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3529 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3531 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3533 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3537 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3539 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3541 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3543 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3545 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3547 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3549 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(long4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3551 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulong4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3555 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3557 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3559 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 3561 "e:\\cudatoolkit\\include\\surface_functions.h"
static __forceinline void surfCubemapLayeredwrite(float4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap); 
#line 94 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 95 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 97 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 106 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 99 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(signed char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 100 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 102 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 111 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 104 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned char val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 105 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 107 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 116 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 109 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 110 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 112 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 121 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 114 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uchar1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 115 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 117 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 126 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 119 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 120 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 122 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 131 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 124 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uchar2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 125 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 127 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 136 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 129 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(char4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 130 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 132 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 141 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 134 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uchar4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 135 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 137 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 146 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 139 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 140 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 142 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 151 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 144 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned short val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 145 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 147 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 156 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 149 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 150 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 152 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 161 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 154 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ushort1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 155 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 157 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 166 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 159 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 160 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 162 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 171 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 164 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ushort2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 165 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 167 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 176 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 169 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(short4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 170 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 172 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 181 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 174 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ushort4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 175 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 177 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 186 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 179 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 180 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 182 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 191 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 184 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 185 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 187 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 196 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 189 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 190 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 192 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 201 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 194 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uint1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 195 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 197 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 206 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 199 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 200 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 202 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 211 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 204 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uint2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 205 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 207 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 216 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 209 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(int4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 210 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 212 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 221 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 214 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(uint4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 215 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 217 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 226 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 219 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(__int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 220 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 222 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 231 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 224 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned __int64 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 225 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 227 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 236 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 229 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(longlong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 230 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 232 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 241 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 234 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 235 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 237 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 246 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 239 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(longlong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 240 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 242 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 251 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 244 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 245 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 247 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 256 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 251 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 252 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 254 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 263 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 256 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(unsigned long val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 257 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 259 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 268 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 261 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 262 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 264 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 273 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 266 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulong1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 267 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 269 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 278 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 271 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 272 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 274 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 283 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 276 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulong2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 277 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 279 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 288 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 281 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(long4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 282 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 284 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 293 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 286 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(ulong4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 287 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 289 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 298 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 293 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 294 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 296 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 305 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 298 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float1 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 299 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 301 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 310 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 303 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float2 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 304 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 306 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 315 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 308 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1Dwrite(float4 val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode) 
#line 309 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
#line 311 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 320 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 336 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 337 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 339 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 348 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 341 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(signed char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 342 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 344 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 353 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 346 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned char val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 347 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 349 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 358 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 351 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 352 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 354 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 363 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 356 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uchar1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 357 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 359 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 368 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 361 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 362 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 364 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 373 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 366 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uchar2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 367 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 369 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 378 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 371 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(char4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 372 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 374 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 383 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 376 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uchar4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 377 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 379 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 388 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 381 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 382 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 384 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 393 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 386 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned short val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 387 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 389 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 398 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 391 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 392 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 394 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 403 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 396 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ushort1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 397 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 399 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 408 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 401 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 402 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 404 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 413 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 406 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ushort2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 407 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 409 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 418 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 411 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(short4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 412 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 414 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 423 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 416 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ushort4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 417 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 419 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 428 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 421 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 422 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 424 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 433 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 426 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 427 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 429 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 438 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 431 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 432 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 434 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 443 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 436 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uint1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 437 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 439 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 448 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 441 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 442 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 444 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 453 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 446 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uint2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 447 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 449 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 458 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 451 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(int4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 452 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 454 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 463 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 456 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(uint4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 457 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 459 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 468 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 461 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(__int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 462 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 464 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 473 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 466 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned __int64 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 467 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 469 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 478 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 471 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(longlong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 472 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 474 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 483 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 476 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 477 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 479 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 488 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 481 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(longlong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 482 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 484 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 493 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 486 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 487 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 489 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 498 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 493 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 494 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 496 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 505 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 498 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(unsigned long val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 499 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 501 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 510 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 503 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 504 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 506 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 515 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 508 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulong1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 509 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 511 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 520 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 513 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 514 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 516 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 525 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 518 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulong2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 519 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 521 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 530 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 523 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(long4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 524 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 526 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 535 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 528 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(ulong4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 529 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 531 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 540 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 535 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 536 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 538 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 547 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 540 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float1 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 541 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 543 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 552 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 545 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float2 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 546 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 548 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 557 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 550 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2Dwrite(float4 val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode) 
#line 551 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
#line 553 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 562 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 578 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 579 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 581 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 590 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 583 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(signed char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 584 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 586 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 595 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 588 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned char val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 589 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 591 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 600 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 593 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 594 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 596 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 605 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 598 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uchar1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 599 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 601 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 610 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 603 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 604 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 606 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 615 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 608 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uchar2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 609 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 611 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 620 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 613 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(char4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 614 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 616 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 625 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 618 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uchar4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 619 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 621 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 630 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 623 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 624 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 626 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 635 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 628 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned short val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 629 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 631 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 640 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 633 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 634 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 636 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 645 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 638 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ushort1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 639 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 641 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 650 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 643 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 644 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 646 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 655 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 648 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ushort2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 649 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 651 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 660 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 653 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(short4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 654 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 656 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 665 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 658 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ushort4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 659 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 661 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 670 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 663 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 664 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 666 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 675 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 668 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 669 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 671 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 680 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 673 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 674 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 676 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 685 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 678 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uint1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 679 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 681 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 690 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 683 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 684 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 686 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 695 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 688 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uint2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 689 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 691 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 700 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 693 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(int4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 694 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 696 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 705 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 698 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(uint4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 699 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 701 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 710 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 703 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(__int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 704 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 706 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 715 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 708 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned __int64 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 709 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 711 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 720 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 713 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(longlong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 714 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 716 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 725 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 718 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 719 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 721 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 730 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 723 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(longlong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 724 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 726 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 735 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 728 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 729 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 731 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 740 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 735 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 736 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 738 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 747 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 740 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(unsigned long val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 741 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 743 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 752 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 745 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 746 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 748 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 757 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 750 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulong1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 751 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 753 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 762 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 755 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 756 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 758 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 767 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 760 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulong2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 761 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 763 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 772 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 765 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(long4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 766 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 768 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 777 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 770 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(ulong4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 771 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 773 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 782 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 777 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 778 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 780 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 789 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 782 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float1 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 783 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 785 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 794 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 787 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float2 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 788 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 790 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 799 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 792 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf3Dwrite(float4 val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode) 
#line 793 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
#line 795 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 804 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 820 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 821 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 823 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 832 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 825 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(signed char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 826 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 828 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 837 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 830 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned char val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 831 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 833 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 842 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 835 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 836 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 838 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 847 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 840 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 841 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 843 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 852 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 845 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 846 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 848 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 857 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 850 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 851 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 853 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 862 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 855 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(char4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 856 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 858 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 867 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 860 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 861 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 863 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 872 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 865 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 866 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 868 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 877 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 870 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned short val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 871 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 873 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 882 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 875 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 876 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 878 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 887 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 880 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 881 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 883 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 892 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 885 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 886 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 888 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 897 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 890 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 891 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 893 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 902 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 895 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(short4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 896 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 898 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 907 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 900 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 901 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 903 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 912 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 905 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 906 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 908 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 917 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 910 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 911 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 913 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 922 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 915 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 916 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 918 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 927 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 920 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 921 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 923 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 932 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 925 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 926 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 928 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 937 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 930 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 931 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 933 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 942 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 935 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(int4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 936 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 938 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 947 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 940 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 941 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 943 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 952 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 945 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(__int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 946 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 948 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 957 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 950 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned __int64 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 951 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 953 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 962 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 955 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 956 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 958 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 967 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 960 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 961 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 963 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 972 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 965 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 966 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 968 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 977 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 970 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 971 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 973 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 982 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 977 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 978 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 980 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 989 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 982 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned long val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 983 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 985 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 994 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 987 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 988 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 990 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 999 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 992 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulong1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 993 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 995 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1004 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 997 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 998 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1000 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1009 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1002 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulong2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1003 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1005 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1014 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1007 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(long4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1008 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1010 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1019 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1012 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulong4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1013 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1015 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1024 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1019 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1020 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1022 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1031 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1024 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float1 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1025 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1027 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1036 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1029 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float2 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1030 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1032 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1041 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1034 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf1DLayeredwrite(float4 val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode) 
#line 1035 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
#line 1037 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1046 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1062 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1063 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1065 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1074 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1067 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(signed char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1068 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1070 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1079 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1072 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned char val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1073 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1075 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1084 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1077 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1078 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1080 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1089 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1082 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1083 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1085 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1094 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1087 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1088 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1090 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1099 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1092 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1093 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1095 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1104 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1097 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(char4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1098 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1100 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1109 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1102 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1103 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1105 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1114 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1107 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1108 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1110 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1119 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1112 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned short val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1113 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1115 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1124 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1117 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1118 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1120 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1129 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1122 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1123 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1125 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1134 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1127 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1128 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1130 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1139 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1132 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1133 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1135 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1144 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1137 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(short4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1138 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1140 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1149 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1142 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1143 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1145 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1154 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1147 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1148 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1150 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1159 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1152 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1153 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1155 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1164 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1157 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1158 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1160 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1169 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1162 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1163 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1165 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1174 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1167 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1168 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1170 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1179 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1172 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1173 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1175 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1184 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1177 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(int4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1178 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1180 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1189 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1182 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1183 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1185 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1194 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1187 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(__int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1188 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1190 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1199 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1192 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned __int64 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1193 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1195 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1204 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1197 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1198 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1200 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1209 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1202 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1203 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1205 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1214 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1207 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1208 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1210 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1219 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1212 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1213 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1215 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1224 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1219 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1220 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1222 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1231 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1224 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned long val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1225 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1227 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1236 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1229 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1230 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1232 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1241 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1234 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulong1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1235 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1237 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1246 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1239 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1240 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1242 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1251 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1244 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulong2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1245 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1247 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1256 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1249 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(long4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1250 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1252 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1261 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1254 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulong4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1255 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1257 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1266 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1261 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1262 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1264 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1273 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1266 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float1 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1267 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1269 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1278 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1271 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float2 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1272 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1274 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1283 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1276 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surf2DLayeredwrite(float4 val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode) 
#line 1277 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
#line 1279 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1288 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1305 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1306 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1308 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1317 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1310 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(signed char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1311 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1313 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1322 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1315 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned char val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1316 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1318 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1327 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1320 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1321 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1323 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1332 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1325 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uchar1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1326 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1328 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1337 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1330 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1331 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1333 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1342 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1335 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uchar2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1336 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1338 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1347 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1340 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(char4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1341 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1343 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1352 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1345 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uchar4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1346 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1348 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1357 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1350 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1351 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1353 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1362 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1355 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned short val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1356 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1358 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1367 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1360 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1361 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1363 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1372 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1365 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ushort1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1366 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1368 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1377 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1370 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1371 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1373 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1382 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1375 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ushort2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1376 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1378 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1387 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1380 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(short4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1381 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1383 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1392 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1385 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ushort4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1386 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1388 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1397 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1390 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1391 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1393 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1402 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1395 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1396 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1398 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1407 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1400 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1401 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1403 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1412 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1405 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uint1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1406 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1408 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1417 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1410 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1411 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1413 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1422 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1415 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uint2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1416 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1418 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1427 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1420 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(int4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1421 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1423 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1432 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1425 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(uint4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1426 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1428 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1437 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1430 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(__int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1431 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1433 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1442 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1435 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned __int64 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1436 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1438 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1447 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1440 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(longlong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1441 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1443 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1452 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1445 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1446 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1448 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1457 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1450 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(longlong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1451 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1453 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1462 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1455 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1456 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1458 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1467 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1462 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1463 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1465 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1474 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1467 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned long val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1468 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1470 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1479 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1472 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1473 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1475 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1484 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1477 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulong1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1478 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1480 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1489 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1482 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1483 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1485 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1494 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1487 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulong2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1488 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1490 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1499 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1492 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(long4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1493 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1495 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1504 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1497 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(ulong4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1498 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1500 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1509 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1504 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1505 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1507 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1516 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1509 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float1 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1510 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1512 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1521 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1514 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float2 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1515 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1517 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1526 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1519 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapwrite(float4 val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode) 
#line 1520 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
#line 1522 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1531 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1548 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1549 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1551 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1560 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1553 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(signed char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1554 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1556 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1565 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1558 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned char val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1559 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1561 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1570 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1563 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1564 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1566 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1575 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1568 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1569 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1571 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1580 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1573 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1574 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1576 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1585 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1578 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1579 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1581 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1590 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1583 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1584 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1586 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1595 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1588 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1589 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1591 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1600 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1593 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1594 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1596 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1605 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1598 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned short val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1599 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1601 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1610 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1603 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1604 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1606 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1615 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1608 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1609 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1611 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1620 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1613 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1614 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1616 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1625 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1618 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1619 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1621 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1630 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1623 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1624 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1626 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1635 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1628 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1629 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1631 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1640 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1633 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1634 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1636 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1645 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1638 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1639 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1641 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1650 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1643 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1644 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1646 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1655 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1648 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1649 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1651 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1660 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1653 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1654 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1656 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1665 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1658 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1659 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1661 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1670 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1663 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1664 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1666 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1675 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1668 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1669 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1671 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1680 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1673 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(__int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1674 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1676 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1685 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1678 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1679 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1681 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1690 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1683 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1684 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1686 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1695 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1688 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1689 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1691 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1700 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1693 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1694 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1696 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1705 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1698 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1699 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1701 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1710 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1705 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1706 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1708 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1717 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1710 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned long val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1711 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1713 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1722 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1715 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1716 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1718 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1727 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1720 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulong1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1721 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1723 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1732 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1725 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1726 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1728 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1737 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1730 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulong2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1731 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1733 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1742 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1735 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(long4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1736 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1738 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1747 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1740 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulong4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1741 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1743 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1752 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1747 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1748 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1750 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1759 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1752 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float1 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1753 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1755 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1764 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1757 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float2 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1758 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1760 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1769 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 1762 "e:\\cudatoolkit\\include\\surface_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float4 val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode) 
#line 1763 "e:\\cudatoolkit\\include\\surface_functions.hpp"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
#line 1765 "e:\\cudatoolkit\\include\\surface_functions.hpp"
::exit(___);}







#line 1774 "e:\\cudatoolkit\\include\\surface_functions.hpp"
#line 146 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 148 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utexfetchi(texture< T, 1, readMode>  t, ::int4 i) 
#line 149 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 151 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 160 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 153 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 155 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itexfetchi(texture< T, 1, readMode>  t, ::int4 i) 
#line 156 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 158 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 167 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 160 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 162 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftexfetchi(texture< T, 1, readMode>  t, ::int4 i) 
#line 163 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 165 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 174 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 167 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 169 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utexfetch(texture< T, texType, readMode>  t, ::float4 i, int d = texType) 
#line 170 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)d;
#line 177 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}















#line 194 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 179 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 181 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itexfetch(texture< T, texType, readMode>  t, ::float4 i, int d = texType) 
#line 182 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)d;
#line 189 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}















#line 206 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 191 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 193 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftexfetch(texture< T, texType, readMode>  t, ::float4 i, int d = texType) 
#line 194 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)d;
#line 201 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}















#line 218 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 203 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 205 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utexfetchc(texture< T, texType, readMode>  t, ::float4 i) 
#line 206 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 208 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 217 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 210 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 212 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itexfetchc(texture< T, texType, readMode>  t, ::float4 i) 
#line 213 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 215 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 224 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 217 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 219 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftexfetchc(texture< T, texType, readMode>  t, ::float4 i) 
#line 220 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;
#line 222 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 231 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 224 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 226 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utexfetchl(texture< T, texType, readMode>  t, ::float4 i, int l, int d = texType & 15) 
#line 227 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
#line 233 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}













#line 248 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 235 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 237 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itexfetchl(texture< T, texType, readMode>  t, ::float4 i, int l, int d = texType & 15) 
#line 238 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
#line 244 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}













#line 259 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 246 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 248 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftexfetchl(texture< T, texType, readMode>  t, ::float4 i, int l, int d = texType & 15) 
#line 249 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)d;
#line 255 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}













#line 270 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 257 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 259 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utexfetchlc(texture< T, texType, readMode>  t, ::float4 i, int l) 
#line 260 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;
#line 262 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 271 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 264 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 266 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itexfetchlc(texture< T, texType, readMode>  t, ::float4 i, int l) 
#line 267 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;
#line 269 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 278 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 271 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 273 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftexfetchlc(texture< T, texType, readMode>  t, ::float4 i, int l) 
#line 274 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;
#line 276 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 285 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 285 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex1Dfetch(texture< char, 1, cudaReadModeElementType>  t, int x); 
#line 287 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType>  t, int x); 
#line 289 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType>  t, int x); 
#line 291 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType>  t, int x); 
#line 293 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType>  t, int x); 
#line 295 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType>  t, int x); 
#line 297 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType>  t, int x); 
#line 299 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType>  t, int x); 
#line 301 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType>  t, int x); 
#line 309 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex1Dfetch(texture< short, 1, cudaReadModeElementType>  t, int x); 
#line 311 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType>  t, int x); 
#line 313 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType>  t, int x); 
#line 315 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType>  t, int x); 
#line 317 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType>  t, int x); 
#line 319 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType>  t, int x); 
#line 321 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType>  t, int x); 
#line 323 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType>  t, int x); 
#line 331 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex1Dfetch(texture< int, 1, cudaReadModeElementType>  t, int x); 
#line 333 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType>  t, int x); 
#line 335 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType>  t, int x); 
#line 337 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType>  t, int x); 
#line 339 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType>  t, int x); 
#line 341 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType>  t, int x); 
#line 343 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType>  t, int x); 
#line 345 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType>  t, int x); 
#line 355 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex1Dfetch(texture< long, 1, cudaReadModeElementType>  t, int x); 
#line 357 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1Dfetch(texture< unsigned long, 1, cudaReadModeElementType>  t, int x); 
#line 359 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1Dfetch(texture< long1, 1, cudaReadModeElementType>  t, int x); 
#line 361 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1Dfetch(texture< ulong1, 1, cudaReadModeElementType>  t, int x); 
#line 363 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1Dfetch(texture< long2, 1, cudaReadModeElementType>  t, int x); 
#line 365 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1Dfetch(texture< ulong2, 1, cudaReadModeElementType>  t, int x); 
#line 367 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1Dfetch(texture< long4, 1, cudaReadModeElementType>  t, int x); 
#line 369 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1Dfetch(texture< ulong4, 1, cudaReadModeElementType>  t, int x); 
#line 379 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< float, 1, cudaReadModeElementType>  t, int x); 
#line 381 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType>  t, int x); 
#line 383 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType>  t, int x); 
#line 385 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType>  t, int x); 
#line 393 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 395 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 397 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 399 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 401 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 403 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 405 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 407 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 409 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 417 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 419 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 421 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 423 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 425 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 427 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 429 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 431 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, int x); 
#line 439 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex1D(texture< char, 1, cudaReadModeElementType>  t, float x); 
#line 441 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1D(texture< signed char, 1, cudaReadModeElementType>  t, float x); 
#line 443 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType>  t, float x); 
#line 445 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1D(texture< char1, 1, cudaReadModeElementType>  t, float x); 
#line 447 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType>  t, float x); 
#line 449 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1D(texture< char2, 1, cudaReadModeElementType>  t, float x); 
#line 451 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType>  t, float x); 
#line 453 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1D(texture< char4, 1, cudaReadModeElementType>  t, float x); 
#line 455 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType>  t, float x); 
#line 463 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex1D(texture< short, 1, cudaReadModeElementType>  t, float x); 
#line 465 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType>  t, float x); 
#line 467 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1D(texture< short1, 1, cudaReadModeElementType>  t, float x); 
#line 469 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType>  t, float x); 
#line 471 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1D(texture< short2, 1, cudaReadModeElementType>  t, float x); 
#line 473 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType>  t, float x); 
#line 475 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1D(texture< short4, 1, cudaReadModeElementType>  t, float x); 
#line 477 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType>  t, float x); 
#line 485 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex1D(texture< int, 1, cudaReadModeElementType>  t, float x); 
#line 487 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType>  t, float x); 
#line 489 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1D(texture< int1, 1, cudaReadModeElementType>  t, float x); 
#line 491 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType>  t, float x); 
#line 493 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1D(texture< int2, 1, cudaReadModeElementType>  t, float x); 
#line 495 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType>  t, float x); 
#line 497 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1D(texture< int4, 1, cudaReadModeElementType>  t, float x); 
#line 499 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType>  t, float x); 
#line 515 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex1D(texture< long, 1, cudaReadModeElementType>  t, float x); 
#line 517 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1D(texture< unsigned long, 1, cudaReadModeElementType>  t, float x); 
#line 519 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1D(texture< long1, 1, cudaReadModeElementType>  t, float x); 
#line 521 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1D(texture< ulong1, 1, cudaReadModeElementType>  t, float x); 
#line 523 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1D(texture< long2, 1, cudaReadModeElementType>  t, float x); 
#line 525 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1D(texture< ulong2, 1, cudaReadModeElementType>  t, float x); 
#line 527 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1D(texture< long4, 1, cudaReadModeElementType>  t, float x); 
#line 529 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1D(texture< ulong4, 1, cudaReadModeElementType>  t, float x); 
#line 539 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< float, 1, cudaReadModeElementType>  t, float x); 
#line 541 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< float1, 1, cudaReadModeElementType>  t, float x); 
#line 543 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< float2, 1, cudaReadModeElementType>  t, float x); 
#line 545 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< float4, 1, cudaReadModeElementType>  t, float x); 
#line 553 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 555 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 557 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 559 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 561 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 563 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 565 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 567 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 569 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 577 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 579 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 581 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 583 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 585 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 587 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 589 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 591 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x); 
#line 599 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex2D(texture< char, 2, cudaReadModeElementType>  t, float x, float y); 
#line 601 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2D(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y); 
#line 603 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y); 
#line 605 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2D(texture< char1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 607 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 609 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2D(texture< char2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 611 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 613 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2D(texture< char4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 615 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 623 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex2D(texture< short, 2, cudaReadModeElementType>  t, float x, float y); 
#line 625 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y); 
#line 627 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2D(texture< short1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 629 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 631 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2D(texture< short2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 633 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 635 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2D(texture< short4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 637 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 645 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex2D(texture< int, 2, cudaReadModeElementType>  t, float x, float y); 
#line 647 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y); 
#line 649 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2D(texture< int1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 651 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 653 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2D(texture< int2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 655 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 657 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2D(texture< int4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 659 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 669 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex2D(texture< long, 2, cudaReadModeElementType>  t, float x, float y); 
#line 671 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2D(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y); 
#line 673 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2D(texture< long1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 675 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2D(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 677 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2D(texture< long2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 679 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2D(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 681 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2D(texture< long4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 683 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2D(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 693 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< float, 2, cudaReadModeElementType>  t, float x, float y); 
#line 695 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< float1, 2, cudaReadModeElementType>  t, float x, float y); 
#line 697 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< float2, 2, cudaReadModeElementType>  t, float x, float y); 
#line 699 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< float4, 2, cudaReadModeElementType>  t, float x, float y); 
#line 707 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 709 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 711 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 713 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 715 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 717 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 719 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 721 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 723 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 731 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 733 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 735 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 737 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 739 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 741 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 743 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 745 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y); 
#line 753 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayered(texture< char, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 755 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 757 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 759 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 761 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 763 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 765 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 767 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 769 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 777 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayered(texture< short, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 779 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 781 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 783 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 785 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 787 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 789 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 791 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 799 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayered(texture< int, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 801 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 803 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 805 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 807 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 809 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 811 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 813 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 823 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayered(texture< long, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 825 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayered(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 827 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayered(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 829 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayered(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 831 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayered(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 833 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayered(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 835 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayered(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 837 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayered(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 847 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< float, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 849 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 851 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 853 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer); 
#line 861 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 863 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 865 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 867 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 869 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 871 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 873 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 875 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 877 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 885 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 887 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 889 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 891 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 893 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 895 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 897 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 899 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer); 
#line 907 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayered(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 909 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 911 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 913 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 915 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 917 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 919 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 921 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 923 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 931 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayered(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 933 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 935 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 937 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 939 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 941 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 943 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 945 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 953 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayered(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 955 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 957 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 959 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 961 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 963 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 965 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 967 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 977 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayered(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 979 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayered(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 981 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayered(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 983 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayered(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 985 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayered(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 987 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayered(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 989 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayered(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 991 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayered(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1001 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1003 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1005 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1007 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer); 
#line 1015 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1017 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1019 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1021 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1023 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1025 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1027 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1029 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1031 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1039 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1041 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1043 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1045 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1047 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1049 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1051 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1053 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer); 
#line 1061 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex3D(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1063 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3D(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1065 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1067 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3D(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1069 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1071 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3D(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1073 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1075 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3D(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1077 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1085 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex3D(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1087 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1089 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3D(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1091 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1093 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3D(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1095 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1097 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3D(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1099 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1107 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex3D(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1109 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1111 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3D(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1113 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1115 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3D(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1117 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1119 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3D(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1121 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1131 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex3D(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1133 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3D(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1135 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3D(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1137 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3D(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1139 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3D(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1141 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3D(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1143 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3D(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1145 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3D(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1155 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1157 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1159 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1161 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1169 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1171 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1173 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1175 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1177 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1179 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1181 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1183 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1185 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1193 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1195 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1197 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1199 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1201 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1203 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1205 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1207 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1215 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char texCubemap(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1217 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1219 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1221 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemap(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1223 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1225 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemap(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1227 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1229 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemap(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1231 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1239 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short texCubemap(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1241 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1243 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemap(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1245 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1247 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemap(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1249 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1251 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemap(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1253 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1261 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int texCubemap(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1263 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1265 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemap(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1267 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1269 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemap(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1271 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1273 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemap(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1275 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1285 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long texCubemap(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1287 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemap(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1289 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemap(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1291 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemap(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1293 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemap(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1295 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemap(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1297 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemap(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1299 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemap(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1309 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1311 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1313 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1315 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z); 
#line 1323 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1325 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1327 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1329 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1331 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1333 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1335 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1337 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1339 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1347 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1349 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1351 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1353 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1355 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1357 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1359 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1361 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z); 
#line 1369 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLayered(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1371 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1373 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1375 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1377 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1379 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1381 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1383 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1385 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1393 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLayered(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1395 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1397 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1399 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1401 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1403 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1405 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1407 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1415 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLayered(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1417 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1419 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1421 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1423 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1425 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1427 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1429 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1439 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLayered(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1441 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLayered(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1443 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLayered(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1445 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLayered(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1447 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLayered(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1449 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLayered(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1451 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLayered(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1453 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLayered(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1463 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1465 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1467 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1469 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer); 
#line 1477 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1479 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1481 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1483 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1485 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1487 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1489 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1491 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1493 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1501 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1503 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1505 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1507 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1509 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1511 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1513 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1515 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer); 
#line 1586 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< int comp, class T, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1588 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itex2Dgather(texture< T, 2, readMode>  t, ::float2 i, int 
#line 1589 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
c = comp) 
#line 1590 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)c;
#line 1598 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}

















#line 1617 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1600 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< int comp, class T, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1602 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utex2Dgather(texture< T, 2, readMode>  t, ::float2 i, int 
#line 1603 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
c = comp) 
#line 1604 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)c;
#line 1612 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}

















#line 1631 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1614 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< int comp, class T, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1616 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftex2Dgather(texture< T, 2, readMode>  t, ::float2 i, int 
#line 1617 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
c = comp) 
#line 1618 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)c;
#line 1626 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}

















#line 1645 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1628 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1630 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1632 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1634 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1636 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1638 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1640 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1642 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1644 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1646 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1648 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1650 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1652 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1654 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1656 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1658 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1660 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1662 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1664 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1666 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1668 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1670 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1672 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1674 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1676 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1678 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1680 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1682 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1684 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1686 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1688 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1690 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1692 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1694 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1696 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1698 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0); 
#line 1707 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1709 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1711 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1713 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1715 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1717 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1719 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1721 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1723 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1725 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1727 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1729 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1731 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1733 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1735 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1737 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1739 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1741 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1743 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1745 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1747 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0); 
#line 1839 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1841 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utexfetchlod(texture< T, texType, readMode>  t, ::float4 i, float level, int 
#line 1842 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
d = texType) 
#line 1843 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
#line 1850 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}















#line 1867 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1852 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1854 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itexfetchlod(texture< T, texType, readMode>  t, ::float4 i, float level, int 
#line 1855 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
d = texType) 
#line 1856 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
#line 1863 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}















#line 1880 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1865 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1867 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftexfetchlod(texture< T, texType, readMode>  t, ::float4 i, float level, int 
#line 1868 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
d = texType) 
#line 1869 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;(void)d;
#line 1876 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}















#line 1893 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1879 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1881 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utexfetchlodc(texture< T, texType, readMode>  t, ::float4 i, float level) 
#line 1882 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;
#line 1884 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1893 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1886 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1888 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itexfetchlodc(texture< T, texType, readMode>  t, ::float4 i, float level) 
#line 1889 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;
#line 1891 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1900 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1893 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1895 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftexfetchlodc(texture< T, texType, readMode>  t, ::float4 i, float level) 
#line 1896 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)level;
#line 1898 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1907 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1900 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1902 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utexfetchlodl(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1903 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
level, int d = texType & 15) 
#line 1904 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
#line 1910 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}













#line 1925 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1912 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1914 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itexfetchlodl(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1915 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
level, int d = texType & 15) 
#line 1916 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
#line 1922 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}













#line 1937 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1924 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1926 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftexfetchlodl(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1927 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
level, int d = texType & 15) 
#line 1928 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;(void)d;
#line 1934 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}













#line 1949 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1937 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 1939 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utexfetchlodlc(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1940 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
level) 
#line 1941 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
#line 1943 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1952 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1945 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 1947 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itexfetchlodlc(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1948 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
level) 
#line 1949 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
#line 1951 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1960 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1953 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 1955 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftexfetchlodlc(texture< T, texType, readMode>  t, ::float4 i, int l, float 
#line 1956 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
level) 
#line 1957 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)level;
#line 1959 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}







#line 1968 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 1968 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLod(texture< char, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1970 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLod(texture< signed char, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1972 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLod(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1974 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLod(texture< char1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1976 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLod(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1978 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLod(texture< char2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1980 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLod(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1982 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLod(texture< char4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1984 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLod(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1992 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLod(texture< short, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1994 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLod(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1996 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLod(texture< short1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 1998 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLod(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2000 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLod(texture< short2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2002 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLod(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2004 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLod(texture< short4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2006 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLod(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2014 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLod(texture< int, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2016 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLod(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2018 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLod(texture< int1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2020 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLod(texture< uint1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2022 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLod(texture< int2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2024 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLod(texture< uint2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2026 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLod(texture< int4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2028 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLod(texture< uint4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2044 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLod(texture< long, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2046 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLod(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2048 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLod(texture< long1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2050 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLod(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2052 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLod(texture< long2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2054 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLod(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2056 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLod(texture< long4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2058 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLod(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2068 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< float, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2070 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< float1, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2072 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< float2, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2074 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< float4, 1, cudaReadModeElementType>  t, float x, float level); 
#line 2082 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2084 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2086 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2088 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2090 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2092 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2094 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2096 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2098 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2106 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2108 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLod(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2110 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2112 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLod(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2114 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2116 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLod(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2118 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2120 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLod(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float level); 
#line 2128 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLod(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2130 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLod(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2132 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLod(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2134 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLod(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2136 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLod(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2138 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLod(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2140 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLod(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2142 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLod(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2144 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLod(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2152 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLod(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2154 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLod(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2156 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLod(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2158 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLod(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2160 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLod(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2162 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLod(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2164 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLod(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2166 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLod(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2174 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLod(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2176 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLod(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2178 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLod(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2180 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLod(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2182 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLod(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2184 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLod(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2186 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLod(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2188 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLod(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2198 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLod(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2200 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLod(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2202 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLod(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2204 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLod(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2206 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLod(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2208 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLod(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2210 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLod(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2212 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLod(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2222 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2224 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2226 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2228 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float level); 
#line 2236 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2238 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2240 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2242 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2244 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2246 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2248 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2250 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2252 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2260 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2262 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLod(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2264 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2266 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLod(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2268 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2270 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLod(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2272 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2274 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLod(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level); 
#line 2282 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayeredLod(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2284 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayeredLod(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2286 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2288 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayeredLod(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2290 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2292 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayeredLod(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2294 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2296 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayeredLod(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2298 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2306 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayeredLod(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2308 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2310 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayeredLod(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2312 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2314 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayeredLod(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2316 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2318 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayeredLod(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2320 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2328 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayeredLod(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2330 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayeredLod(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2332 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayeredLod(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2334 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayeredLod(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2336 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayeredLod(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2338 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayeredLod(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2340 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayeredLod(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2342 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayeredLod(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2352 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayeredLod(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2354 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayeredLod(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2356 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayeredLod(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2358 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayeredLod(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2360 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayeredLod(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2362 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayeredLod(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2364 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayeredLod(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2366 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayeredLod(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2376 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2378 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2380 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2382 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float level); 
#line 2390 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2392 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2394 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2396 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2398 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2400 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2402 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2404 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2406 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2414 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2416 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2418 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2420 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2422 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2424 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2426 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2428 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level); 
#line 2436 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayeredLod(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2438 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayeredLod(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2440 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2442 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayeredLod(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2444 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2446 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayeredLod(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2448 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2450 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayeredLod(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2452 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2460 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayeredLod(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2462 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2464 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayeredLod(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2466 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2468 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayeredLod(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2470 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2472 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayeredLod(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2474 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2482 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayeredLod(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2484 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayeredLod(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2486 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayeredLod(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2488 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayeredLod(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2490 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayeredLod(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2492 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayeredLod(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2494 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayeredLod(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2496 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayeredLod(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2506 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayeredLod(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2508 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayeredLod(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2510 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayeredLod(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2512 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayeredLod(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2514 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayeredLod(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2516 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayeredLod(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2518 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayeredLod(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2520 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayeredLod(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2530 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2532 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2534 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2536 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level); 
#line 2544 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2546 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2548 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2550 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2552 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2554 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2556 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2558 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2560 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2568 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2570 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2572 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2574 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2576 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2578 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2580 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2582 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level); 
#line 2590 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex3DLod(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2592 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3DLod(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2594 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3DLod(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2596 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3DLod(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2598 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3DLod(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2600 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3DLod(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2602 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3DLod(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2604 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3DLod(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2606 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3DLod(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2614 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex3DLod(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2616 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3DLod(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2618 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3DLod(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2620 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3DLod(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2622 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3DLod(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2624 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3DLod(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2626 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3DLod(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2628 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3DLod(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2636 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex3DLod(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2638 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3DLod(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2640 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3DLod(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2642 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3DLod(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2644 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3DLod(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2646 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3DLod(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2648 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3DLod(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2650 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3DLod(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2660 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex3DLod(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2662 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3DLod(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2664 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3DLod(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2666 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3DLod(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2668 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3DLod(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2670 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3DLod(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2672 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3DLod(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2674 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3DLod(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2684 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2686 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2688 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2690 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2698 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2700 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2702 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2704 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2706 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2708 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2710 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2712 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2714 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2722 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2724 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DLod(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2726 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2728 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DLod(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2730 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2732 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DLod(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2734 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2736 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DLod(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2744 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLod(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2746 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLod(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2748 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLod(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2750 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLod(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2752 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLod(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2754 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLod(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2756 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLod(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2758 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLod(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2760 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLod(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2768 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLod(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2770 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLod(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2772 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLod(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2774 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLod(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2776 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLod(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2778 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLod(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2780 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLod(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2782 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLod(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2790 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLod(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2792 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLod(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2794 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLod(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2796 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLod(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2798 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLod(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2800 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLod(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2802 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLod(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2804 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLod(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2814 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLod(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2816 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLod(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2818 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLod(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2820 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLod(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2822 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLod(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2824 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLod(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2826 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLod(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2828 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLod(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2838 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2840 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2842 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2844 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level); 
#line 2852 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2854 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2856 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2858 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2860 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2862 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2864 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2866 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2868 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2876 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2878 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLod(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2880 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2882 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLod(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2884 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2886 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLod(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2888 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2890 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLod(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level); 
#line 2898 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char texCubemapLayeredLod(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2900 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char texCubemapLayeredLod(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2902 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2904 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2906 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2908 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2910 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2912 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2914 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2922 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short texCubemapLayeredLod(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2924 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2926 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2928 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2930 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2932 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2934 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2936 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2944 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int texCubemapLayeredLod(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2946 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned texCubemapLayeredLod(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2948 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 texCubemapLayeredLod(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2950 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 texCubemapLayeredLod(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2952 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 texCubemapLayeredLod(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2954 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 texCubemapLayeredLod(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2956 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 texCubemapLayeredLod(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2958 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 texCubemapLayeredLod(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2968 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long texCubemapLayeredLod(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2970 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long texCubemapLayeredLod(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2972 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 texCubemapLayeredLod(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2974 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 texCubemapLayeredLod(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2976 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 texCubemapLayeredLod(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2978 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 texCubemapLayeredLod(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2980 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 texCubemapLayeredLod(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2982 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 texCubemapLayeredLod(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2992 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2994 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2996 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 2998 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level); 
#line 3006 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3008 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3010 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3012 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3014 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3016 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3018 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3020 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3022 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3030 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3032 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3034 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3036 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3038 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3040 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3042 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3044 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level); 
#line 3047 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 3049 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utexfetchgrad(texture< T, texType, readMode>  t, ::float4 i, ::float4 dPdx, ::float4 dPdy, int d = texType) 
#line 3050 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
#line 3057 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}















#line 3074 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 3059 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 3061 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itexfetchgrad(texture< T, texType, readMode>  t, ::float4 i, ::float4 dPdx, ::float4 dPdy, int d = texType) 
#line 3062 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
#line 3069 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}















#line 3086 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 3071 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 3073 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftexfetchgrad(texture< T, texType, readMode>  t, ::float4 i, ::float4 dPdx, ::float4 dPdy, int d = texType) 
#line 3074 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)dPdx;(void)dPdy;(void)d;
#line 3081 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}















#line 3098 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 3083 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::uint4 
#line 3085 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__utexfetchgradl(texture< T, texType, readMode>  t, ::float4 i, int l, ::float4 dPdx, ::float4 dPdy, int d = texType & 15) 
#line 3086 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
#line 3092 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}













#line 3107 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 3094 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::int4 
#line 3096 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__itexfetchgradl(texture< T, texType, readMode>  t, ::float4 i, int l, ::float4 dPdx, ::float4 dPdy, int d = texType & 15) 
#line 3097 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
#line 3103 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}













#line 3118 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 3105 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
template< class T, int texType, cudaTextureReadMode readMode> static __forceinline ::float4 
#line 3107 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
__ftexfetchgradl(texture< T, texType, readMode>  t, ::float4 i, int l, ::float4 dPdx, ::float4 dPdy, int d = texType & 15) 
#line 3108 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
{int volatile ___ = 1;(void)t;(void)i;(void)l;(void)dPdx;(void)dPdy;(void)d;
#line 3114 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
::exit(___);}













#line 3129 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
#line 3123 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex1DGrad(texture< char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3125 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DGrad(texture< signed char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3127 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DGrad(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3129 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DGrad(texture< char1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3131 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DGrad(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3133 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DGrad(texture< char2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3135 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DGrad(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3137 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DGrad(texture< char4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3139 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DGrad(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3147 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex1DGrad(texture< short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3149 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DGrad(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3151 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DGrad(texture< short1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3153 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DGrad(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3155 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DGrad(texture< short2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3157 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DGrad(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3159 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DGrad(texture< short4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3161 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DGrad(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3169 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex1DGrad(texture< int, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3171 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DGrad(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3173 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DGrad(texture< int1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3175 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DGrad(texture< uint1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3177 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DGrad(texture< int2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3179 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DGrad(texture< uint2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3181 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DGrad(texture< int4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3183 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DGrad(texture< uint4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3199 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex1DGrad(texture< long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3201 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DGrad(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3203 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DGrad(texture< long1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3205 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DGrad(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3207 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DGrad(texture< long2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3209 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DGrad(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3211 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DGrad(texture< long4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3213 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DGrad(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3223 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< float, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3225 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< float1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3227 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< float2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3229 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< float4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy); 
#line 3237 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3239 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3241 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3243 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3245 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3247 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3249 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3251 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3253 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3261 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3263 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DGrad(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3265 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3267 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DGrad(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3269 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3271 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DGrad(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3273 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3275 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DGrad(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy); 
#line 3283 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex2DGrad(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3285 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DGrad(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3287 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DGrad(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3289 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DGrad(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3291 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DGrad(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3293 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DGrad(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3295 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DGrad(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3297 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DGrad(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3299 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DGrad(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3307 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex2DGrad(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3309 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DGrad(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3311 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DGrad(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3313 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DGrad(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3315 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DGrad(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3317 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DGrad(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3319 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DGrad(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3321 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DGrad(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3329 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex2DGrad(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3331 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DGrad(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3333 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DGrad(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3335 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DGrad(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3337 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DGrad(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3339 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DGrad(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3341 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DGrad(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3343 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DGrad(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3353 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex2DGrad(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3355 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DGrad(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3357 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DGrad(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3359 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DGrad(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3361 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DGrad(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3363 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DGrad(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3365 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DGrad(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3367 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DGrad(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3377 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3379 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3381 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3383 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3391 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3393 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3395 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3397 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3399 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3401 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3403 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3405 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3407 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3415 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3417 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DGrad(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3419 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3421 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DGrad(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3423 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3425 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DGrad(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3427 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3429 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DGrad(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy); 
#line 3437 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex1DLayeredGrad(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3439 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex1DLayeredGrad(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3441 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3443 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3445 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3447 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3449 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3451 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3453 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3461 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex1DLayeredGrad(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3463 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3465 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3467 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3469 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3471 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3473 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3475 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3483 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex1DLayeredGrad(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3485 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex1DLayeredGrad(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3487 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex1DLayeredGrad(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3489 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex1DLayeredGrad(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3491 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex1DLayeredGrad(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3493 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex1DLayeredGrad(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3495 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex1DLayeredGrad(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3497 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex1DLayeredGrad(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3507 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex1DLayeredGrad(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3509 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex1DLayeredGrad(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3511 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex1DLayeredGrad(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3513 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex1DLayeredGrad(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3515 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex1DLayeredGrad(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3517 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex1DLayeredGrad(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3519 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex1DLayeredGrad(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3521 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex1DLayeredGrad(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3531 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3533 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3535 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3537 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy); 
#line 3545 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3547 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3549 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3551 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3553 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3555 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3557 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3559 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3561 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3569 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3571 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3573 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3575 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3577 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3579 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3581 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3583 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy); 
#line 3591 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex2DLayeredGrad(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3593 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex2DLayeredGrad(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3595 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3597 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3599 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3601 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3603 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3605 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3607 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3615 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex2DLayeredGrad(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3617 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3619 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3621 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3623 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3625 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3627 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3629 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3637 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex2DLayeredGrad(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3639 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex2DLayeredGrad(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3641 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex2DLayeredGrad(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3643 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex2DLayeredGrad(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3645 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex2DLayeredGrad(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3647 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex2DLayeredGrad(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3649 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex2DLayeredGrad(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3651 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex2DLayeredGrad(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3661 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex2DLayeredGrad(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3663 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex2DLayeredGrad(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3665 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex2DLayeredGrad(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3667 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex2DLayeredGrad(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3669 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex2DLayeredGrad(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3671 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex2DLayeredGrad(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3673 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex2DLayeredGrad(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3675 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex2DLayeredGrad(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3685 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3687 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3689 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3691 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3699 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3701 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3703 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3705 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3707 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3709 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3711 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3713 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3715 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3723 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3725 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3727 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3729 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3731 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3733 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3735 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3737 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 3745 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char tex3DGrad(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3747 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline signed char tex3DGrad(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3749 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned char tex3DGrad(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3751 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char1 tex3DGrad(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3753 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar1 tex3DGrad(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3755 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char2 tex3DGrad(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3757 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar2 tex3DGrad(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3759 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline char4 tex3DGrad(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3761 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uchar4 tex3DGrad(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3769 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short tex3DGrad(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3771 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned short tex3DGrad(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3773 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short1 tex3DGrad(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3775 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort1 tex3DGrad(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3777 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short2 tex3DGrad(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3779 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort2 tex3DGrad(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3781 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline short4 tex3DGrad(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3783 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ushort4 tex3DGrad(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3791 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int tex3DGrad(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3793 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned tex3DGrad(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3795 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int1 tex3DGrad(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3797 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint1 tex3DGrad(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3799 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int2 tex3DGrad(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3801 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint2 tex3DGrad(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3803 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline int4 tex3DGrad(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3805 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline uint4 tex3DGrad(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3815 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long tex3DGrad(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3817 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline unsigned long tex3DGrad(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3819 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long1 tex3DGrad(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3821 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong1 tex3DGrad(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3823 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long2 tex3DGrad(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3825 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong2 tex3DGrad(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3827 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline long4 tex3DGrad(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3829 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline ulong4 tex3DGrad(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3839 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3841 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3843 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3845 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3853 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3855 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3857 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3859 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3861 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3863 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3865 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3867 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3869 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3877 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3879 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float tex3DGrad(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3881 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3883 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float1 tex3DGrad(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3885 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3887 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float2 tex3DGrad(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3889 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 3891 "e:\\cudatoolkit\\include\\texture_fetch_functions.h"
static __forceinline float4 tex3DGrad(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 80 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1Dfetch(texture< char, 1, cudaReadModeElementType>  t, int x) 
#line 81 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 89 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 100 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 91 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1Dfetch(texture< signed char, 1, cudaReadModeElementType>  t, int x) 
#line 92 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 96 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 107 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 98 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1Dfetch(texture< unsigned char, 1, cudaReadModeElementType>  t, int x) 
#line 99 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 103 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 114 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 105 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1Dfetch(texture< char1, 1, cudaReadModeElementType>  t, int x) 
#line 106 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 110 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 121 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 112 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1Dfetch(texture< uchar1, 1, cudaReadModeElementType>  t, int x) 
#line 113 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 117 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 128 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 119 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1Dfetch(texture< char2, 1, cudaReadModeElementType>  t, int x) 
#line 120 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 124 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 135 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 126 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1Dfetch(texture< uchar2, 1, cudaReadModeElementType>  t, int x) 
#line 127 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 131 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 142 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 133 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1Dfetch(texture< char4, 1, cudaReadModeElementType>  t, int x) 
#line 134 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 138 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 149 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 140 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1Dfetch(texture< uchar4, 1, cudaReadModeElementType>  t, int x) 
#line 141 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 145 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 156 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 153 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1Dfetch(texture< short, 1, cudaReadModeElementType>  t, int x) 
#line 154 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 158 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 169 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 160 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1Dfetch(texture< unsigned short, 1, cudaReadModeElementType>  t, int x) 
#line 161 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 165 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 176 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 167 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1Dfetch(texture< short1, 1, cudaReadModeElementType>  t, int x) 
#line 168 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 172 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 183 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 174 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1Dfetch(texture< ushort1, 1, cudaReadModeElementType>  t, int x) 
#line 175 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 179 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 190 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 181 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1Dfetch(texture< short2, 1, cudaReadModeElementType>  t, int x) 
#line 182 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 186 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 197 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 188 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1Dfetch(texture< ushort2, 1, cudaReadModeElementType>  t, int x) 
#line 189 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 193 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 204 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 195 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1Dfetch(texture< short4, 1, cudaReadModeElementType>  t, int x) 
#line 196 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 200 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 211 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 202 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1Dfetch(texture< ushort4, 1, cudaReadModeElementType>  t, int x) 
#line 203 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 207 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 218 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 215 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1Dfetch(texture< int, 1, cudaReadModeElementType>  t, int x) 
#line 216 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 220 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 231 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 222 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1Dfetch(texture< unsigned, 1, cudaReadModeElementType>  t, int x) 
#line 223 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 227 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 238 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 229 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1Dfetch(texture< int1, 1, cudaReadModeElementType>  t, int x) 
#line 230 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 234 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 245 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 236 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1Dfetch(texture< uint1, 1, cudaReadModeElementType>  t, int x) 
#line 237 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 241 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 252 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 243 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1Dfetch(texture< int2, 1, cudaReadModeElementType>  t, int x) 
#line 244 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 248 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 259 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 250 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1Dfetch(texture< uint2, 1, cudaReadModeElementType>  t, int x) 
#line 251 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 255 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 266 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 257 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1Dfetch(texture< int4, 1, cudaReadModeElementType>  t, int x) 
#line 258 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 262 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 273 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 264 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1Dfetch(texture< uint4, 1, cudaReadModeElementType>  t, int x) 
#line 265 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 269 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 280 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 279 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1Dfetch(texture< long, 1, cudaReadModeElementType>  t, int x) 
#line 280 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 284 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 295 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 286 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1Dfetch(texture< unsigned long, 1, cudaReadModeElementType>  t, int x) 
#line 287 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 291 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 302 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 293 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1Dfetch(texture< long1, 1, cudaReadModeElementType>  t, int x) 
#line 294 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 298 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 309 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 300 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1Dfetch(texture< ulong1, 1, cudaReadModeElementType>  t, int x) 
#line 301 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 305 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 316 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 307 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1Dfetch(texture< long2, 1, cudaReadModeElementType>  t, int x) 
#line 308 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 312 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 323 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 314 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1Dfetch(texture< ulong2, 1, cudaReadModeElementType>  t, int x) 
#line 315 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 319 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 330 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 321 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1Dfetch(texture< long4, 1, cudaReadModeElementType>  t, int x) 
#line 322 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 326 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 337 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 328 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1Dfetch(texture< ulong4, 1, cudaReadModeElementType>  t, int x) 
#line 329 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 333 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 344 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 343 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< float, 1, cudaReadModeElementType>  t, int x) 
#line 344 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 348 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 359 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 350 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< float1, 1, cudaReadModeElementType>  t, int x) 
#line 351 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 355 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 366 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 357 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< float2, 1, cudaReadModeElementType>  t, int x) 
#line 358 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 362 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 373 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 364 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< float4, 1, cudaReadModeElementType>  t, int x) 
#line 365 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 369 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 380 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 377 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 378 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 387 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 400 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 389 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 390 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 395 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 408 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 397 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 398 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 403 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 416 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 405 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< char1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 406 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 411 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 424 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 413 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 414 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 419 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 432 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 421 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< char2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 422 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 427 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 440 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 429 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 430 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 435 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 448 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 437 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< char4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 438 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 443 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 456 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 445 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 446 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 451 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 464 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 459 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< short, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 460 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 465 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 478 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 467 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1Dfetch(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 468 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 473 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 486 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 475 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< short1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 476 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 481 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 494 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 483 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1Dfetch(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 484 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 489 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 502 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 491 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< short2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 492 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 497 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 510 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 499 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1Dfetch(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 500 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 505 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 518 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 507 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< short4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 508 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 513 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 526 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 515 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1Dfetch(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, int x) 
#line 516 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 521 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 534 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 529 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1D(texture< char, 1, cudaReadModeElementType>  t, float x) 
#line 530 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 538 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 549 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 540 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1D(texture< signed char, 1, cudaReadModeElementType>  t, float x) 
#line 541 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 545 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 556 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 547 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1D(texture< unsigned char, 1, cudaReadModeElementType>  t, float x) 
#line 548 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 552 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 563 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 554 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1D(texture< char1, 1, cudaReadModeElementType>  t, float x) 
#line 555 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 559 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 570 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 561 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1D(texture< uchar1, 1, cudaReadModeElementType>  t, float x) 
#line 562 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 566 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 577 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 568 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1D(texture< char2, 1, cudaReadModeElementType>  t, float x) 
#line 569 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 573 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 584 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 575 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1D(texture< uchar2, 1, cudaReadModeElementType>  t, float x) 
#line 576 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 580 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 591 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 582 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1D(texture< char4, 1, cudaReadModeElementType>  t, float x) 
#line 583 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 587 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 598 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 589 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1D(texture< uchar4, 1, cudaReadModeElementType>  t, float x) 
#line 590 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 594 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 605 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 602 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1D(texture< short, 1, cudaReadModeElementType>  t, float x) 
#line 603 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 607 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 618 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 609 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1D(texture< unsigned short, 1, cudaReadModeElementType>  t, float x) 
#line 610 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 614 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 625 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 616 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1D(texture< short1, 1, cudaReadModeElementType>  t, float x) 
#line 617 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 621 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 632 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 623 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1D(texture< ushort1, 1, cudaReadModeElementType>  t, float x) 
#line 624 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 628 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 639 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 630 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1D(texture< short2, 1, cudaReadModeElementType>  t, float x) 
#line 631 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 635 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 646 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 637 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1D(texture< ushort2, 1, cudaReadModeElementType>  t, float x) 
#line 638 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 642 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 653 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 644 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1D(texture< short4, 1, cudaReadModeElementType>  t, float x) 
#line 645 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 649 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 660 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 651 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1D(texture< ushort4, 1, cudaReadModeElementType>  t, float x) 
#line 652 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 656 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 667 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 664 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1D(texture< int, 1, cudaReadModeElementType>  t, float x) 
#line 665 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 669 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 680 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 671 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1D(texture< unsigned, 1, cudaReadModeElementType>  t, float x) 
#line 672 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 676 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 687 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 678 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1D(texture< int1, 1, cudaReadModeElementType>  t, float x) 
#line 679 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 683 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 694 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 685 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1D(texture< uint1, 1, cudaReadModeElementType>  t, float x) 
#line 686 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 690 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 701 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 692 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1D(texture< int2, 1, cudaReadModeElementType>  t, float x) 
#line 693 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 697 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 708 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 699 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1D(texture< uint2, 1, cudaReadModeElementType>  t, float x) 
#line 700 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 704 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 715 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 706 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1D(texture< int4, 1, cudaReadModeElementType>  t, float x) 
#line 707 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 711 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 722 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 713 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1D(texture< uint4, 1, cudaReadModeElementType>  t, float x) 
#line 714 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 718 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 729 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 734 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1D(texture< long, 1, cudaReadModeElementType>  t, float x) 
#line 735 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 739 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 750 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 741 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1D(texture< unsigned long, 1, cudaReadModeElementType>  t, float x) 
#line 742 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 746 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 757 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 748 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1D(texture< long1, 1, cudaReadModeElementType>  t, float x) 
#line 749 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 753 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 764 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 755 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1D(texture< ulong1, 1, cudaReadModeElementType>  t, float x) 
#line 756 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 760 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 771 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 762 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1D(texture< long2, 1, cudaReadModeElementType>  t, float x) 
#line 763 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 767 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 778 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 769 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1D(texture< ulong2, 1, cudaReadModeElementType>  t, float x) 
#line 770 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 774 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 785 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 776 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1D(texture< long4, 1, cudaReadModeElementType>  t, float x) 
#line 777 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 781 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 792 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 783 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1D(texture< ulong4, 1, cudaReadModeElementType>  t, float x) 
#line 784 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 788 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 799 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 798 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< float, 1, cudaReadModeElementType>  t, float x) 
#line 799 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 803 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 814 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 805 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< float1, 1, cudaReadModeElementType>  t, float x) 
#line 806 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 810 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 821 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 812 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< float2, 1, cudaReadModeElementType>  t, float x) 
#line 813 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 817 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 828 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 819 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< float4, 1, cudaReadModeElementType>  t, float x) 
#line 820 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 824 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 835 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 832 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 833 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 842 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 855 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 844 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 845 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 850 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 863 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 852 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 853 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 858 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 871 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 860 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 861 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 866 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 879 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 868 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 869 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 874 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 887 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 876 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 877 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 882 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 895 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 884 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 885 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 890 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 903 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 892 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 893 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 898 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 911 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 900 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 901 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 906 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 919 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 914 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 915 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 920 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 933 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 922 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1D(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 923 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 928 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 941 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 930 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 931 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 936 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 949 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 938 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1D(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 939 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 944 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 957 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 946 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 947 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 952 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 965 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 954 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1D(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 955 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 960 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 973 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 962 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 963 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 968 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 981 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 970 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1D(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x) 
#line 971 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;
#line 976 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 989 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 984 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2D(texture< char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 985 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 993 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1004 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 995 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2D(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 996 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1000 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1011 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1002 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2D(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1003 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1007 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1018 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1009 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2D(texture< char1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1010 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1014 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1025 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1016 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2D(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1017 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1021 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1032 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1023 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2D(texture< char2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1024 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1028 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1039 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1030 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2D(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1031 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1035 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1046 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1037 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2D(texture< char4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1038 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1042 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1053 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1044 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2D(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1045 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1049 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1060 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1057 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2D(texture< short, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1058 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1062 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1073 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1064 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2D(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1065 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1069 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1080 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1071 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2D(texture< short1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1072 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1076 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1087 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1078 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2D(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1079 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1083 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1094 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1085 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2D(texture< short2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1086 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1090 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1101 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1092 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2D(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1093 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1097 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1108 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1099 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2D(texture< short4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1100 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1104 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1115 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1106 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2D(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1107 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1111 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1122 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1119 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2D(texture< int, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1120 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1124 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1135 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1126 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2D(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1127 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1131 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1142 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1133 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2D(texture< int1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1134 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1138 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1149 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1140 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2D(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1141 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1145 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1156 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1147 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2D(texture< int2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1148 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1152 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1163 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1154 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2D(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1155 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1159 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1170 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1161 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2D(texture< int4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1162 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1166 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1177 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1168 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2D(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1169 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1173 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1184 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1183 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2D(texture< long, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1184 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1188 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1199 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1190 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2D(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1191 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1195 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1206 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1197 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2D(texture< long1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1198 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1202 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1213 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1204 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2D(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1205 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1209 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1220 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1211 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2D(texture< long2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1212 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1216 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1227 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1218 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2D(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1219 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1223 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1234 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1225 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2D(texture< long4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1226 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1230 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1241 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1232 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2D(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1233 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1237 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1248 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1247 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< float, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1248 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1252 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1263 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1254 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< float1, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1255 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1259 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1270 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1261 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< float2, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1262 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1266 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1277 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1268 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< float4, 2, cudaReadModeElementType>  t, float x, float y) 
#line 1269 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1273 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1284 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1281 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1282 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1291 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1304 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1293 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1294 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1299 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1312 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1301 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1302 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1307 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1320 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1309 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1310 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1315 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1328 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1317 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1318 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1323 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1336 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1325 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1326 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1331 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1344 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1333 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1334 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1339 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1352 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1341 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1342 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1347 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1360 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1349 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1350 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1355 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1368 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1363 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1364 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1369 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1382 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1371 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2D(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1372 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1377 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1390 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1379 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1380 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1385 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1398 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1387 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2D(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1388 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1393 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1406 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1395 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1396 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1401 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1414 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1403 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2D(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1404 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1409 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1422 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1411 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1412 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1417 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1430 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1419 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2D(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y) 
#line 1420 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;
#line 1425 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1438 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1433 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLayered(texture< char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1434 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1442 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1453 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1444 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLayered(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1445 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1449 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1460 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1451 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLayered(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1452 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1456 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1467 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1458 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLayered(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1459 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1463 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1474 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1465 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLayered(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1466 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1470 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1481 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1472 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLayered(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1473 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1477 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1488 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1479 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLayered(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1480 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1484 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1495 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1486 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLayered(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1487 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1491 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1502 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1493 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLayered(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1494 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1498 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1509 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1506 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLayered(texture< short, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1507 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1511 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1522 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1513 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLayered(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1514 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1518 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1529 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1520 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLayered(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1521 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1525 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1536 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1527 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLayered(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1528 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1532 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1543 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1534 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLayered(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1535 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1539 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1550 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1541 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLayered(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1542 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1546 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1557 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1548 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLayered(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1549 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1553 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1564 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1555 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLayered(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1556 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1560 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1571 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1568 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLayered(texture< int, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1569 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1573 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1584 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1575 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLayered(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1576 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1580 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1591 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1582 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLayered(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1583 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1587 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1598 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1589 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLayered(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1590 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1594 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1605 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1596 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLayered(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1597 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1601 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1612 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1603 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLayered(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1604 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1608 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1619 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1610 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLayered(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1611 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1615 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1626 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1617 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLayered(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1618 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1622 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1633 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1632 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLayered(texture< long, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1633 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1637 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1648 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1639 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLayered(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1640 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1644 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1655 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1646 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLayered(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1647 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1651 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1662 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1653 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLayered(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1654 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1658 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1669 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1660 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLayered(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1661 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1665 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1676 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1667 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLayered(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1668 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1672 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1683 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1674 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLayered(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1675 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1679 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1690 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1681 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLayered(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1682 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1686 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1697 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1696 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< float, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1697 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1701 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1712 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1703 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1704 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1708 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1719 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1710 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1711 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1715 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1726 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1717 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer) 
#line 1718 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1722 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1733 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1730 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1731 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1740 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1753 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1742 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1743 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1748 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1761 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1750 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1751 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1756 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1769 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1758 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1759 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1764 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1777 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1766 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1767 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1772 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1785 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1774 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1775 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1780 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1793 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1782 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1783 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1788 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1801 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1790 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1791 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1796 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1809 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1798 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1799 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1804 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1817 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1812 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1813 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1818 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1831 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1820 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayered(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1821 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1826 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1839 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1828 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1829 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1834 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1847 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1836 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayered(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1837 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1842 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1855 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1844 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1845 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1850 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1863 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1852 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayered(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1853 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1858 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1871 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1860 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1861 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1866 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1879 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1868 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayered(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) 
#line 1869 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;
#line 1874 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 1887 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1882 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLayered(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1883 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1891 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1902 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1893 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLayered(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1894 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1898 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1909 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1900 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLayered(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1901 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1905 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1916 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1907 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLayered(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1908 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1912 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1923 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1914 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLayered(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1915 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1919 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1930 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1921 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLayered(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1922 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1926 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1937 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1928 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLayered(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1929 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1933 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1944 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1935 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLayered(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1936 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1940 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1951 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1942 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLayered(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1943 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1947 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1958 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1955 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLayered(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1956 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1960 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1971 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1962 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLayered(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1963 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1967 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1978 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1969 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLayered(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1970 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1974 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1985 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1976 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLayered(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1977 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1981 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1992 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1983 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLayered(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1984 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1988 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 1999 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1990 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLayered(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1991 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 1995 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2006 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 1997 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLayered(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 1998 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2002 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2013 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2004 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLayered(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2005 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2009 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2020 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2017 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLayered(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2018 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2022 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2033 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2024 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLayered(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2025 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2029 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2040 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2031 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLayered(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2032 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2036 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2047 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2038 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLayered(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2039 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2043 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2054 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2045 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLayered(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2046 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2050 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2061 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2052 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLayered(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2053 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2057 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2068 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2059 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLayered(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2060 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2064 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2075 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2066 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLayered(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2067 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2071 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2082 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2081 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLayered(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2082 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2086 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2097 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2088 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLayered(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2089 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2093 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2104 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2095 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLayered(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2096 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2100 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2111 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2102 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLayered(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2103 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2107 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2118 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2109 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLayered(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2110 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2114 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2125 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2116 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLayered(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2117 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2121 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2132 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2123 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLayered(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2124 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2128 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2139 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2130 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLayered(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2131 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2135 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2146 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2145 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2146 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2150 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2161 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2152 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2153 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2157 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2168 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2159 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2160 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2164 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2175 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2166 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer) 
#line 2167 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2171 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2182 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2179 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2180 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2189 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2202 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2191 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2192 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2197 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2210 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2199 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2200 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2205 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2218 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2207 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2208 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2213 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2226 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2215 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2216 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2221 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2234 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2223 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2224 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2229 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2242 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2231 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2232 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2237 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2250 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2239 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2240 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2245 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2258 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2247 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2248 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2253 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2266 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2261 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2262 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2267 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2280 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2269 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayered(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2270 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2275 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2288 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2277 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2278 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2283 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2296 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2285 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayered(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2286 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2291 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2304 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2293 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2294 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2299 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2312 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2301 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayered(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2302 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2307 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2320 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2309 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2310 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2315 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2328 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2317 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayered(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) 
#line 2318 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;
#line 2323 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2336 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2331 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex3D(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2332 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2340 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2351 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2342 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex3D(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2343 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2347 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2358 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2349 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex3D(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2350 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2354 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2365 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2356 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex3D(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2357 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2361 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2372 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2363 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex3D(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2364 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2368 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2379 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2370 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex3D(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2371 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2375 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2386 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2377 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex3D(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2378 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2382 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2393 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2384 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex3D(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2385 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2389 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2400 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2391 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex3D(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2392 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2396 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2407 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2404 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex3D(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2405 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2409 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2420 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2411 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex3D(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2412 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2416 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2427 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2418 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex3D(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2419 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2423 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2434 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2425 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex3D(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2426 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2430 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2441 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2432 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex3D(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2433 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2437 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2448 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2439 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex3D(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2440 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2444 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2455 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2446 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex3D(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2447 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2451 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2462 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2453 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex3D(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2454 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2458 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2469 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2466 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex3D(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2467 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2471 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2482 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2473 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex3D(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2474 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2478 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2489 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2480 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex3D(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2481 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2485 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2496 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2487 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex3D(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2488 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2492 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2503 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2494 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex3D(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2495 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2499 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2510 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2501 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex3D(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2502 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2506 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2517 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2508 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex3D(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2509 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2513 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2524 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2515 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex3D(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2516 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2520 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2531 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2530 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex3D(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2531 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2535 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2546 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2537 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex3D(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2538 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2542 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2553 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2544 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex3D(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2545 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2549 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2560 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2551 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex3D(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2552 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2556 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2567 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2558 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex3D(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2559 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2563 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2574 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2565 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex3D(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2566 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2570 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2581 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2572 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex3D(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2573 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2577 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2588 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2579 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex3D(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2580 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2584 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2595 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2594 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2595 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2599 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2610 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2601 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2602 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2606 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2617 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2608 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2609 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2613 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2624 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2615 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2616 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2620 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2631 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2628 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2629 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2638 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2651 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2640 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2641 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2646 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2659 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2648 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2649 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2654 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2667 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2656 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2657 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2662 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2675 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2664 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2665 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2670 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2683 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2672 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2673 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2678 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2691 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2680 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2681 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2686 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2699 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2688 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2689 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2694 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2707 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2696 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2697 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2702 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2715 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2710 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2711 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2716 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2729 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2718 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3D(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2719 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2724 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2737 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2726 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2727 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2732 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2745 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2734 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3D(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2735 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2740 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2753 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2742 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2743 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2748 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2761 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2750 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3D(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2751 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2756 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2769 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2758 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2759 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2764 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2777 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2766 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3D(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 2767 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2772 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 2785 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2780 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemap(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2781 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2789 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2800 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2791 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemap(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2792 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2796 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2807 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2798 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemap(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2799 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2803 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2814 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2805 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemap(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2806 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2810 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2821 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2812 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemap(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2813 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2817 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2828 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2819 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemap(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2820 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2824 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2835 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2826 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemap(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2827 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2831 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2842 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2833 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemap(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2834 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2838 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2849 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2840 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemap(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2841 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2845 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2856 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2853 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemap(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2854 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2858 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2869 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2860 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemap(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2861 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2865 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2876 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2867 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemap(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2868 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2872 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2883 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2874 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemap(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2875 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2879 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2890 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2881 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemap(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2882 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2886 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2897 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2888 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemap(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2889 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2893 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2904 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2895 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemap(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2896 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2900 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2911 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2902 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemap(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2903 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2907 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2918 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2915 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemap(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2916 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2920 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2931 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2922 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemap(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2923 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2927 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2938 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2929 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemap(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2930 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2934 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2945 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2936 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemap(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2937 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2941 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2952 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2943 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemap(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2944 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2948 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2959 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2950 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemap(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2951 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2955 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2966 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2957 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemap(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2958 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2962 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2973 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2964 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemap(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2965 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2969 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2980 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2979 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemap(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2980 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2984 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 2995 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2986 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemap(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2987 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2991 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3002 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 2993 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemap(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 2994 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 2998 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3009 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3000 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemap(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3001 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3005 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3016 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3007 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemap(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3008 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3012 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3023 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3014 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemap(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3015 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3019 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3030 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3021 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemap(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3022 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3026 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3037 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3028 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemap(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3029 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3033 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3044 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3043 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3044 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3048 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3059 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3050 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3051 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3055 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3066 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3057 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3058 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3062 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3073 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3064 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z) 
#line 3065 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3069 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3080 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3077 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3078 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3087 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3100 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3089 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3090 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3095 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3108 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3097 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3098 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3103 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3116 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3105 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3106 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3111 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3124 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3113 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3114 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3119 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3132 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3121 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3122 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3127 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3140 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3129 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3130 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3135 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3148 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3137 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3138 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3143 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3156 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3145 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3146 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3151 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3164 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3159 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3160 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3165 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3178 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3167 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemap(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3168 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3173 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3186 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3175 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3176 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3181 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3194 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3183 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemap(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3184 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3189 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3202 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3191 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3192 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3197 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3210 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3199 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemap(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3200 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3205 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3218 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3207 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3208 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3213 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3226 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3215 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemap(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) 
#line 3216 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;
#line 3221 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3234 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3229 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemapLayered(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3230 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3238 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3249 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3240 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemapLayered(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3241 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3245 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3256 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3247 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemapLayered(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3248 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3252 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3263 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3254 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemapLayered(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3255 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3259 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3270 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3261 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemapLayered(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3262 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3266 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3277 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3268 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemapLayered(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3269 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3273 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3284 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3275 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemapLayered(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3276 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3280 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3291 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3282 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemapLayered(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3283 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3287 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3298 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3289 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemapLayered(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3290 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3294 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3305 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3302 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemapLayered(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3303 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3307 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3318 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3309 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemapLayered(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3310 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3314 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3325 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3316 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemapLayered(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3317 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3321 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3332 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3323 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemapLayered(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3324 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3328 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3339 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3330 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemapLayered(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3331 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3335 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3346 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3337 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemapLayered(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3338 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3342 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3353 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3344 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemapLayered(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3345 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3349 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3360 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3351 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemapLayered(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3352 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3356 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3367 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3364 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemapLayered(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3365 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3369 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3380 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3371 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemapLayered(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3372 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3376 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3387 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3378 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemapLayered(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3379 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3383 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3394 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3385 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemapLayered(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3386 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3390 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3401 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3392 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemapLayered(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3393 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3397 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3408 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3399 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemapLayered(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3400 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3404 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3415 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3406 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemapLayered(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3407 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3411 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3422 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3413 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemapLayered(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3414 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3418 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3429 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3428 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemapLayered(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3429 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3433 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3444 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3435 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemapLayered(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3436 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3440 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3451 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3442 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemapLayered(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3443 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3447 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3458 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3449 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemapLayered(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3450 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3454 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3465 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3456 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemapLayered(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3457 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3461 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3472 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3463 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemapLayered(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3464 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3468 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3479 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3470 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemapLayered(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3471 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3475 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3486 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3477 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemapLayered(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3478 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3482 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3493 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3492 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3493 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3497 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3508 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3499 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3500 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3504 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3515 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3506 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3507 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3511 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3522 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3513 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) 
#line 3514 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3518 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 3529 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3526 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3527 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3536 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3549 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3538 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3539 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3544 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3557 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3546 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3547 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3552 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3565 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3554 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3555 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3560 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3573 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3562 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3563 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3568 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3581 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3570 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3571 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3576 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3589 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3578 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3579 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3584 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3597 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3586 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3587 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3592 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3605 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3594 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3595 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3600 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3613 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3608 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3609 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3614 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3627 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3616 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayered(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3617 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3622 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3635 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3624 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3625 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3630 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3643 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3632 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayered(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3633 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3638 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3651 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3640 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3641 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3646 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3659 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3648 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayered(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3649 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3654 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3667 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3656 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3657 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3662 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3675 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3664 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayered(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) 
#line 3665 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;
#line 3670 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 3683 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3703 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3704 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3706 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3715 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3708 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3709 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3711 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3720 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3713 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3714 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3716 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3725 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3718 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3719 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3721 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3730 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3723 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3724 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3726 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3735 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3728 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3729 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3731 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3740 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3733 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3734 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3736 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3745 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3738 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3739 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3741 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3750 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3743 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3744 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3746 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3755 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3748 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2Dgather(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3749 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3751 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3760 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3753 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2Dgather(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3754 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3756 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3765 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3758 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3759 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3761 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3770 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3763 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3764 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3766 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3775 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3768 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3769 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3771 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3780 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3773 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3774 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3776 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3785 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3778 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3779 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3781 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3790 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3783 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3784 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3786 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3795 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3788 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3789 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3791 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3800 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3793 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3794 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3796 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3805 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3798 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2Dgather(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3799 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3801 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3810 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3803 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2Dgather(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3804 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3806 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3815 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3808 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3809 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3811 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3820 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3813 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3814 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3816 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3825 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3818 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3819 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3821 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3830 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3823 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3824 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3826 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3835 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3828 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3829 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3831 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3840 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3833 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3834 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3836 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3845 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3838 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3839 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3841 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3850 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3843 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3844 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3846 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3855 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3848 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2Dgather(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3849 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3851 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3860 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3853 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2Dgather(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3854 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3856 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3865 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3858 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3859 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3861 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3870 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3863 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3864 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3866 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3875 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3868 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3869 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3871 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3880 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3873 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float3, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3874 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3876 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3885 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3878 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, int comp) 
#line 3879 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3881 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3890 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3890 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3891 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3893 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3902 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3895 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3896 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3898 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3907 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3900 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3901 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3903 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3912 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3905 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3906 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3908 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3917 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3910 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3911 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3913 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3922 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3915 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3916 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3918 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3927 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3920 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3921 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3923 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3932 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3925 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3926 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3928 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3937 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3930 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3931 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3933 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3942 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3935 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3936 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3938 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3947 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3940 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3941 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3943 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3952 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3945 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3946 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3948 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3957 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3950 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3951 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3953 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3962 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3955 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3956 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3958 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3967 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3960 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3961 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3963 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3972 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3965 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3966 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3968 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3977 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3970 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3971 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3973 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3982 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3975 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3976 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3978 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3987 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3980 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort3, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3981 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3983 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3992 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3985 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3986 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3988 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 3997 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 3990 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2Dgather(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp) 
#line 3991 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)comp;
#line 3993 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}







#line 4002 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4007 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLod(texture< char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4008 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4016 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4027 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4018 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLod(texture< signed char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4019 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4023 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4034 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4025 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLod(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4026 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4030 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4041 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4032 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLod(texture< char1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4033 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4037 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4048 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4039 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLod(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4040 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4044 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4055 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4046 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLod(texture< char2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4047 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4051 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4062 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4053 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLod(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4054 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4058 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4069 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4060 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLod(texture< char4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4061 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4065 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4076 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4067 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLod(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4068 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4072 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4083 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4080 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLod(texture< short, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4081 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4085 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4096 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4087 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLod(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4088 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4092 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4103 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4094 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLod(texture< short1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4095 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4099 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4110 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4101 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLod(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4102 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4106 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4117 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4108 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLod(texture< short2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4109 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4113 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4124 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4115 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLod(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4116 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4120 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4131 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4122 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLod(texture< short4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4123 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4127 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4138 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4129 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLod(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4130 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4134 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4145 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4142 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLod(texture< int, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4143 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4147 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4158 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4149 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLod(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4150 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4154 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4165 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4156 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLod(texture< int1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4157 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4161 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4172 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4163 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLod(texture< uint1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4164 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4168 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4179 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4170 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLod(texture< int2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4171 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4175 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4186 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4177 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLod(texture< uint2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4178 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4182 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4193 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4184 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLod(texture< int4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4185 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4189 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4200 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4191 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLod(texture< uint4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4192 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4196 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4207 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4212 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLod(texture< long, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4213 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4217 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4228 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4219 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLod(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4220 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4224 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4235 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4226 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLod(texture< long1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4227 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4231 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4242 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4233 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLod(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4234 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4238 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4249 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4240 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLod(texture< long2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4241 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4245 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4256 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4247 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLod(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4248 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4252 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4263 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4254 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLod(texture< long4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4255 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4259 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4270 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4261 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLod(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4262 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4266 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4277 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4276 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< float, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4277 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4281 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4292 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4283 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< float1, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4284 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4288 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4299 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4290 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< float2, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4291 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4295 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4306 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4297 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< float4, 1, cudaReadModeElementType>  t, float x, float level) 
#line 4298 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4302 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4313 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4310 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4311 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4320 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4333 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4322 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4323 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4328 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4341 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4330 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4331 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4336 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4349 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4338 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4339 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4344 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4357 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4346 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4347 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4352 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4365 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4354 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4355 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4360 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4373 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4362 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4363 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4368 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4381 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4370 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4371 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4376 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4389 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4378 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4379 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4384 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4397 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4392 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4393 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4398 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4411 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4400 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLod(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4401 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4406 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4419 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4408 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4409 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4414 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4427 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4416 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLod(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4417 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4422 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4435 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4424 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4425 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4430 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4443 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4432 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLod(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4433 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4438 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4451 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4440 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4441 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4446 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4459 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4448 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLod(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float level) 
#line 4449 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)level;
#line 4454 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4467 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4462 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLod(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4463 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4471 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4482 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4473 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLod(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4474 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4478 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4489 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4480 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLod(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4481 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4485 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4496 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4487 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLod(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4488 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4492 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4503 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4494 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLod(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4495 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4499 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4510 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4501 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLod(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4502 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4506 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4517 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4508 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLod(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4509 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4513 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4524 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4515 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLod(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4516 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4520 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4531 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4522 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLod(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4523 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4527 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4538 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4535 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLod(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4536 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4540 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4551 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4542 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLod(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4543 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4547 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4558 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4549 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLod(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4550 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4554 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4565 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4556 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLod(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4557 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4561 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4572 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4563 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLod(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4564 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4568 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4579 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4570 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLod(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4571 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4575 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4586 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4577 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLod(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4578 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4582 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4593 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4584 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLod(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4585 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4589 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4600 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4597 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLod(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4598 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4602 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4613 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4604 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLod(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4605 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4609 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4620 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4611 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLod(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4612 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4616 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4627 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4618 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLod(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4619 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4623 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4634 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4625 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLod(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4626 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4630 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4641 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4632 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLod(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4633 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4637 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4648 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4639 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLod(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4640 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4644 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4655 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4646 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLod(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4647 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4651 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4662 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4661 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLod(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4662 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4666 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4677 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4668 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLod(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4669 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4673 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4684 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4675 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLod(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4676 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4680 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4691 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4682 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLod(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4683 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4687 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4698 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4689 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLod(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4690 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4694 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4705 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4696 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLod(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4697 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4701 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4712 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4703 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLod(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4704 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4708 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4719 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4710 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLod(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4711 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4715 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4726 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4725 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4726 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4730 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4741 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4732 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4733 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4737 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4748 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4739 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4740 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4744 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4755 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4746 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float level) 
#line 4747 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4751 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4762 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4759 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4760 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4769 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4782 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4771 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4772 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4777 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4790 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4779 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4780 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4785 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4798 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4787 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4788 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4793 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4806 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4795 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4796 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4801 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4814 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4803 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4804 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4809 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4822 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4811 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4812 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4817 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4830 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4819 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4820 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4825 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4838 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4827 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4828 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4833 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4846 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4841 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4842 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4847 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4860 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4849 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLod(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4850 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4855 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4868 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4857 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4858 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4863 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4876 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4865 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLod(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4866 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4871 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4884 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4873 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4874 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4879 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4892 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4881 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLod(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4882 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4887 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4900 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4889 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4890 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4895 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4908 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4897 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLod(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) 
#line 4898 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)level;
#line 4903 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 4916 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4911 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLayeredLod(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4912 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4920 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4931 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4922 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLayeredLod(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4923 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4927 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4938 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4929 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4930 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4934 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4945 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4936 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLayeredLod(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4937 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4941 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4952 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4943 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4944 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4948 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4959 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4950 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLayeredLod(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4951 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4955 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4966 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4957 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4958 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4962 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4973 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4964 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLayeredLod(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4965 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4969 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4980 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4971 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4972 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4976 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 4987 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4984 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLayeredLod(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4985 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4989 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5000 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4991 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4992 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 4996 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5007 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 4998 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLayeredLod(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 4999 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5003 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5014 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5005 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5006 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5010 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5021 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5012 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLayeredLod(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5013 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5017 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5028 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5019 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5020 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5024 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5035 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5026 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLayeredLod(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5027 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5031 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5042 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5033 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5034 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5038 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5049 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5046 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLayeredLod(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5047 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5051 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5062 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5053 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLayeredLod(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5054 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5058 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5069 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5060 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLayeredLod(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5061 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5065 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5076 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5067 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLayeredLod(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5068 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5072 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5083 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5074 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLayeredLod(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5075 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5079 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5090 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5081 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLayeredLod(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5082 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5086 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5097 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5088 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLayeredLod(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5089 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5093 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5104 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5095 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLayeredLod(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5096 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5100 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5111 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5110 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLayeredLod(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5111 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5115 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5126 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5117 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLayeredLod(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5118 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5122 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5133 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5124 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLayeredLod(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5125 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5129 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5140 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5131 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLayeredLod(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5132 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5136 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5147 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5138 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLayeredLod(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5139 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5143 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5154 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5145 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLayeredLod(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5146 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5150 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5161 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5152 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLayeredLod(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5153 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5157 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5168 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5159 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLayeredLod(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5160 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5164 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5175 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5174 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5175 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5179 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5190 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5181 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5182 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5186 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5197 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5188 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5189 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5193 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5204 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5195 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float level) 
#line 5196 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5200 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5211 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5208 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5209 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5218 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5231 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5220 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5221 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5226 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5239 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5228 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5229 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5234 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5247 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5236 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5237 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5242 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5255 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5244 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5245 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5250 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5263 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5252 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5253 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5258 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5271 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5260 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5261 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5266 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5279 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5268 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5269 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5274 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5287 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5276 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5277 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5282 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5295 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5290 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5291 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5296 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5309 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5298 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredLod(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5299 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5304 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5317 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5306 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5307 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5312 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5325 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5314 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredLod(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5315 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5320 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5333 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5322 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5323 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5328 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5341 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5330 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredLod(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5331 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5336 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5349 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5338 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5339 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5344 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5357 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5346 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredLod(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) 
#line 5347 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)level;
#line 5352 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5365 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5360 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLayeredLod(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5361 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5369 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5380 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5371 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLayeredLod(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5372 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5376 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5387 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5378 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5379 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5383 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5394 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5385 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLayeredLod(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5386 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5390 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5401 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5392 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5393 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5397 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5408 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5399 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLayeredLod(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5400 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5404 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5415 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5406 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5407 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5411 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5422 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5413 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLayeredLod(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5414 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5418 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5429 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5420 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5421 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5425 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5436 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5433 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLayeredLod(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5434 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5438 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5449 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5440 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5441 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5445 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5456 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5447 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLayeredLod(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5448 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5452 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5463 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5454 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5455 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5459 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5470 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5461 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLayeredLod(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5462 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5466 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5477 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5468 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5469 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5473 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5484 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5475 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLayeredLod(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5476 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5480 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5491 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5482 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5483 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5487 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5498 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5495 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLayeredLod(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5496 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5500 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5511 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5502 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLayeredLod(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5503 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5507 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5518 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5509 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLayeredLod(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5510 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5514 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5525 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5516 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLayeredLod(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5517 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5521 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5532 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5523 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLayeredLod(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5524 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5528 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5539 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5530 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLayeredLod(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5531 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5535 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5546 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5537 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLayeredLod(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5538 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5542 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5553 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5544 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLayeredLod(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5545 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5549 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5560 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5559 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLayeredLod(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5560 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5564 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5575 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5566 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLayeredLod(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5567 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5571 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5582 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5573 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLayeredLod(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5574 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5578 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5589 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5580 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLayeredLod(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5581 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5585 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5596 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5587 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLayeredLod(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5588 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5592 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5603 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5594 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLayeredLod(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5595 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5599 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5610 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5601 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLayeredLod(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5602 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5606 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5617 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5608 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLayeredLod(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5609 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5613 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5624 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5623 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5624 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5628 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5639 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5630 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5631 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5635 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5646 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5637 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5638 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5642 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5653 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5644 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) 
#line 5645 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5649 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5660 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5657 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5658 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5667 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5680 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5669 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5670 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5675 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5688 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5677 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5678 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5683 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5696 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5685 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5686 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5691 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5704 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5693 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5694 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5699 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5712 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5701 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5702 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5707 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5720 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5709 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5710 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5715 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5728 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5717 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5718 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5723 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5736 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5725 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5726 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5731 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5744 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5739 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5740 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5745 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5758 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5747 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredLod(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5748 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5753 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5766 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5755 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5756 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5761 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5774 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5763 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredLod(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5764 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5769 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5782 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5771 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5772 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5777 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5790 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5779 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredLod(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5780 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5785 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5798 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5787 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5788 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5793 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5806 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5795 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredLod(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) 
#line 5796 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)level;
#line 5801 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 5814 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5809 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex3DLod(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5810 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5818 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5829 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5820 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex3DLod(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5821 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5825 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5836 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5827 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex3DLod(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5828 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5832 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5843 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5834 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex3DLod(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5835 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5839 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5850 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5841 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex3DLod(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5842 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5846 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5857 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5848 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex3DLod(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5849 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5853 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5864 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5855 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex3DLod(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5856 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5860 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5871 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5862 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex3DLod(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5863 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5867 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5878 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5869 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex3DLod(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5870 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5874 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5885 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5882 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex3DLod(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5883 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5887 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5898 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5889 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex3DLod(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5890 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5894 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5905 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5896 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex3DLod(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5897 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5901 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5912 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5903 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex3DLod(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5904 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5908 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5919 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5910 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex3DLod(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5911 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5915 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5926 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5917 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex3DLod(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5918 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5922 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5933 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5924 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex3DLod(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5925 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5929 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5940 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5931 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex3DLod(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5932 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5936 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5947 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5944 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex3DLod(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5945 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5949 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5960 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5951 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex3DLod(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5952 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5956 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5967 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5958 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex3DLod(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5959 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5963 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5974 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5965 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex3DLod(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5966 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5970 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5981 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5972 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex3DLod(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5973 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5977 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5988 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5979 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex3DLod(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5980 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5984 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 5995 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5986 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex3DLod(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5987 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5991 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6002 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 5993 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex3DLod(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 5994 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 5998 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6009 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6008 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex3DLod(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6009 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6013 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6024 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6015 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex3DLod(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6016 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6020 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6031 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6022 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex3DLod(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6023 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6027 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6038 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6029 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex3DLod(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6030 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6034 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6045 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6036 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex3DLod(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6037 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6041 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6052 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6043 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex3DLod(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6044 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6048 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6059 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6050 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex3DLod(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6051 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6055 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6066 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6057 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex3DLod(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6058 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6062 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6073 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6072 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6073 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6077 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6088 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6079 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6080 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6084 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6095 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6086 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6087 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6091 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6102 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6093 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6094 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6098 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6109 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6106 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6107 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6116 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6129 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6118 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6119 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6124 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6137 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6126 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6127 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6132 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6145 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6134 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6135 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6140 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6153 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6142 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6143 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6148 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6161 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6150 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6151 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6156 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6169 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6158 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6159 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6164 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6177 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6166 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6167 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6172 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6185 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6174 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6175 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6180 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6193 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6188 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6189 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6194 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6207 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6196 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DLod(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6197 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6202 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6215 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6204 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6205 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6210 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6223 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6212 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DLod(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6213 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6218 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6231 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6220 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6221 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6226 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6239 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6228 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DLod(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6229 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6234 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6247 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6236 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6237 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6242 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6255 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6244 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DLod(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6245 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6250 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6263 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6258 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemapLod(texture< char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6259 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6267 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6278 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6269 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemapLod(texture< signed char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6270 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6274 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6285 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6276 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemapLod(texture< unsigned char, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6277 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6281 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6292 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6283 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemapLod(texture< char1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6284 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6288 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6299 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6290 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemapLod(texture< uchar1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6291 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6295 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6306 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6297 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemapLod(texture< char2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6298 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6302 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6313 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6304 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemapLod(texture< uchar2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6305 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6309 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6320 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6311 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemapLod(texture< char4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6312 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6316 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6327 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6318 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemapLod(texture< uchar4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6319 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6323 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6334 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6331 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemapLod(texture< short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6332 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6336 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6347 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6338 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemapLod(texture< unsigned short, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6339 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6343 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6354 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6345 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemapLod(texture< short1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6346 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6350 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6361 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6352 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemapLod(texture< ushort1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6353 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6357 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6368 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6359 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemapLod(texture< short2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6360 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6364 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6375 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6366 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemapLod(texture< ushort2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6367 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6371 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6382 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6373 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemapLod(texture< short4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6374 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6378 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6389 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6380 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemapLod(texture< ushort4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6381 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6385 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6396 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6393 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemapLod(texture< int, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6394 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6398 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6409 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6400 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemapLod(texture< unsigned, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6401 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6405 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6416 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6407 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemapLod(texture< int1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6408 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6412 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6423 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6414 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemapLod(texture< uint1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6415 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6419 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6430 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6421 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemapLod(texture< int2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6422 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6426 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6437 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6428 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemapLod(texture< uint2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6429 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6433 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6444 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6435 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemapLod(texture< int4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6436 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6440 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6451 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6442 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemapLod(texture< uint4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6443 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6447 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6458 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6457 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemapLod(texture< long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6458 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6462 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6473 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6464 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemapLod(texture< unsigned long, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6465 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6469 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6480 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6471 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemapLod(texture< long1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6472 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6476 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6487 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6478 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemapLod(texture< ulong1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6479 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6483 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6494 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6485 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemapLod(texture< long2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6486 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6490 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6501 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6492 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemapLod(texture< ulong2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6493 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6497 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6508 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6499 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemapLod(texture< long4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6500 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6504 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6515 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6506 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemapLod(texture< ulong4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6507 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6511 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6522 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6521 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< float, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6522 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6526 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6537 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6528 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< float1, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6529 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6533 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6544 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6535 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< float2, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6536 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6540 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6551 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6542 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< float4, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) 
#line 6543 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6547 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6558 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6555 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6556 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6565 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6578 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6567 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< signed char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6568 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6573 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6586 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6575 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< unsigned char, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6576 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6581 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6594 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6583 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< char1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6584 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6589 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6602 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6591 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< uchar1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6592 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6597 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6610 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6599 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< char2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6600 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6605 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6618 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6607 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< uchar2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6608 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6613 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6626 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6615 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< char4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6616 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6621 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6634 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6623 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< uchar4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6624 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6629 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6642 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6637 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6638 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6643 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6656 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6645 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLod(texture< unsigned short, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6646 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6651 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6664 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6653 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< short1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6654 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6659 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6672 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6661 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLod(texture< ushort1, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6662 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6667 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6680 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6669 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< short2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6670 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6675 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6688 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6677 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLod(texture< ushort2, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6678 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6683 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6696 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6685 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< short4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6686 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6691 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6704 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6693 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLod(texture< ushort4, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) 
#line 6694 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)level;
#line 6699 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 6712 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6707 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char texCubemapLayeredLod(texture< char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6708 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6716 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6727 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6718 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char texCubemapLayeredLod(texture< signed char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6719 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6723 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6734 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6725 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6726 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6730 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6741 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6732 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6733 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6737 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6748 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6739 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6740 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6744 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6755 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6746 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6747 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6751 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6762 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6753 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6754 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6758 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6769 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6760 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6761 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6765 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6776 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6767 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6768 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6772 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6783 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6780 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short texCubemapLayeredLod(texture< short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6781 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6785 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6796 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6787 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6788 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6792 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6803 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6794 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6795 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6799 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6810 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6801 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6802 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6806 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6817 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6808 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6809 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6813 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6824 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6815 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6816 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6820 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6831 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6822 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6823 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6827 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6838 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6829 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6830 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6834 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6845 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6842 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int texCubemapLayeredLod(texture< int, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6843 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6847 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6858 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6849 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned texCubemapLayeredLod(texture< unsigned, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6850 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6854 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6865 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6856 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 texCubemapLayeredLod(texture< int1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6857 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6861 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6872 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6863 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 texCubemapLayeredLod(texture< uint1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6864 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6868 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6879 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6870 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 texCubemapLayeredLod(texture< int2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6871 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6875 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6886 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6877 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 texCubemapLayeredLod(texture< uint2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6878 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6882 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6893 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6884 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 texCubemapLayeredLod(texture< int4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6885 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6889 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6900 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6891 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 texCubemapLayeredLod(texture< uint4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6892 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6896 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6907 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6906 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long texCubemapLayeredLod(texture< long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6907 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6911 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6922 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6913 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long texCubemapLayeredLod(texture< unsigned long, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6914 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6918 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6929 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6920 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 texCubemapLayeredLod(texture< long1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6921 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6925 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6936 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6927 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 texCubemapLayeredLod(texture< ulong1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6928 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6932 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6943 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6934 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 texCubemapLayeredLod(texture< long2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6935 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6939 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6950 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6941 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 texCubemapLayeredLod(texture< ulong2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6942 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6946 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6957 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6948 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 texCubemapLayeredLod(texture< long4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6949 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6953 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6964 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6955 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 texCubemapLayeredLod(texture< ulong4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6956 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6960 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6971 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6970 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< float, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6971 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6975 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6986 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6977 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< float1, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6978 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6982 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 6993 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6984 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< float2, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6985 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6989 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7000 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 6991 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< float4, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) 
#line 6992 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 6996 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7007 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7004 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7005 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7014 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7027 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7016 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< signed char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7017 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7022 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7035 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7024 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< unsigned char, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7025 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7030 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7043 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7032 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< char1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7033 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7038 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7051 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7040 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< uchar1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7041 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7046 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7059 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7048 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< char2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7049 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7054 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7067 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7056 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< uchar2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7057 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7062 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7075 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7064 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< char4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7065 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7070 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7083 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7072 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< uchar4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7073 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7078 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7091 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7086 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7087 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7092 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7105 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7094 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float texCubemapLayeredLod(texture< unsigned short, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7095 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7100 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7113 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7102 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< short1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7103 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7108 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7121 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7110 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 texCubemapLayeredLod(texture< ushort1, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7111 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7116 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7129 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7118 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< short2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7119 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7124 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7137 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7126 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 texCubemapLayeredLod(texture< ushort2, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7127 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7132 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7145 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7134 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< short4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7135 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7140 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7153 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7142 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 texCubemapLayeredLod(texture< ushort4, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) 
#line 7143 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 7148 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7161 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7157 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DGrad(texture< char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7158 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7166 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7177 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7168 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DGrad(texture< signed char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7169 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7173 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7184 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7175 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DGrad(texture< unsigned char, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7176 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7180 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7191 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7182 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DGrad(texture< char1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7183 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7187 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7198 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7189 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DGrad(texture< uchar1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7190 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7194 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7205 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7196 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DGrad(texture< char2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7197 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7201 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7212 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7203 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DGrad(texture< uchar2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7204 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7208 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7219 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7210 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DGrad(texture< char4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7211 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7215 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7226 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7217 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DGrad(texture< uchar4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7218 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7222 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7233 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7230 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DGrad(texture< short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7231 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7235 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7246 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7237 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DGrad(texture< unsigned short, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7238 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7242 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7253 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7244 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DGrad(texture< short1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7245 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7249 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7260 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7251 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DGrad(texture< ushort1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7252 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7256 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7267 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7258 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DGrad(texture< short2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7259 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7263 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7274 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7265 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DGrad(texture< ushort2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7266 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7270 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7281 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7272 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DGrad(texture< short4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7273 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7277 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7288 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7279 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DGrad(texture< ushort4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7280 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7284 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7295 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7292 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DGrad(texture< int, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7293 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7297 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7308 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7299 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DGrad(texture< unsigned, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7300 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7304 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7315 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7306 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DGrad(texture< int1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7307 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7311 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7322 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7313 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DGrad(texture< uint1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7314 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7318 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7329 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7320 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DGrad(texture< int2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7321 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7325 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7336 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7327 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DGrad(texture< uint2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7328 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7332 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7343 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7334 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DGrad(texture< int4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7335 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7339 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7350 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7341 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DGrad(texture< uint4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7342 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7346 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7357 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7362 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DGrad(texture< long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7363 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7367 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7378 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7369 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DGrad(texture< unsigned long, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7370 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7374 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7385 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7376 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DGrad(texture< long1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7377 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7381 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7392 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7383 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DGrad(texture< ulong1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7384 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7388 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7399 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7390 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DGrad(texture< long2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7391 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7395 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7406 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7397 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DGrad(texture< ulong2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7398 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7402 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7413 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7404 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DGrad(texture< long4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7405 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7409 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7420 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7411 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DGrad(texture< ulong4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7412 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7416 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7427 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7426 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< float, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7427 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7431 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7442 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7433 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< float1, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7434 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7438 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7449 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7440 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< float2, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7441 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7445 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7456 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7447 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< float4, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) 
#line 7448 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7452 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7463 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7460 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7461 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7470 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7483 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7472 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< signed char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7473 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7478 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7491 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7480 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< unsigned char, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7481 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7486 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7499 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7488 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< char1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7489 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7494 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7507 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7496 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< uchar1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7497 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7502 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7515 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7504 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< char2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7505 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7510 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7523 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7512 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< uchar2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7513 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7518 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7531 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7520 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< char4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7521 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7526 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7539 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7528 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< uchar4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7529 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7534 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7547 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7542 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7543 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7548 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7561 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7550 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DGrad(texture< unsigned short, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7551 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7556 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7569 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7558 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< short1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7559 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7564 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7577 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7566 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DGrad(texture< ushort1, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7567 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7572 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7585 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7574 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< short2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7575 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7580 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7593 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7582 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DGrad(texture< ushort2, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7583 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7588 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7601 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7590 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< short4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7591 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7596 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7609 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7598 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DGrad(texture< ushort4, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) 
#line 7599 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)dPdx;(void)dPdy;
#line 7604 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7617 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7612 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DGrad(texture< char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7613 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7621 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7632 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7623 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DGrad(texture< signed char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7624 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7628 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7639 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7630 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DGrad(texture< unsigned char, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7631 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7635 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7646 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7637 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DGrad(texture< char1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7638 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7642 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7653 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7644 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DGrad(texture< uchar1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7645 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7649 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7660 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7651 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DGrad(texture< char2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7652 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7656 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7667 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7658 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DGrad(texture< uchar2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7659 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7663 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7674 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7665 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DGrad(texture< char4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7666 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7670 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7681 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7672 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DGrad(texture< uchar4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7673 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7677 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7688 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7685 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DGrad(texture< short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7686 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7690 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7701 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7692 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DGrad(texture< unsigned short, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7693 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7697 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7708 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7699 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DGrad(texture< short1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7700 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7704 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7715 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7706 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DGrad(texture< ushort1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7707 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7711 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7722 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7713 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DGrad(texture< short2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7714 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7718 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7729 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7720 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DGrad(texture< ushort2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7721 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7725 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7736 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7727 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DGrad(texture< short4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7728 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7732 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7743 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7734 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DGrad(texture< ushort4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7735 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7739 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7750 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7747 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DGrad(texture< int, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7748 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7752 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7763 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7754 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DGrad(texture< unsigned, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7755 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7759 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7770 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7761 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DGrad(texture< int1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7762 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7766 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7777 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7768 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DGrad(texture< uint1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7769 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7773 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7784 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7775 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DGrad(texture< int2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7776 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7780 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7791 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7782 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DGrad(texture< uint2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7783 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7787 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7798 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7789 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DGrad(texture< int4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7790 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7794 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7805 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7796 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DGrad(texture< uint4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7797 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7801 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7812 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7811 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DGrad(texture< long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7812 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7816 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7827 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7818 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DGrad(texture< unsigned long, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7819 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7823 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7834 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7825 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DGrad(texture< long1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7826 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7830 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7841 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7832 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DGrad(texture< ulong1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7833 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7837 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7848 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7839 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DGrad(texture< long2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7840 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7844 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7855 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7846 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DGrad(texture< ulong2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7847 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7851 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7862 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7853 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DGrad(texture< long4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7854 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7858 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7869 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7860 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DGrad(texture< ulong4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7861 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7865 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7876 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7875 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< float, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7876 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7880 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7891 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7882 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< float1, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7883 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7887 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7898 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7889 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< float2, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7890 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7894 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7905 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7896 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< float4, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7897 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7901 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 7912 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7909 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7910 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7919 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7932 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7921 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< signed char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7922 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7927 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7940 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7929 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< unsigned char, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7930 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7935 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7948 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7937 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< char1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7938 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7943 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7956 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7945 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< uchar1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7946 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7951 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7964 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7953 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< char2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7954 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7959 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7972 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7961 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< uchar2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7962 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7967 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7980 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7969 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< char4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7970 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7975 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7988 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7977 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< uchar4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7978 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7983 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 7996 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7991 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 7992 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 7997 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8010 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 7999 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DGrad(texture< unsigned short, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8000 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8005 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8018 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8007 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< short1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8008 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8013 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8026 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8015 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DGrad(texture< ushort1, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8016 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8021 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8034 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8023 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< short2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8024 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8029 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8042 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8031 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DGrad(texture< ushort2, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8032 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8037 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8050 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8039 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< short4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8040 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8045 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8058 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8047 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DGrad(texture< ushort4, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) 
#line 8048 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 8053 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8066 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8061 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex1DLayeredGrad(texture< char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8062 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8070 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8081 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8072 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex1DLayeredGrad(texture< signed char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8073 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8077 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8088 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8079 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8080 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8084 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8095 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8086 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8087 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8091 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8102 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8093 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8094 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8098 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8109 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8100 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8101 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8105 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8116 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8107 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8108 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8112 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8123 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8114 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8115 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8119 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8130 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8121 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8122 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8126 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8137 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8134 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex1DLayeredGrad(texture< short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8135 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8139 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8150 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8141 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8142 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8146 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8157 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8148 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8149 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8153 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8164 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8155 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8156 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8160 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8171 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8162 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8163 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8167 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8178 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8169 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8170 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8174 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8185 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8176 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8177 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8181 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8192 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8183 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8184 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8188 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8199 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8196 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex1DLayeredGrad(texture< int, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8197 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8201 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8212 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8203 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex1DLayeredGrad(texture< unsigned, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8204 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8208 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8219 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8210 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex1DLayeredGrad(texture< int1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8211 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8215 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8226 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8217 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex1DLayeredGrad(texture< uint1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8218 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8222 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8233 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8224 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex1DLayeredGrad(texture< int2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8225 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8229 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8240 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8231 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex1DLayeredGrad(texture< uint2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8232 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8236 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8247 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8238 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex1DLayeredGrad(texture< int4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8239 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8243 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8254 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8245 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex1DLayeredGrad(texture< uint4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8246 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8250 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8261 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8260 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex1DLayeredGrad(texture< long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8261 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8265 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8276 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8267 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex1DLayeredGrad(texture< unsigned long, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8268 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8272 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8283 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8274 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex1DLayeredGrad(texture< long1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8275 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8279 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8290 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8281 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex1DLayeredGrad(texture< ulong1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8282 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8286 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8297 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8288 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex1DLayeredGrad(texture< long2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8289 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8293 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8304 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8295 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex1DLayeredGrad(texture< ulong2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8296 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8300 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8311 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8302 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex1DLayeredGrad(texture< long4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8303 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8307 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8318 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8309 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex1DLayeredGrad(texture< ulong4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8310 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8314 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8325 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8324 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< float, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8325 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8329 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8340 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8331 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< float1, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8332 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8336 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8347 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8338 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< float2, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8339 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8343 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8354 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8345 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< float4, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) 
#line 8346 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8350 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8361 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8358 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8359 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8368 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8381 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8370 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< signed char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8371 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8376 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8389 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8378 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< unsigned char, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8379 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8384 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8397 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8386 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< char1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8387 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8392 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8405 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8394 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< uchar1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8395 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8400 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8413 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8402 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< char2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8403 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8408 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8421 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8410 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< uchar2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8411 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8416 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8429 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8418 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< char4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8419 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8424 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8437 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8426 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< uchar4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8427 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8432 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8445 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8440 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8441 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8446 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8459 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8448 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex1DLayeredGrad(texture< unsigned short, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8449 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8454 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8467 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8456 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< short1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8457 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8462 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8475 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8464 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex1DLayeredGrad(texture< ushort1, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8465 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8470 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8483 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8472 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< short2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8473 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8478 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8491 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8480 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex1DLayeredGrad(texture< ushort2, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8481 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8486 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8499 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8488 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< short4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8489 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8494 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8507 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8496 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex1DLayeredGrad(texture< ushort4, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) 
#line 8497 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 8502 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8515 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8510 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex2DLayeredGrad(texture< char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8511 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8519 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8530 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8521 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex2DLayeredGrad(texture< signed char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8522 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8526 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8537 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8528 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8529 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8533 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8544 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8535 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8536 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8540 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8551 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8542 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8543 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8547 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8558 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8549 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8550 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8554 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8565 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8556 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8557 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8561 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8572 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8563 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8564 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8568 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8579 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8570 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8571 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8575 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8586 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8583 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex2DLayeredGrad(texture< short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8584 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8588 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8599 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8590 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8591 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8595 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8606 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8597 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8598 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8602 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8613 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8604 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8605 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8609 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8620 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8611 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8612 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8616 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8627 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8618 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8619 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8623 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8634 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8625 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8626 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8630 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8641 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8632 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8633 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8637 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8648 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8645 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex2DLayeredGrad(texture< int, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8646 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8650 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8661 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8652 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex2DLayeredGrad(texture< unsigned, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8653 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8657 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8668 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8659 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex2DLayeredGrad(texture< int1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8660 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8664 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8675 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8666 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex2DLayeredGrad(texture< uint1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8667 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8671 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8682 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8673 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex2DLayeredGrad(texture< int2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8674 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8678 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8689 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8680 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex2DLayeredGrad(texture< uint2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8681 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8685 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8696 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8687 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex2DLayeredGrad(texture< int4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8688 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8692 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8703 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8694 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex2DLayeredGrad(texture< uint4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8695 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8699 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8710 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8709 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex2DLayeredGrad(texture< long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8710 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8714 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8725 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8716 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex2DLayeredGrad(texture< unsigned long, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8717 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8721 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8732 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8723 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex2DLayeredGrad(texture< long1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8724 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8728 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8739 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8730 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex2DLayeredGrad(texture< ulong1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8731 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8735 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8746 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8737 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex2DLayeredGrad(texture< long2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8738 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8742 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8753 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8744 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex2DLayeredGrad(texture< ulong2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8745 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8749 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8760 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8751 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex2DLayeredGrad(texture< long4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8752 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8756 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8767 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8758 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex2DLayeredGrad(texture< ulong4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8759 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8763 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8774 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8773 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< float, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8774 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8778 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8789 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8780 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< float1, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8781 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8785 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8796 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8787 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< float2, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8788 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8792 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8803 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8794 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< float4, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8795 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8799 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8810 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8807 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8808 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8817 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8830 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8819 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< signed char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8820 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8825 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8838 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8827 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< unsigned char, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8828 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8833 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8846 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8835 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< char1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8836 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8841 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8854 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8843 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< uchar1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8844 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8849 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8862 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8851 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< char2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8852 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8857 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8870 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8859 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< uchar2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8860 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8865 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8878 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8867 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< char4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8868 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8873 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8886 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8875 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< uchar4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8876 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8881 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8894 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8889 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8890 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8895 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8908 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8897 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex2DLayeredGrad(texture< unsigned short, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8898 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8903 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8916 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8905 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< short1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8906 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8911 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8924 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8913 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex2DLayeredGrad(texture< ushort1, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8914 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8919 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8932 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8921 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< short2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8922 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8927 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8940 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8929 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex2DLayeredGrad(texture< ushort2, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8930 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8935 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8948 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8937 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< short4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8938 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8943 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8956 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8945 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex2DLayeredGrad(texture< ushort4, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 8946 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 8951 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 8964 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8959 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char tex3DGrad(texture< char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8960 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8968 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8979 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8970 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline signed char tex3DGrad(texture< signed char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8971 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8975 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8986 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8977 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned char tex3DGrad(texture< unsigned char, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8978 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8982 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 8993 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8984 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char1 tex3DGrad(texture< char1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8985 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8989 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9000 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8991 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar1 tex3DGrad(texture< uchar1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8992 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 8996 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9007 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 8998 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char2 tex3DGrad(texture< char2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 8999 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9003 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9014 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9005 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar2 tex3DGrad(texture< uchar2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9006 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9010 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9021 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9012 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline char4 tex3DGrad(texture< char4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9013 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9017 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9028 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9019 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uchar4 tex3DGrad(texture< uchar4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9020 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9024 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9035 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9032 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short tex3DGrad(texture< short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9033 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9037 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9048 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9039 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned short tex3DGrad(texture< unsigned short, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9040 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9044 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9055 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9046 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short1 tex3DGrad(texture< short1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9047 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9051 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9062 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9053 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort1 tex3DGrad(texture< ushort1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9054 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9058 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9069 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9060 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short2 tex3DGrad(texture< short2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9061 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9065 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9076 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9067 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort2 tex3DGrad(texture< ushort2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9068 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9072 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9083 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9074 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline short4 tex3DGrad(texture< short4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9075 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9079 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9090 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9081 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ushort4 tex3DGrad(texture< ushort4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9082 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9086 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9097 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9094 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int tex3DGrad(texture< int, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9095 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9099 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9110 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9101 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned tex3DGrad(texture< unsigned, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9102 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9106 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9117 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9108 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int1 tex3DGrad(texture< int1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9109 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9113 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9124 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9115 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint1 tex3DGrad(texture< uint1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9116 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9120 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9131 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9122 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int2 tex3DGrad(texture< int2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9123 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9127 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9138 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9129 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint2 tex3DGrad(texture< uint2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9130 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9134 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9145 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9136 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline int4 tex3DGrad(texture< int4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9137 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9141 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9152 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9143 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline uint4 tex3DGrad(texture< uint4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9144 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9148 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9159 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9158 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long tex3DGrad(texture< long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9159 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9163 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9174 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9165 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline unsigned long tex3DGrad(texture< unsigned long, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9166 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9170 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9181 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9172 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long1 tex3DGrad(texture< long1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9173 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9177 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9188 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9179 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong1 tex3DGrad(texture< ulong1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9180 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9184 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9195 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9186 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long2 tex3DGrad(texture< long2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9187 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9191 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9202 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9193 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong2 tex3DGrad(texture< ulong2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9194 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9198 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9209 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9200 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline long4 tex3DGrad(texture< long4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9201 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9205 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9216 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9207 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline ulong4 tex3DGrad(texture< ulong4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9208 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9212 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9223 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9222 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< float, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9223 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9227 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9238 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9229 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< float1, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9230 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9234 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9245 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9236 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< float2, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9237 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9241 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9252 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9243 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< float4, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9244 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9248 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}









#line 9259 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9256 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9257 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9266 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9279 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9268 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< signed char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9269 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9274 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9287 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9276 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< unsigned char, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9277 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9282 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9295 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9284 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< char1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9285 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9290 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9303 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9292 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< uchar1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9293 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9298 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9311 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9300 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< char2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9301 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9306 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9319 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9308 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< uchar2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9309 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9314 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9327 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9316 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< char4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9317 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9322 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9335 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9324 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< uchar4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9325 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9330 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9343 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9338 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9339 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9344 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9357 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9346 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float tex3DGrad(texture< unsigned short, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9347 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9352 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9365 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9354 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< short1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9355 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9360 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9373 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9362 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float1 tex3DGrad(texture< ushort1, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9363 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9368 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9381 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9370 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< short2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9371 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9376 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9389 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9378 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float2 tex3DGrad(texture< ushort2, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9379 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9384 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9397 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9386 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< short4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9387 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9392 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9405 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 9394 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
static __forceinline float4 tex3DGrad(texture< ushort4, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 9395 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
{int volatile ___ = 1;(void)t;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 9400 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
::exit(___);}











#line 9413 "e:\\cudatoolkit\\include\\texture_fetch_functions.hpp"
#line 70 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4f32_s32(cudaTextureObject_t, int, float *, float *, float *, float *); } 
#line 71 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4f32_f32(cudaTextureObject_t, float, float *, float *, float *, float *); } 
#line 72 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_level_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 73 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 74 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4s32_s32(cudaTextureObject_t, int, int *, int *, int *, int *); } 
#line 75 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4s32_f32(cudaTextureObject_t, float, int *, int *, int *, int *); } 
#line 76 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_level_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 77 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 78 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4u32_s32(cudaTextureObject_t, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 79 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_v4u32_f32(cudaTextureObject_t, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 80 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_level_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 81 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 83 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4f32_s32(cudaTextureObject_t, int, int, float *, float *, float *, float *); } 
#line 84 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4f32_f32(cudaTextureObject_t, int, float, float *, float *, float *, float *); } 
#line 85 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float *, float *, float *, float *); } 
#line 86 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_grad_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); } 
#line 87 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4s32_s32(cudaTextureObject_t, int, int, int *, int *, int *, int *); } 
#line 88 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4s32_f32(cudaTextureObject_t, int, float, int *, int *, int *, int *); } 
#line 89 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, int *, int *, int *, int *); } 
#line 90 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_grad_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); } 
#line 91 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4u32_s32(cudaTextureObject_t, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 92 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_v4u32_f32(cudaTextureObject_t, int, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 93 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 94 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_1d_array_grad_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 96 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4f32_s32(cudaTextureObject_t, int, int, float *, float *, float *, float *); } 
#line 97 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 98 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_level_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 99 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float, float, float, float *, float *, float *, float *); } 
#line 100 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4s32_s32(cudaTextureObject_t, int, int, int *, int *, int *, int *); } 
#line 101 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 102 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_level_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 103 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, float, float, float, int *, int *, int *, int *); } 
#line 104 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4u32_s32(cudaTextureObject_t, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 105 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 106 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_level_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 107 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 109 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4f32_s32(cudaTextureObject_t, int, int, int, float *, float *, float *, float *); } 
#line 110 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4f32_f32(cudaTextureObject_t, int, float, float, float *, float *, float *, float *); } 
#line 111 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); } 
#line 112 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_grad_v4f32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, float *, float *, float *, float *); } 
#line 113 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4s32_s32(cudaTextureObject_t, int, int, int, int *, int *, int *, int *); } 
#line 114 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4s32_f32(cudaTextureObject_t, int, float, float, int *, int *, int *, int *); } 
#line 115 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); } 
#line 116 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_grad_v4s32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, int *, int *, int *, int *); } 
#line 117 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4u32_s32(cudaTextureObject_t, int, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 118 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_v4u32_f32(cudaTextureObject_t, int, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 119 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 120 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_2d_array_grad_v4u32_f32(cudaTextureObject_t, int, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 122 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4f32_s32(cudaTextureObject_t, int, int, int, float *, float *, float *, float *); } 
#line 123 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 124 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_level_v4f32_f32(cudaTextureObject_t, float, float, float, float, float *, float *, float *, float *); } 
#line 125 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_grad_v4f32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, float *, float *, float *, float *); } 
#line 126 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4s32_s32(cudaTextureObject_t, int, int, int, int *, int *, int *, int *); } 
#line 127 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 128 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_level_v4s32_f32(cudaTextureObject_t, float, float, float, float, int *, int *, int *, int *); } 
#line 129 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_grad_v4s32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, int *, int *, int *, int *); } 
#line 130 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4u32_s32(cudaTextureObject_t, int, int, int, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 131 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 132 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_level_v4u32_f32(cudaTextureObject_t, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 133 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_3d_grad_v4u32_f32(cudaTextureObject_t, float, float, float, float, float, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 135 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_v4f32_f32(cudaTextureObject_t, float, float, float, float *, float *, float *, float *); } 
#line 136 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_level_v4f32_f32(cudaTextureObject_t, float, float, float, float, float *, float *, float *, float *); } 
#line 137 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_v4s32_f32(cudaTextureObject_t, float, float, float, int *, int *, int *, int *); } 
#line 138 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_level_v4s32_f32(cudaTextureObject_t, float, float, float, float, int *, int *, int *, int *); } 
#line 139 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_v4u32_f32(cudaTextureObject_t, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 140 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_level_v4u32_f32(cudaTextureObject_t, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 142 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_v4f32_f32(cudaTextureObject_t, int, float, float, float, float *, float *, float *, float *); } 
#line 143 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_level_v4f32_f32(cudaTextureObject_t, int, float, float, float, float, float *, float *, float *, float *); } 
#line 144 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_v4s32_f32(cudaTextureObject_t, int, float, float, float, int *, int *, int *, int *); } 
#line 145 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_level_v4s32_f32(cudaTextureObject_t, int, float, float, float, float, int *, int *, int *, int *); } 
#line 146 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_v4u32_f32(cudaTextureObject_t, int, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 147 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tex_cube_array_level_v4u32_f32(cudaTextureObject_t, int, float, float, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 149 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_r_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 150 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_g_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 151 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_b_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 152 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_a_2d_v4f32_f32(cudaTextureObject_t, float, float, float *, float *, float *, float *); } 
#line 153 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_r_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 154 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_g_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 155 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_b_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 156 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_a_2d_v4s32_f32(cudaTextureObject_t, float, float, int *, int *, int *, int *); } 
#line 157 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_r_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 158 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_g_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 159 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_b_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 160 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
extern "C" { void __tld4_a_2d_v4u32_f32(cudaTextureObject_t, float, float, unsigned *, unsigned *, unsigned *, unsigned *); } 
#line 169 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char * retVal, cudaTextureObject_t texObject, int x); 
#line 170 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(signed char * retVal, cudaTextureObject_t texObject, int x); 
#line 172 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char1 * retVal, cudaTextureObject_t texObject, int x); 
#line 174 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char2 * retVal, cudaTextureObject_t texObject, int x); 
#line 176 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(char4 * retVal, cudaTextureObject_t texObject, int x); 
#line 178 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned char * retVal, cudaTextureObject_t texObject, int x); 
#line 180 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar1 * retVal, cudaTextureObject_t texObject, int x); 
#line 182 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar2 * retVal, cudaTextureObject_t texObject, int x); 
#line 184 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uchar4 * retVal, cudaTextureObject_t texObject, int x); 
#line 192 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short * retVal, cudaTextureObject_t texObject, int x); 
#line 194 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short1 * retVal, cudaTextureObject_t texObject, int x); 
#line 196 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short2 * retVal, cudaTextureObject_t texObject, int x); 
#line 198 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(short4 * retVal, cudaTextureObject_t texObject, int x); 
#line 200 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned short * retVal, cudaTextureObject_t texObject, int x); 
#line 202 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort1 * retVal, cudaTextureObject_t texObject, int x); 
#line 204 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort2 * retVal, cudaTextureObject_t texObject, int x); 
#line 206 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ushort4 * retVal, cudaTextureObject_t texObject, int x); 
#line 214 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int * retVal, cudaTextureObject_t texObject, int x); 
#line 216 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int1 * retVal, cudaTextureObject_t texObject, int x); 
#line 218 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int2 * retVal, cudaTextureObject_t texObject, int x); 
#line 220 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(int4 * retVal, cudaTextureObject_t texObject, int x); 
#line 222 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned * retVal, cudaTextureObject_t texObject, int x); 
#line 224 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint1 * retVal, cudaTextureObject_t texObject, int x); 
#line 226 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint2 * retVal, cudaTextureObject_t texObject, int x); 
#line 228 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(uint4 * retVal, cudaTextureObject_t texObject, int x); 
#line 238 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long * retVal, cudaTextureObject_t texObject, int x); 
#line 240 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long1 * retVal, cudaTextureObject_t texObject, int x); 
#line 242 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long2 * retVal, cudaTextureObject_t texObject, int x); 
#line 244 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(long4 * retVal, cudaTextureObject_t texObject, int x); 
#line 246 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(unsigned long * retVal, cudaTextureObject_t texObject, int x); 
#line 248 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong1 * retVal, cudaTextureObject_t texObject, int x); 
#line 250 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong2 * retVal, cudaTextureObject_t texObject, int x); 
#line 252 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(ulong4 * retVal, cudaTextureObject_t texObject, int x); 
#line 263 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float * retVal, cudaTextureObject_t texObject, int x); 
#line 265 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float1 * retVal, cudaTextureObject_t texObject, int x); 
#line 267 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float2 * retVal, cudaTextureObject_t texObject, int x); 
#line 269 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1Dfetch(float4 * retVal, cudaTextureObject_t texObject, int x); 
#line 277 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 278 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex1Dfetch(::cudaTextureObject_t texObject, int x) 
#line 279 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
#line 283 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 296 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 291 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char * retVal, cudaTextureObject_t texObject, float x); 
#line 292 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(signed char * retVal, cudaTextureObject_t texObject, float x); 
#line 294 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char1 * retVal, cudaTextureObject_t texObject, float x); 
#line 296 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char2 * retVal, cudaTextureObject_t texObject, float x); 
#line 298 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(char4 * retVal, cudaTextureObject_t texObject, float x); 
#line 300 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned char * retVal, cudaTextureObject_t texObject, float x); 
#line 302 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar1 * retVal, cudaTextureObject_t texObject, float x); 
#line 304 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar2 * retVal, cudaTextureObject_t texObject, float x); 
#line 306 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uchar4 * retVal, cudaTextureObject_t texObject, float x); 
#line 314 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short * retVal, cudaTextureObject_t texObject, float x); 
#line 316 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short1 * retVal, cudaTextureObject_t texObject, float x); 
#line 318 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short2 * retVal, cudaTextureObject_t texObject, float x); 
#line 320 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(short4 * retVal, cudaTextureObject_t texObject, float x); 
#line 322 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned short * retVal, cudaTextureObject_t texObject, float x); 
#line 324 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort1 * retVal, cudaTextureObject_t texObject, float x); 
#line 326 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort2 * retVal, cudaTextureObject_t texObject, float x); 
#line 328 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ushort4 * retVal, cudaTextureObject_t texObject, float x); 
#line 336 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int * retVal, cudaTextureObject_t texObject, float x); 
#line 338 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int1 * retVal, cudaTextureObject_t texObject, float x); 
#line 340 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int2 * retVal, cudaTextureObject_t texObject, float x); 
#line 342 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(int4 * retVal, cudaTextureObject_t texObject, float x); 
#line 344 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned * retVal, cudaTextureObject_t texObject, float x); 
#line 346 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint1 * retVal, cudaTextureObject_t texObject, float x); 
#line 348 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint2 * retVal, cudaTextureObject_t texObject, float x); 
#line 350 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(uint4 * retVal, cudaTextureObject_t texObject, float x); 
#line 360 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long * retVal, cudaTextureObject_t texObject, float x); 
#line 362 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long1 * retVal, cudaTextureObject_t texObject, float x); 
#line 364 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long2 * retVal, cudaTextureObject_t texObject, float x); 
#line 366 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(long4 * retVal, cudaTextureObject_t texObject, float x); 
#line 368 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(unsigned long * retVal, cudaTextureObject_t texObject, float x); 
#line 370 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong1 * retVal, cudaTextureObject_t texObject, float x); 
#line 372 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong2 * retVal, cudaTextureObject_t texObject, float x); 
#line 374 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(ulong4 * retVal, cudaTextureObject_t texObject, float x); 
#line 385 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float * retVal, cudaTextureObject_t texObject, float x); 
#line 387 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float1 * retVal, cudaTextureObject_t texObject, float x); 
#line 389 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float2 * retVal, cudaTextureObject_t texObject, float x); 
#line 391 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1D(float4 * retVal, cudaTextureObject_t texObject, float x); 
#line 399 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 400 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex1D(::cudaTextureObject_t texObject, float x) 
#line 401 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
#line 405 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 418 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 413 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 414 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(signed char * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 416 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 418 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 420 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(char4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 422 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 424 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 426 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 428 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 436 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 438 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 440 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 442 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(short4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 444 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 446 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 448 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 450 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 458 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 460 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 462 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 464 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(int4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 466 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 468 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 470 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 472 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(uint4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 482 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 484 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 486 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 488 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(long4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 490 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 492 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 494 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 496 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 507 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 509 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float1 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 511 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float2 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 513 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2D(float4 * retVal, cudaTextureObject_t texObject, float x, float y); 
#line 521 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 522 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex2D(::cudaTextureObject_t texObject, float x, float y) 
#line 523 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
#line 527 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 540 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 535 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 536 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 538 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 540 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 542 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 544 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 546 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 548 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 550 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 558 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 560 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 562 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 564 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 566 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 568 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 570 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 572 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 580 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 582 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 584 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 586 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 588 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 590 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 592 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 594 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 604 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 606 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 608 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 610 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 612 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 614 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 616 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 618 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 629 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 631 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 633 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 635 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3D(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 643 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 644 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex3D(::cudaTextureObject_t texObject, float x, float y, float z) 
#line 645 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
#line 649 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 662 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 657 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 658 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(signed char * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 660 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 662 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 664 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(char4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 666 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 668 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 670 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 672 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 680 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 682 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 684 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 686 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(short4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 688 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 690 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 692 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 694 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 702 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 704 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 706 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 708 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(int4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 710 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 712 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 714 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 716 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 726 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 728 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 730 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 732 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(long4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 734 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(unsigned long * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 736 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 738 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 740 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(ulong4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 751 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 753 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float1 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 755 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float2 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 757 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayered(float4 * retVal, cudaTextureObject_t texObject, float x, int layer); 
#line 765 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 766 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex1DLayered(::cudaTextureObject_t texObject, float x, int layer) 
#line 767 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
#line 771 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 784 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 779 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 780 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 782 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 784 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 786 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 788 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 790 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 792 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 794 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 802 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 804 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 806 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 808 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 810 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 812 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 814 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 816 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 824 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 826 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 828 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 830 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 832 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 834 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 836 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 838 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 848 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 850 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 852 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 854 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 856 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 858 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 860 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 862 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 873 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 875 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 877 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 879 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayered(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer); 
#line 887 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 888 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex2DLayered(::cudaTextureObject_t texObject, float x, float y, int layer) 
#line 889 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
#line 893 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 906 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 901 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 902 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 904 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 906 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 908 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 910 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 912 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 914 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 916 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 924 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 926 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 928 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 930 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 932 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 934 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 936 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 938 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 946 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 948 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 950 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 952 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 954 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 956 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 958 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 960 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 970 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 972 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 974 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 976 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 978 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 980 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 982 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 984 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 995 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 997 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 999 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 1001 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemap(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z); 
#line 1009 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1010 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
texCubemap(::cudaTextureObject_t texObject, float x, float y, float z) 
#line 1011 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
#line 1015 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1028 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 1023 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1024 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1026 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1028 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1030 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1032 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1034 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1036 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1038 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1046 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1048 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1050 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1052 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1054 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1056 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1058 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1060 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1068 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1070 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1072 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1074 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1076 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1078 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1080 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1082 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1092 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1094 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1096 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1098 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1100 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1102 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1104 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1106 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1117 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1119 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1121 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1123 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayered(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer); 
#line 1131 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1132 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
texCubemapLayered(::cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 1133 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 1137 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1150 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 1145 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1147 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1149 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1151 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1153 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1155 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1157 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1159 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1161 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1169 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1171 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1173 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1175 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1177 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1179 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1181 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1183 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1191 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1193 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1195 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1197 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1199 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1201 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1203 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1205 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1213 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1215 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1217 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1219 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1221 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1223 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1225 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1227 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1235 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1237 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1239 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1241 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2Dgather(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int comp = 0); 
#line 1249 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1250 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex2Dgather(::cudaTextureObject_t to, float x, float y, int comp = 0) 
#line 1251 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
#line 1255 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1268 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 1263 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1264 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1266 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1268 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1270 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1272 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1274 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1276 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1278 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1286 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1288 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1290 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1292 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1294 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1296 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1298 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1300 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1308 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1310 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1312 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1314 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1316 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1318 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1320 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1322 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1332 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1334 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1336 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1338 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(long4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1340 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1342 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1344 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1346 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1357 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1359 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1361 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1363 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float level); 
#line 1371 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1372 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex1DLod(::cudaTextureObject_t texObject, float x, float level) 
#line 1373 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
#line 1377 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1390 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 1385 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1386 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1388 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1390 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1392 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1394 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1396 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1398 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1400 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1408 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1410 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1412 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1414 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1416 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1418 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1420 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1422 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1430 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1432 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1434 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1436 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1438 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1440 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1442 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1444 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1454 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1456 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1458 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1460 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1462 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1464 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1466 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1468 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1479 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1481 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1483 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1485 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float level); 
#line 1493 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1494 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex2DLod(::cudaTextureObject_t texObject, float x, float y, float level) 
#line 1495 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
#line 1499 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1512 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 1507 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1508 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1510 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1512 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1514 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1516 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1518 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1520 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1522 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1530 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1532 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1534 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1536 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1538 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1540 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1542 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1544 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1552 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1554 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1556 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1558 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1560 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1562 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1564 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1566 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1576 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1578 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1580 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1582 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1584 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1586 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1588 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1590 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1601 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1603 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1605 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1607 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1615 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1616 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex3DLod(::cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 1617 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 1621 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1634 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 1629 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1630 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1632 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1634 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1636 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1638 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1640 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1642 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1644 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1652 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1654 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1656 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1658 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1660 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1662 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1664 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1666 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1674 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1676 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1678 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1680 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1682 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1684 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1686 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1688 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1698 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1700 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1702 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1704 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(long4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1706 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1708 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1710 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1712 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1723 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1725 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1727 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1729 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, int layer, float level); 
#line 1737 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1738 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex1DLayeredLod(::cudaTextureObject_t texObject, float x, int layer, float level) 
#line 1739 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
#line 1743 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1756 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 1751 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1752 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1754 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1756 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1758 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1760 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1762 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1764 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1766 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1774 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1776 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1778 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1780 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1782 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1784 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1786 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1788 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1796 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1798 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1800 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1802 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1804 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1806 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1808 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1810 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1820 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1822 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1824 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1826 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1828 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1830 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1832 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1834 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1845 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1847 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1849 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1851 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level); 
#line 1859 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1860 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex2DLayeredLod(::cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 1861 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 1865 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 1878 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 1873 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1874 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1876 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1878 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1880 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1882 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1884 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1886 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1888 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1896 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1898 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1900 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1902 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1904 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1906 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1908 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1910 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1918 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1920 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1922 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1924 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1926 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1928 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1930 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1932 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1942 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1944 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1946 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1948 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1950 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1952 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1954 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1956 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1967 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1969 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1971 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1973 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float level); 
#line 1981 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 1982 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
texCubemapLod(::cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 1983 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 1987 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2000 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 1995 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 1996 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 1998 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2000 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2002 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2004 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2006 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2008 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2010 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2018 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2020 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2022 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2024 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2026 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2028 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2030 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2032 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2040 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2042 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2044 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2046 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2048 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2050 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2052 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2054 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2064 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2066 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2068 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2070 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2072 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2074 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2076 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2078 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2089 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2091 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2093 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2095 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void texCubemapLayeredLod(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level); 
#line 2103 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2104 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
texCubemapLayeredLod(::cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 2105 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 2109 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2122 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 2117 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2118 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2120 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2122 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2124 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2126 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2128 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2130 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2132 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2140 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2142 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2144 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2146 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2148 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2150 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2152 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2154 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2162 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2164 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2166 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2168 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2170 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2172 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2174 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2176 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2186 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2188 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2190 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2192 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2194 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2196 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2198 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2200 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2211 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2213 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2215 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2217 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy); 
#line 2225 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2226 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex1DGrad(::cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 2227 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 2231 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2244 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 2239 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2240 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2242 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2244 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2246 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2248 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2250 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2252 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2254 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2262 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2264 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2266 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2268 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2270 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2272 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2274 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2276 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2284 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2286 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2288 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2290 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2292 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2294 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2296 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2298 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2308 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2310 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2312 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2314 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2316 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2318 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2320 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2322 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2333 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2335 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2337 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2339 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy); 
#line 2347 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2348 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex2DGrad(::cudaTextureObject_t texObject, float x, float y, ::float2 dPdx, ::float2 dPdy) 
#line 2349 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 2353 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2366 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 2361 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2362 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2364 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2366 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2368 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2370 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2372 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2374 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2376 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2384 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2386 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2388 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2390 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2392 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2394 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2396 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2398 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2406 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2408 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2410 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2412 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2414 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2416 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2418 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2420 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2430 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2432 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2434 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2436 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2438 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2440 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2442 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2444 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2455 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2457 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2459 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2461 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex3DGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy); 
#line 2469 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2470 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex3DGrad(::cudaTextureObject_t texObject, float x, float y, float z, ::float4 dPdx, ::float4 dPdy) 
#line 2471 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 2475 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2488 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 2483 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2484 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(signed char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2486 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2488 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2490 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(char4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2492 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2494 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2496 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2498 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2506 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2508 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2510 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2512 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(short4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2514 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2516 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2518 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2520 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2528 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2530 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2532 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2534 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(int4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2536 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2538 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2540 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2542 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2552 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2554 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2556 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2558 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(long4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2560 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2562 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2564 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2566 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2577 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2579 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float1 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2581 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float2 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2583 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex1DLayeredGrad(float4 * retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy); 
#line 2591 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2592 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex1DLayeredGrad(::cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 2593 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 2597 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2610 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 2605 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2606 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(signed char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2608 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2610 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2612 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(char4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2614 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned char * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2616 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2618 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2620 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uchar4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2628 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2630 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2632 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2634 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(short4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2636 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned short * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2638 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2640 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2642 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ushort4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2650 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2652 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2654 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2656 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(int4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2658 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2660 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2662 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2664 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(uint4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2674 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2676 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2678 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2680 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(long4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2682 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(unsigned long * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2684 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2686 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2688 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(ulong4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2699 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2701 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float1 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2703 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float2 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2705 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
static __forceinline void tex2DLayeredGrad(float4 * retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy); 
#line 2713 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
template< class T> static __forceinline T 
#line 2714 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
tex2DLayeredGrad(::cudaTextureObject_t texObject, float x, float y, int layer, ::float2 dPdx, ::float2 dPdy) 
#line 2715 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 2719 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
::exit(___);}











#line 2732 "e:\\cudatoolkit\\include\\texture_indirect_functions.h"
#line 75 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char *retVal, cudaTextureObject_t texObject, int x) 
#line 76 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 85 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 98 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 86 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(signed char *retVal, cudaTextureObject_t texObject, int x) 
#line 87 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 91 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 104 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 93 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char1 *retVal, cudaTextureObject_t texObject, int x) 
#line 94 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 98 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 111 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 100 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char2 *retVal, cudaTextureObject_t texObject, int x) 
#line 101 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 105 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 118 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 107 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(char4 *retVal, cudaTextureObject_t texObject, int x) 
#line 108 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 112 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 125 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 114 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned char *retVal, cudaTextureObject_t texObject, int x) 
#line 115 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 119 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 132 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 121 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uchar1 *retVal, cudaTextureObject_t texObject, int x) 
#line 122 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 126 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 139 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 128 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uchar2 *retVal, cudaTextureObject_t texObject, int x) 
#line 129 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 133 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 146 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 135 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uchar4 *retVal, cudaTextureObject_t texObject, int x) 
#line 136 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 140 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 153 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 148 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short *retVal, cudaTextureObject_t texObject, int x) 
#line 149 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 153 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 166 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 155 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short1 *retVal, cudaTextureObject_t texObject, int x) 
#line 156 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 160 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 173 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 162 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short2 *retVal, cudaTextureObject_t texObject, int x) 
#line 163 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 167 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 180 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 169 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(short4 *retVal, cudaTextureObject_t texObject, int x) 
#line 170 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 174 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 187 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 176 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned short *retVal, cudaTextureObject_t texObject, int x) 
#line 177 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 181 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 194 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 183 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ushort1 *retVal, cudaTextureObject_t texObject, int x) 
#line 184 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 188 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 201 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 190 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ushort2 *retVal, cudaTextureObject_t texObject, int x) 
#line 191 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 195 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 208 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 197 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ushort4 *retVal, cudaTextureObject_t texObject, int x) 
#line 198 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 202 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 215 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 210 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int *retVal, cudaTextureObject_t texObject, int x) 
#line 211 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 215 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 228 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 217 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int1 *retVal, cudaTextureObject_t texObject, int x) 
#line 218 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 222 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 235 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 224 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int2 *retVal, cudaTextureObject_t texObject, int x) 
#line 225 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 229 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 242 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 231 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(int4 *retVal, cudaTextureObject_t texObject, int x) 
#line 232 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 236 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 249 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 238 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned *retVal, cudaTextureObject_t texObject, int x) 
#line 239 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 243 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 256 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 245 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uint1 *retVal, cudaTextureObject_t texObject, int x) 
#line 246 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 250 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 263 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 252 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uint2 *retVal, cudaTextureObject_t texObject, int x) 
#line 253 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 257 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 270 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 259 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(uint4 *retVal, cudaTextureObject_t texObject, int x) 
#line 260 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 264 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 277 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 274 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long *retVal, cudaTextureObject_t texObject, int x) 
#line 275 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 279 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 292 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 281 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long1 *retVal, cudaTextureObject_t texObject, int x) 
#line 282 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 286 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 299 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 288 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long2 *retVal, cudaTextureObject_t texObject, int x) 
#line 289 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 293 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 306 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 295 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(long4 *retVal, cudaTextureObject_t texObject, int x) 
#line 296 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 300 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 313 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 302 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(unsigned long *retVal, cudaTextureObject_t texObject, int x) 
#line 303 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 307 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 320 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 309 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ulong1 *retVal, cudaTextureObject_t texObject, int x) 
#line 310 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 314 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 327 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 316 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ulong2 *retVal, cudaTextureObject_t texObject, int x) 
#line 317 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 321 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 334 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 323 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(ulong4 *retVal, cudaTextureObject_t texObject, int x) 
#line 324 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 328 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 341 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 339 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float *retVal, cudaTextureObject_t texObject, int x) 
#line 340 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 344 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 357 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 346 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float1 *retVal, cudaTextureObject_t texObject, int x) 
#line 347 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 351 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 364 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 353 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float2 *retVal, cudaTextureObject_t texObject, int x) 
#line 354 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 358 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 371 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 360 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1Dfetch(float4 *retVal, cudaTextureObject_t texObject, int x) 
#line 361 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 365 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 378 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 373 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char *retVal, cudaTextureObject_t texObject, float x) 
#line 374 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 383 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 396 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 384 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(signed char *retVal, cudaTextureObject_t texObject, float x) 
#line 385 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 389 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 402 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 391 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char1 *retVal, cudaTextureObject_t texObject, float x) 
#line 392 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 396 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 409 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 398 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char2 *retVal, cudaTextureObject_t texObject, float x) 
#line 399 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 403 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 416 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 405 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(char4 *retVal, cudaTextureObject_t texObject, float x) 
#line 406 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 410 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 423 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 412 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned char *retVal, cudaTextureObject_t texObject, float x) 
#line 413 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 417 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 430 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 419 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uchar1 *retVal, cudaTextureObject_t texObject, float x) 
#line 420 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 424 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 437 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 426 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uchar2 *retVal, cudaTextureObject_t texObject, float x) 
#line 427 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 431 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 444 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 433 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uchar4 *retVal, cudaTextureObject_t texObject, float x) 
#line 434 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 438 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 451 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 446 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short *retVal, cudaTextureObject_t texObject, float x) 
#line 447 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 451 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 464 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 453 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short1 *retVal, cudaTextureObject_t texObject, float x) 
#line 454 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 458 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 471 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 460 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short2 *retVal, cudaTextureObject_t texObject, float x) 
#line 461 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 465 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 478 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 467 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(short4 *retVal, cudaTextureObject_t texObject, float x) 
#line 468 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 472 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 485 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 474 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned short *retVal, cudaTextureObject_t texObject, float x) 
#line 475 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 479 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 492 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 481 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ushort1 *retVal, cudaTextureObject_t texObject, float x) 
#line 482 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 486 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 499 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 488 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ushort2 *retVal, cudaTextureObject_t texObject, float x) 
#line 489 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 493 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 506 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 495 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ushort4 *retVal, cudaTextureObject_t texObject, float x) 
#line 496 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 500 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 513 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 508 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int *retVal, cudaTextureObject_t texObject, float x) 
#line 509 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 513 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 526 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 515 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int1 *retVal, cudaTextureObject_t texObject, float x) 
#line 516 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 520 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 533 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 522 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int2 *retVal, cudaTextureObject_t texObject, float x) 
#line 523 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 527 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 540 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 529 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(int4 *retVal, cudaTextureObject_t texObject, float x) 
#line 530 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 534 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 547 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 536 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned *retVal, cudaTextureObject_t texObject, float x) 
#line 537 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 541 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 554 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 543 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uint1 *retVal, cudaTextureObject_t texObject, float x) 
#line 544 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 548 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 561 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 550 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uint2 *retVal, cudaTextureObject_t texObject, float x) 
#line 551 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 555 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 568 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 557 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(uint4 *retVal, cudaTextureObject_t texObject, float x) 
#line 558 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 562 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 575 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 572 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long *retVal, cudaTextureObject_t texObject, float x) 
#line 573 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 577 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 590 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 579 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long1 *retVal, cudaTextureObject_t texObject, float x) 
#line 580 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 584 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 597 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 586 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long2 *retVal, cudaTextureObject_t texObject, float x) 
#line 587 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 591 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 604 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 593 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(long4 *retVal, cudaTextureObject_t texObject, float x) 
#line 594 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 598 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 611 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 600 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(unsigned long *retVal, cudaTextureObject_t texObject, float x) 
#line 601 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 605 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 618 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 607 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ulong1 *retVal, cudaTextureObject_t texObject, float x) 
#line 608 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 612 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 625 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 614 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ulong2 *retVal, cudaTextureObject_t texObject, float x) 
#line 615 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 619 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 632 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 621 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(ulong4 *retVal, cudaTextureObject_t texObject, float x) 
#line 622 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 626 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 639 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 637 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float *retVal, cudaTextureObject_t texObject, float x) 
#line 638 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 642 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 655 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 644 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float1 *retVal, cudaTextureObject_t texObject, float x) 
#line 645 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 649 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 662 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 651 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float2 *retVal, cudaTextureObject_t texObject, float x) 
#line 652 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 656 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 669 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 658 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1D(float4 *retVal, cudaTextureObject_t texObject, float x) 
#line 659 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;
#line 663 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 676 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 671 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 672 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 681 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 694 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 682 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(signed char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 683 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 687 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 700 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 689 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 690 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 694 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 707 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 696 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 697 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 701 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 714 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 703 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(char4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 704 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 708 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 721 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 710 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 711 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 715 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 728 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 717 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 718 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 722 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 735 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 724 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 725 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 729 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 742 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 731 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 732 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 736 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 749 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 744 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 745 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 749 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 762 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 751 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 752 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 756 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 769 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 758 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 759 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 763 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 776 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 765 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(short4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 766 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 770 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 783 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 772 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 773 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 777 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 790 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 779 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 780 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 784 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 797 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 786 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 787 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 791 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 804 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 793 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 794 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 798 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 811 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 806 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 807 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 811 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 824 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 813 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 814 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 818 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 831 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 820 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 821 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 825 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 838 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 827 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(int4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 828 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 832 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 845 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 834 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 835 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 839 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 852 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 841 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 842 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 846 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 859 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 848 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 849 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 853 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 866 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 855 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 856 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 860 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 873 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 870 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 871 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 875 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 888 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 877 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 878 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 882 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 895 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 884 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 885 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 889 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 902 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 891 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(long4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 892 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 896 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 909 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 898 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 899 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 903 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 916 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 905 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 906 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 910 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 923 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 912 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 913 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 917 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 930 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 919 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 920 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 924 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 937 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 935 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 936 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 940 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 953 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 942 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float1 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 943 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 947 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 960 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 949 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float2 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 950 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 954 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 967 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 956 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2D(float4 *retVal, cudaTextureObject_t texObject, float x, float y) 
#line 957 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;
#line 961 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 974 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 969 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 970 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 979 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 992 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 980 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 981 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 985 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 998 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 987 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 988 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 992 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1005 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 994 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 995 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 999 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1012 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1001 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1002 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1006 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1019 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1008 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1009 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1013 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1026 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1015 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1016 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1020 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1033 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1022 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1023 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1027 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1040 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1029 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1030 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1034 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1047 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1042 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1043 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1047 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1060 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1049 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1050 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1054 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1067 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1056 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1057 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1061 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1074 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1063 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1064 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1068 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1081 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1070 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1071 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1075 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1088 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1077 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1078 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1082 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1095 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1084 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1085 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1089 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1102 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1091 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1092 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1096 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1109 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1104 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1105 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1109 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1122 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1111 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1112 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1116 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1129 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1118 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1119 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1123 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1136 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1125 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1126 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1130 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1143 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1132 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1133 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1137 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1150 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1139 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1140 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1144 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1157 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1146 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1147 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1151 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1164 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1153 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1154 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1158 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1171 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1168 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1169 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1173 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1186 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1175 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1176 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1180 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1193 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1182 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1183 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1187 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1200 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1189 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1190 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1194 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1207 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1196 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1197 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1201 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1214 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1203 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1204 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1208 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1221 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1210 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1211 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1215 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1228 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1217 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1218 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1222 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1235 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1233 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1234 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1238 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1251 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1240 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1241 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1245 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1258 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1247 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1248 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1252 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1265 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1254 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3D(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1255 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1259 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1272 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1267 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1268 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1277 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1290 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1278 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1279 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1283 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1296 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1285 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1286 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1290 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1303 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1292 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1293 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1297 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1310 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1299 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1300 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1304 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1317 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1306 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1307 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1311 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1324 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1313 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1314 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1318 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1331 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1320 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1321 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1325 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1338 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1327 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1328 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1332 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1345 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1340 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1341 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1345 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1358 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1347 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1348 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1352 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1365 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1354 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1355 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1359 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1372 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1361 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1362 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1366 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1379 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1368 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1369 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1373 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1386 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1375 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1376 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1380 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1393 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1382 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1383 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1387 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1400 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1389 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1390 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1394 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1407 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1402 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1403 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1407 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1420 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1409 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1410 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1414 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1427 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1416 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1417 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1421 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1434 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1423 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1424 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1428 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1441 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1430 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1431 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1435 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1448 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1437 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1438 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1442 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1455 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1444 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1445 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1449 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1462 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1451 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1452 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1456 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1469 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1466 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1467 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1471 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1484 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1473 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1474 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1478 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1491 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1480 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1481 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1485 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1498 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1487 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(long4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1488 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1492 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1505 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1494 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1495 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1499 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1512 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1501 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1502 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1506 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1519 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1508 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1509 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1513 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1526 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1515 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1516 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1520 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1533 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1531 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1532 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1536 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1549 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1538 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1539 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1543 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1556 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1545 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1546 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1550 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1563 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1552 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, int layer) 
#line 1553 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;
#line 1557 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1570 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1565 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1566 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1575 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1588 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1576 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1577 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1581 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1594 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1583 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1584 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1588 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1601 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1590 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1591 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1595 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1608 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1597 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1598 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1602 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1615 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1604 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1605 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1609 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1622 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1611 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1612 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1616 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1629 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1618 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1619 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1623 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1636 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1625 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1626 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1630 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1643 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1638 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1639 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1643 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1656 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1645 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1646 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1650 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1663 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1652 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1653 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1657 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1670 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1659 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1660 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1664 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1677 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1666 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1667 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1671 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1684 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1673 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1674 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1678 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1691 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1680 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1681 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1685 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1698 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1687 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1688 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1692 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1705 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1700 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1701 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1705 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1718 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1707 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1708 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1712 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1725 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1714 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1715 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1719 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1732 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1721 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1722 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1726 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1739 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1728 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1729 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1733 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1746 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1735 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1736 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1740 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1753 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1742 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1743 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1747 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1760 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1749 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1750 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1754 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1767 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1764 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1765 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1769 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1782 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1771 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1772 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1776 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1789 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1778 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1779 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1783 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1796 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1785 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1786 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1790 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1803 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1792 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1793 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1797 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1810 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1799 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1800 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1804 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1817 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1806 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1807 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1811 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1824 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1813 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1814 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1818 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1831 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1829 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1830 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1834 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1847 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1836 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1837 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1841 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1854 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1843 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1844 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1848 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1861 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1850 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer) 
#line 1851 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;
#line 1855 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1868 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1863 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1864 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1873 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1886 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1874 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1875 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1879 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1892 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1881 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1882 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1886 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1899 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1888 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1889 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1893 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1906 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1895 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1896 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1900 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1913 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1902 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1903 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1907 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1920 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1909 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1910 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1914 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1927 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1916 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1917 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1921 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1934 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1923 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1924 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1928 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1941 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1936 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1937 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1941 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1954 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1943 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1944 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1948 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1961 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1950 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1951 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1955 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1968 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1957 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1958 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1962 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1975 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1964 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1965 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1969 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1982 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1971 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1972 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1976 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1989 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1978 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1979 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1983 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 1996 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1985 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1986 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 1990 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2003 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 1998 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 1999 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2003 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2016 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2005 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2006 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2010 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2023 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2012 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2013 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2017 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2030 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2019 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2020 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2024 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2037 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2026 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2027 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2031 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2044 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2033 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2034 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2038 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2051 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2040 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2041 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2045 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2058 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2047 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2048 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2052 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2065 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2062 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2063 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2067 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2080 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2069 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2070 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2074 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2087 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2076 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2077 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2081 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2094 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2083 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2084 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2088 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2101 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2090 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2091 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2095 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2108 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2097 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2098 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2102 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2115 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2104 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2105 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2109 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2122 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2111 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2112 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2116 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2129 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2127 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2128 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2132 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2145 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2134 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2135 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2139 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2152 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2141 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2142 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2146 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2159 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2148 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemap(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z) 
#line 2149 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;
#line 2153 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2166 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2161 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2162 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2171 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2184 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2172 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2173 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2177 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2190 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2179 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2180 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2184 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2197 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2186 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2187 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2191 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2204 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2193 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2194 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2198 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2211 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2200 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2201 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2205 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2218 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2207 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2208 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2212 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2225 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2214 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2215 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2219 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2232 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2221 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2222 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2226 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2239 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2234 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2235 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2239 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2252 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2241 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2242 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2246 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2259 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2248 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2249 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2253 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2266 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2255 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2256 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2260 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2273 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2262 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2263 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2267 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2280 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2269 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2270 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2274 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2287 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2276 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2277 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2281 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2294 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2283 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2284 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2288 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2301 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2296 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2297 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2301 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2314 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2303 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2304 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2308 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2321 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2310 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2311 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2315 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2328 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2317 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2318 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2322 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2335 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2324 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2325 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2329 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2342 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2331 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2332 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2336 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2349 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2338 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2339 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2343 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2356 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2345 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2346 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2350 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2363 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2360 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2361 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2365 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2378 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2367 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2368 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2372 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2385 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2374 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2375 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2379 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2392 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2381 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2382 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2386 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2399 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2388 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2389 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2393 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2406 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2395 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2396 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2400 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2413 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2402 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2403 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2407 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2420 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2409 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2410 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2414 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2427 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2425 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2426 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2430 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2443 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2432 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2433 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2437 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2450 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2439 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2440 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2444 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2457 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2446 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayered(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer) 
#line 2447 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
#line 2451 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 2464 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2459 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2460 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2475 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2510 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2477 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2478 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2493 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2528 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2495 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2496 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2511 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2546 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2513 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2514 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2529 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2564 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2531 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2532 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2547 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2582 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2549 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2550 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2565 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2600 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2567 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2568 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2583 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2618 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2585 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2586 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2601 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2636 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2603 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2604 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2619 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2654 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2627 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2628 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2643 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2678 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2645 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2646 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2661 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2696 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2663 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2664 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2679 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2714 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2681 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2682 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2697 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2732 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2699 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2700 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2715 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2750 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2717 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2718 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2733 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2768 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2735 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2736 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2751 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2786 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2753 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2754 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2769 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2804 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2777 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2778 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2793 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2828 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2795 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2796 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2811 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2846 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2813 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2814 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2829 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2864 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2831 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2832 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2847 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2882 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2849 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2850 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2865 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2900 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2867 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2868 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2883 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2918 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2885 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2886 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2901 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2936 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2903 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2904 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2919 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2954 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2927 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2928 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2943 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2978 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2945 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2946 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2961 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 2996 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2963 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2964 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2979 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3014 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2981 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 2982 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 2997 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3032 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 2999 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3000 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3015 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3050 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3017 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3018 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3033 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3068 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3035 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3036 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3051 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3086 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3053 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3054 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3069 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3104 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3077 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3078 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3093 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3128 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3095 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3096 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3111 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3146 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3113 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3114 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3129 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3164 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3131 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2Dgather(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int comp) 
#line 3132 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)comp;
#line 3147 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}

































#line 3182 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3155 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3156 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3165 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3178 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3166 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3167 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3171 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3184 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3173 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3174 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3178 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3191 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3180 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3181 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3185 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3198 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3187 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3188 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3192 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3205 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3194 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3195 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3199 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3212 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3201 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3202 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3206 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3219 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3208 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3209 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3213 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3226 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3215 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3216 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3220 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3233 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3228 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3229 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3233 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3246 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3235 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3236 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3240 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3253 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3242 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3243 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3247 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3260 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3249 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3250 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3254 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3267 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3256 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3257 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3261 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3274 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3263 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3264 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3268 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3281 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3270 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3271 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3275 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3288 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3277 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3278 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3282 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3295 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3290 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3291 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3295 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3308 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3297 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3298 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3302 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3315 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3304 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3305 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3309 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3322 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3311 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3312 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3316 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3329 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3318 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3319 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3323 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3336 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3325 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3326 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3330 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3343 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3332 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3333 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3337 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3350 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3339 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3340 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3344 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3357 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3354 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3355 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3359 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3372 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3361 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3362 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3366 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3379 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3368 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3369 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3373 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3386 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3375 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3376 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3380 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3393 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3382 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3383 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3387 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3400 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3389 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3390 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3394 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3407 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3396 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3397 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3401 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3414 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3403 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3404 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3408 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3421 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3419 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3420 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3424 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3437 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3426 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3427 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3431 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3444 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3433 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3434 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3438 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3451 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3440 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float level) 
#line 3441 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)level;
#line 3445 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3458 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3453 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3454 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3463 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3476 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3464 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3465 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3469 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3482 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3471 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3472 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3476 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3489 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3478 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3479 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3483 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3496 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3485 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3486 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3490 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3503 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3492 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3493 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3497 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3510 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3499 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3500 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3504 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3517 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3506 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3507 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3511 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3524 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3513 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3514 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3518 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3531 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3526 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3527 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3531 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3544 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3533 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3534 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3538 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3551 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3540 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3541 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3545 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3558 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3547 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3548 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3552 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3565 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3554 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3555 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3559 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3572 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3561 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3562 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3566 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3579 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3568 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3569 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3573 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3586 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3575 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3576 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3580 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3593 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3588 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3589 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3593 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3606 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3595 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3596 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3600 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3613 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3602 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3603 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3607 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3620 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3609 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3610 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3614 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3627 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3616 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3617 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3621 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3634 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3623 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3624 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3628 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3641 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3630 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3631 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3635 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3648 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3637 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3638 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3642 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3655 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3652 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3653 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3657 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3670 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3659 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3660 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3664 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3677 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3666 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3667 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3671 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3684 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3673 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3674 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3678 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3691 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3680 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3681 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3685 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3698 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3687 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3688 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3692 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3705 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3694 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3695 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3699 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3712 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3701 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3702 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3706 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3719 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3717 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3718 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3722 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3735 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3724 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3725 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3729 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3742 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3731 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3732 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3736 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3749 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3738 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float level) 
#line 3739 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)level;
#line 3743 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3756 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3751 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3752 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3761 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3774 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3762 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3763 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3767 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3780 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3769 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3770 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3774 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3787 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3776 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3777 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3781 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3794 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3783 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3784 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3788 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3801 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3790 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3791 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3795 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3808 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3797 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3798 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3802 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3815 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3804 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3805 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3809 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3822 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3811 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3812 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3816 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3829 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3824 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3825 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3829 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3842 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3831 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3832 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3836 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3849 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3838 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3839 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3843 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3856 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3845 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3846 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3850 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3863 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3852 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3853 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3857 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3870 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3859 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3860 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3864 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3877 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3866 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3867 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3871 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3884 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3873 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3874 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3878 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3891 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3886 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3887 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3891 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3904 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3893 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3894 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3898 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3911 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3900 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3901 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3905 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3918 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3907 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3908 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3912 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3925 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3914 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3915 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3919 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3932 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3921 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3922 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3926 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3939 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3928 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3929 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3933 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3946 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3935 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3936 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3940 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3953 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3950 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3951 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3955 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3968 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3957 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3958 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3962 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3975 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3964 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3965 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3969 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3982 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3971 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3972 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3976 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3989 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3978 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3979 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3983 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 3996 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3985 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3986 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3990 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4003 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3992 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 3993 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 3997 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4010 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 3999 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4000 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4004 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4017 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4015 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4016 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4020 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4033 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4022 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4023 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4027 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4040 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4029 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4030 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4034 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4047 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4036 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4037 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4041 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4054 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4049 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4050 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4059 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4072 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4060 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4061 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4065 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4078 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4067 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4068 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4072 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4085 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4074 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4075 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4079 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4092 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4081 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4082 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4086 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4099 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4088 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4089 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4093 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4106 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4095 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4096 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4100 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4113 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4102 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4103 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4107 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4120 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4109 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4110 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4114 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4127 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4122 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4123 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4127 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4140 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4129 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4130 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4134 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4147 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4136 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4137 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4141 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4154 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4143 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4144 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4148 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4161 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4150 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4151 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4155 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4168 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4157 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4158 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4162 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4175 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4164 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4165 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4169 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4182 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4171 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4172 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4176 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4189 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4184 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4185 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4189 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4202 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4191 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4192 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4196 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4209 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4198 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4199 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4203 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4216 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4205 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4206 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4210 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4223 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4212 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4213 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4217 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4230 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4219 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4220 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4224 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4237 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4226 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4227 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4231 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4244 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4233 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4234 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4238 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4251 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4248 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4249 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4253 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4266 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4255 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4256 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4260 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4273 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4262 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4263 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4267 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4280 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4269 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4270 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4274 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4287 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4276 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4277 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4281 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4294 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4283 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4284 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4288 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4301 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4290 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4291 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4295 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4308 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4297 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4298 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4302 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4315 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4313 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4314 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4318 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4331 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4320 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4321 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4325 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4338 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4327 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4328 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4332 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4345 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4334 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float level) 
#line 4335 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)level;
#line 4339 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4352 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4347 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4348 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4357 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4370 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4358 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4359 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4363 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4376 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4365 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4366 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4370 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4383 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4372 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4373 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4377 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4390 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4379 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4380 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4384 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4397 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4386 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4387 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4391 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4404 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4393 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4394 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4398 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4411 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4400 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4401 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4405 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4418 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4407 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4408 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4412 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4425 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4420 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4421 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4425 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4438 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4427 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4428 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4432 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4445 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4434 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4435 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4439 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4452 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4441 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4442 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4446 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4459 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4448 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4449 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4453 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4466 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4455 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4456 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4460 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4473 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4462 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4463 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4467 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4480 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4469 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4470 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4474 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4487 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4482 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4483 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4487 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4500 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4489 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4490 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4494 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4507 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4496 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4497 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4501 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4514 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4503 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4504 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4508 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4521 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4510 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4511 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4515 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4528 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4517 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4518 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4522 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4535 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4524 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4525 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4529 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4542 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4531 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4532 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4536 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4549 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4546 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4547 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4551 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4564 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4553 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4554 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4558 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4571 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4560 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4561 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4565 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4578 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4567 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4568 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4572 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4585 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4574 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4575 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4579 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4592 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4581 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4582 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4586 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4599 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4588 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4589 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4593 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4606 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4595 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4596 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4600 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4613 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4611 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4612 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4616 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4629 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4618 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4619 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4623 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4636 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4625 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4626 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4630 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4643 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4632 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float level) 
#line 4633 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
#line 4637 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4650 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4645 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4646 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4655 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4668 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4656 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4657 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4661 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4674 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4663 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4664 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4668 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4681 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4670 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4671 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4675 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4688 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4677 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4678 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4682 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4695 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4684 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4685 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4689 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4702 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4691 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4692 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4696 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4709 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4698 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4699 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4703 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4716 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4705 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4706 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4710 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4723 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4718 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4719 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4723 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4736 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4725 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4726 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4730 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4743 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4732 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4733 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4737 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4750 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4739 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4740 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4744 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4757 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4746 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4747 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4751 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4764 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4753 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4754 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4758 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4771 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4760 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4761 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4765 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4778 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4767 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4768 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4772 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4785 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4780 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4781 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4785 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4798 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4787 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4788 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4792 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4805 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4794 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4795 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4799 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4812 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4801 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4802 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4806 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4819 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4808 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4809 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4813 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4826 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4815 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4816 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4820 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4833 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4822 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4823 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4827 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4840 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4829 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4830 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4834 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4847 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4844 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4845 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4849 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4862 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4851 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4852 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4856 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4869 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4858 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4859 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4863 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4876 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4865 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4866 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4870 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4883 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4872 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4873 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4877 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4890 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4879 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4880 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4884 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4897 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4886 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4887 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4891 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4904 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4893 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4894 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4898 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4911 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4909 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4910 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4914 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4927 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4916 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4917 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4921 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4934 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4923 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4924 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4928 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4941 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4930 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float level) 
#line 4931 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)level;
#line 4935 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4948 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4943 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4944 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4953 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4966 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4954 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4955 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4959 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4972 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4961 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4962 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4966 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4979 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4968 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4969 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4973 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4986 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4975 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4976 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4980 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 4993 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4982 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4983 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4987 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5000 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4989 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4990 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 4994 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5007 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 4996 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 4997 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5001 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5014 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5003 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5004 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5008 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5021 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5016 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5017 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5021 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5034 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5023 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5024 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5028 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5041 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5030 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5031 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5035 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5048 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5037 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5038 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5042 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5055 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5044 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5045 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5049 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5062 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5051 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5052 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5056 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5069 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5058 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5059 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5063 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5076 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5065 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5066 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5070 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5083 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5078 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5079 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5083 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5096 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5085 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5086 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5090 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5103 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5092 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5093 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5097 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5110 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5099 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5100 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5104 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5117 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5106 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5107 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5111 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5124 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5113 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5114 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5118 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5131 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5120 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5121 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5125 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5138 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5127 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5128 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5132 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5145 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5142 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5143 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5147 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5160 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5149 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5150 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5154 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5167 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5156 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5157 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5161 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5174 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5163 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5164 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5168 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5181 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5170 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5171 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5175 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5188 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5177 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5178 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5182 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5195 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5184 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5185 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5189 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5202 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5191 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5192 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5196 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5209 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5207 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5208 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5212 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5225 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5214 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5215 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5219 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5232 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5221 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5222 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5226 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5239 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5228 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void texCubemapLayeredLod(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) 
#line 5229 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
#line 5233 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5246 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5241 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5242 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5251 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5264 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5252 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5253 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5257 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5270 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5259 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5260 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5264 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5277 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5266 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5267 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5271 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5284 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5273 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5274 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5278 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5291 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5280 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5281 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5285 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5298 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5287 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5288 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5292 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5305 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5294 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5295 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5299 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5312 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5301 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5302 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5306 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5319 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5314 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5315 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5319 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5332 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5321 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5322 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5326 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5339 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5328 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5329 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5333 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5346 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5335 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5336 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5340 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5353 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5342 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5343 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5347 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5360 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5349 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5350 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5354 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5367 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5356 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5357 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5361 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5374 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5363 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5364 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5368 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5381 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5376 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5377 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5381 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5394 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5383 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5384 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5388 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5401 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5390 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5391 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5395 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5408 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5397 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5398 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5402 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5415 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5404 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5405 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5409 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}










#line 5421 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5411 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5412 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5416 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5429 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5418 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5419 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5423 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5436 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5425 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5426 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5430 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5443 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5440 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5441 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5445 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5458 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5447 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5448 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5452 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5465 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5454 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5455 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5459 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5472 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5461 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5462 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5466 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5479 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5468 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5469 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5473 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5486 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5475 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5476 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5480 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5493 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5482 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5483 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5487 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5500 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5489 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5490 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5494 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5507 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5505 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5506 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5510 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5523 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5512 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5513 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5517 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5530 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5519 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5520 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5524 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5537 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5526 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float dPdx, float dPdy) 
#line 5527 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
#line 5531 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5544 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5539 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5540 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5549 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5562 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5550 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5551 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5555 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5568 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5557 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5558 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5562 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5575 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5564 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5565 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5569 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5582 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5571 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5572 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5576 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5589 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5578 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5579 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5583 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5596 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5585 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5586 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5590 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5603 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5592 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5593 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5597 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5610 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5599 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5600 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5604 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5617 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5612 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5613 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5617 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5630 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5619 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5620 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5624 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5637 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5626 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5627 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5631 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5644 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5633 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5634 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5638 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5651 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5640 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5641 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5645 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5658 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5647 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5648 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5652 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5665 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5654 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5655 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5659 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5672 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5661 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5662 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5666 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5679 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5674 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5675 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5679 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5692 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5681 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5682 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5686 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5699 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5688 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5689 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5693 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5706 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5695 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5696 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5700 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5713 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5702 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5703 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5707 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5720 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5709 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5710 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5714 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5727 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5716 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5717 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5721 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5734 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5723 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5724 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5728 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5741 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5738 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5739 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5743 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5756 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5745 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5746 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5750 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5763 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5752 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5753 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5757 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5770 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5759 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5760 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5764 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5777 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5766 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5767 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5771 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5784 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5773 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5774 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5778 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5791 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5780 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5781 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5785 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5798 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5787 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5788 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5792 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5805 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5803 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5804 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5808 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5821 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5810 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5811 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5815 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5828 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5817 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5818 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5822 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5835 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5824 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) 
#line 5825 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
#line 5829 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5842 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5837 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5838 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5847 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5860 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5848 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5849 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5853 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5866 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5855 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5856 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5860 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5873 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5862 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5863 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5867 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5880 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5869 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5870 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5874 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5887 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5876 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5877 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5881 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5894 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5883 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5884 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5888 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5901 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5890 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5891 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5895 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5908 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5897 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5898 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5902 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5915 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5910 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5911 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5915 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5928 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5917 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5918 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5922 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5935 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5924 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5925 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5929 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5942 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5931 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5932 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5936 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5949 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5938 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5939 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5943 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5956 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5945 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5946 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5950 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5963 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5952 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5953 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5957 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5970 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5959 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5960 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5964 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5977 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5972 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5973 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5977 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5990 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5979 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5980 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5984 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 5997 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5986 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5987 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5991 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6004 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 5993 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 5994 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 5998 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6011 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6000 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6001 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6005 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6018 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6007 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6008 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6012 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6025 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6014 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6015 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6019 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6032 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6021 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6022 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6026 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6039 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6036 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6037 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6041 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6054 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6043 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6044 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6048 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6061 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6050 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6051 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6055 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6068 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6057 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6058 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6062 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6075 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6064 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6065 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6069 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6082 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6071 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6072 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6076 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6089 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6078 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6079 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6083 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6096 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6085 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6086 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6090 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6103 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6101 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6102 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6106 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6119 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6108 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6109 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6113 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6126 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6115 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6116 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6120 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6133 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6122 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex3DGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) 
#line 6123 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
#line 6127 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6140 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6135 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6136 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6145 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6158 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6146 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6147 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6151 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6164 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6153 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6154 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6158 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6171 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6160 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6161 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6165 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6178 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6167 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6168 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6172 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6185 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6174 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6175 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6179 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6192 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6181 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6182 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6186 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6199 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6188 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6189 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6193 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6206 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6195 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6196 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6200 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6213 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6208 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6209 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6213 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6226 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6215 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6216 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6220 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6233 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6222 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6223 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6227 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6240 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6229 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6230 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6234 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6247 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6236 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6237 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6241 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6254 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6243 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6244 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6248 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6261 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6250 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6251 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6255 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6268 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6257 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6258 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6262 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6275 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6270 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6271 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6275 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6288 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6277 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6278 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6282 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6295 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6284 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6285 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6289 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6302 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6291 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6292 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6296 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6309 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6298 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6299 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6303 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6316 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6305 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6306 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6310 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6323 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6312 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6313 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6317 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6330 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6319 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6320 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6324 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6337 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6334 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6335 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6339 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6352 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6341 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6342 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6346 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6359 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6348 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6349 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6353 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6366 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6355 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(long4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6356 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6360 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6373 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6362 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6363 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6367 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6380 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6369 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6370 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6374 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6387 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6376 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6377 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6381 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6394 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6383 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6384 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6388 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6401 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6399 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6400 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6404 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6417 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6406 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6407 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6411 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6424 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6413 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6414 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6418 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6431 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6420 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex1DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) 
#line 6421 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
#line 6425 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6438 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6433 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6434 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6443 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6456 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6444 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(signed char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6445 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6449 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6462 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6451 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6452 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6456 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6469 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6458 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6459 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6463 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6476 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6465 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(char4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6466 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6470 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6483 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6472 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned char *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6473 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6477 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6490 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6479 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uchar1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6480 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6484 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6497 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6486 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uchar2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6487 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6491 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6504 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6493 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uchar4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6494 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6498 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6511 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6506 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6507 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6511 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6524 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6513 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6514 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6518 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6531 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6520 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6521 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6525 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6538 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6527 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(short4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6528 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6532 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6545 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6534 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned short *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6535 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6539 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6552 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6541 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ushort1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6542 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6546 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6559 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6548 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ushort2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6549 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6553 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6566 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6555 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ushort4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6556 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6560 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6573 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6568 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6569 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6573 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6586 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6575 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6576 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6580 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6593 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6582 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6583 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6587 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6600 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6589 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(int4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6590 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6594 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6607 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6596 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6597 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6601 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6614 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6603 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uint1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6604 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6608 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6621 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6610 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uint2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6611 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6615 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6628 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6617 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(uint4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6618 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6622 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6635 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6632 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6633 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6637 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6650 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6639 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6640 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6644 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6657 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6646 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6647 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6651 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6664 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6653 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(long4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6654 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6658 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6671 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6660 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(unsigned long *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6661 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6665 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6678 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6667 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ulong1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6668 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6672 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6685 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6674 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ulong2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6675 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6679 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6692 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6681 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(ulong4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6682 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6686 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6699 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6697 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6698 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6702 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6715 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6704 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float1 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6705 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6709 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6722 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6711 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float2 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6712 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6716 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6729 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 6718 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
static __forceinline void tex2DLayeredGrad(float4 *retVal, cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) 
#line 6719 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
#line 6723 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
::exit(___);}











#line 6736 "e:\\cudatoolkit\\include\\texture_indirect_functions.hpp"
#line 77 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i8_clamp(char *, unsigned __int64, int); } 
#line 78 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i16_clamp(short *, unsigned __int64, int); } 
#line 79 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i32_clamp(int *, unsigned __int64, int); } 
#line 80 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i64_clamp(__int64 *, unsigned __int64, int); } 
#line 81 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i8_clamp(char *, char *, unsigned __int64, int); } 
#line 82 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i16_clamp(short *, short *, unsigned __int64, int); } 
#line 83 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i32_clamp(int *, int *, unsigned __int64, int); } 
#line 84 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int); } 
#line 85 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int); } 
#line 86 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int); } 
#line 87 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int); } 
#line 88 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i8_clamp(char *, unsigned __int64, int, int); } 
#line 89 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i16_clamp(short *, unsigned __int64, int, int); } 
#line 90 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i32_clamp(int *, unsigned __int64, int, int); } 
#line 91 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i64_clamp(__int64 *, unsigned __int64, int, int); } 
#line 92 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i8_clamp(char *, char *, unsigned __int64, int, int); } 
#line 93 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i16_clamp(short *, short *, unsigned __int64, int, int); } 
#line 94 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i32_clamp(int *, int *, unsigned __int64, int, int); } 
#line 95 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 96 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 97 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 98 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 99 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i8_clamp(char *, unsigned __int64, int, int); } 
#line 100 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i16_clamp(short *, unsigned __int64, int, int); } 
#line 101 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i32_clamp(int *, unsigned __int64, int, int); } 
#line 102 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i64_clamp(__int64 *, unsigned __int64, int, int); } 
#line 103 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i8_clamp(char *, char *, unsigned __int64, int, int); } 
#line 104 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i16_clamp(short *, short *, unsigned __int64, int, int); } 
#line 105 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i32_clamp(int *, int *, unsigned __int64, int, int); } 
#line 106 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 107 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 108 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 109 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 110 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i8_clamp(char *, unsigned __int64, int, int, int); } 
#line 111 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i16_clamp(short *, unsigned __int64, int, int, int); } 
#line 112 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i32_clamp(int *, unsigned __int64, int, int, int); } 
#line 113 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i64_clamp(__int64 *, unsigned __int64, int, int, int); } 
#line 114 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i8_clamp(char *, char *, unsigned __int64, int, int, int); } 
#line 115 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i16_clamp(short *, short *, unsigned __int64, int, int, int); } 
#line 116 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i32_clamp(int *, int *, unsigned __int64, int, int, int); } 
#line 117 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 118 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 119 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 120 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 121 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i8_clamp(char *, unsigned __int64, int, int, int); } 
#line 122 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i16_clamp(short *, unsigned __int64, int, int, int); } 
#line 123 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i32_clamp(int *, unsigned __int64, int, int, int); } 
#line 124 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i64_clamp(__int64 *, unsigned __int64, int, int, int); } 
#line 125 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i8_clamp(char *, char *, unsigned __int64, int, int, int); } 
#line 126 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i16_clamp(short *, short *, unsigned __int64, int, int, int); } 
#line 127 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i32_clamp(int *, int *, unsigned __int64, int, int, int); } 
#line 128 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i64_clamp(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 129 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i8_clamp(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 130 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i16_clamp(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 131 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i32_clamp(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 132 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i8_trap(char *, unsigned __int64, int); } 
#line 133 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i16_trap(short *, unsigned __int64, int); } 
#line 134 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i32_trap(int *, unsigned __int64, int); } 
#line 135 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i64_trap(__int64 *, unsigned __int64, int); } 
#line 136 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i8_trap(char *, char *, unsigned __int64, int); } 
#line 137 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i16_trap(short *, short *, unsigned __int64, int); } 
#line 138 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i32_trap(int *, int *, unsigned __int64, int); } 
#line 139 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int); } 
#line 140 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int); } 
#line 141 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int); } 
#line 142 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int); } 
#line 143 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i8_trap(char *, unsigned __int64, int, int); } 
#line 144 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i16_trap(short *, unsigned __int64, int, int); } 
#line 145 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i32_trap(int *, unsigned __int64, int, int); } 
#line 146 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i64_trap(__int64 *, unsigned __int64, int, int); } 
#line 147 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i8_trap(char *, char *, unsigned __int64, int, int); } 
#line 148 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i16_trap(short *, short *, unsigned __int64, int, int); } 
#line 149 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i32_trap(int *, int *, unsigned __int64, int, int); } 
#line 150 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 151 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 152 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 153 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 154 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i8_trap(char *, unsigned __int64, int, int); } 
#line 155 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i16_trap(short *, unsigned __int64, int, int); } 
#line 156 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i32_trap(int *, unsigned __int64, int, int); } 
#line 157 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i64_trap(__int64 *, unsigned __int64, int, int); } 
#line 158 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i8_trap(char *, char *, unsigned __int64, int, int); } 
#line 159 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i16_trap(short *, short *, unsigned __int64, int, int); } 
#line 160 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i32_trap(int *, int *, unsigned __int64, int, int); } 
#line 161 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 162 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 163 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 164 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 165 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i8_trap(char *, unsigned __int64, int, int, int); } 
#line 166 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i16_trap(short *, unsigned __int64, int, int, int); } 
#line 167 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i32_trap(int *, unsigned __int64, int, int, int); } 
#line 168 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i64_trap(__int64 *, unsigned __int64, int, int, int); } 
#line 169 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i8_trap(char *, char *, unsigned __int64, int, int, int); } 
#line 170 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i16_trap(short *, short *, unsigned __int64, int, int, int); } 
#line 171 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i32_trap(int *, int *, unsigned __int64, int, int, int); } 
#line 172 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 173 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 174 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 175 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 176 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i8_trap(char *, unsigned __int64, int, int, int); } 
#line 177 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i16_trap(short *, unsigned __int64, int, int, int); } 
#line 178 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i32_trap(int *, unsigned __int64, int, int, int); } 
#line 179 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i64_trap(__int64 *, unsigned __int64, int, int, int); } 
#line 180 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i8_trap(char *, char *, unsigned __int64, int, int, int); } 
#line 181 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i16_trap(short *, short *, unsigned __int64, int, int, int); } 
#line 182 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i32_trap(int *, int *, unsigned __int64, int, int, int); } 
#line 183 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i64_trap(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 184 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i8_trap(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 185 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i16_trap(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 186 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i32_trap(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 187 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i8_zero(char *, unsigned __int64, int); } 
#line 188 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i16_zero(short *, unsigned __int64, int); } 
#line 189 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i32_zero(int *, unsigned __int64, int); } 
#line 190 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_i64_zero(__int64 *, unsigned __int64, int); } 
#line 191 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i8_zero(char *, char *, unsigned __int64, int); } 
#line 192 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i16_zero(short *, short *, unsigned __int64, int); } 
#line 193 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i32_zero(int *, int *, unsigned __int64, int); } 
#line 194 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int); } 
#line 195 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int); } 
#line 196 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int); } 
#line 197 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int); } 
#line 198 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i8_zero(char *, unsigned __int64, int, int); } 
#line 199 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i16_zero(short *, unsigned __int64, int, int); } 
#line 200 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i32_zero(int *, unsigned __int64, int, int); } 
#line 201 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_i64_zero(__int64 *, unsigned __int64, int, int); } 
#line 202 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i8_zero(char *, char *, unsigned __int64, int, int); } 
#line 203 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i16_zero(short *, short *, unsigned __int64, int, int); } 
#line 204 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i32_zero(int *, int *, unsigned __int64, int, int); } 
#line 205 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 206 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 207 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 208 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_1d_array_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 209 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i8_zero(char *, unsigned __int64, int, int); } 
#line 210 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i16_zero(short *, unsigned __int64, int, int); } 
#line 211 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i32_zero(int *, unsigned __int64, int, int); } 
#line 212 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_i64_zero(__int64 *, unsigned __int64, int, int); } 
#line 213 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i8_zero(char *, char *, unsigned __int64, int, int); } 
#line 214 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i16_zero(short *, short *, unsigned __int64, int, int); } 
#line 215 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i32_zero(int *, int *, unsigned __int64, int, int); } 
#line 216 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int); } 
#line 217 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int); } 
#line 218 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int); } 
#line 219 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int); } 
#line 220 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i8_zero(char *, unsigned __int64, int, int, int); } 
#line 221 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i16_zero(short *, unsigned __int64, int, int, int); } 
#line 222 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i32_zero(int *, unsigned __int64, int, int, int); } 
#line 223 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_i64_zero(__int64 *, unsigned __int64, int, int, int); } 
#line 224 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i8_zero(char *, char *, unsigned __int64, int, int, int); } 
#line 225 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i16_zero(short *, short *, unsigned __int64, int, int, int); } 
#line 226 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i32_zero(int *, int *, unsigned __int64, int, int, int); } 
#line 227 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 228 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 229 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 230 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_2d_array_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 231 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i8_zero(char *, unsigned __int64, int, int, int); } 
#line 232 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i16_zero(short *, unsigned __int64, int, int, int); } 
#line 233 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i32_zero(int *, unsigned __int64, int, int, int); } 
#line 234 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_i64_zero(__int64 *, unsigned __int64, int, int, int); } 
#line 235 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i8_zero(char *, char *, unsigned __int64, int, int, int); } 
#line 236 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i16_zero(short *, short *, unsigned __int64, int, int, int); } 
#line 237 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i32_zero(int *, int *, unsigned __int64, int, int, int); } 
#line 238 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v2i64_zero(__int64 *, __int64 *, unsigned __int64, int, int, int); } 
#line 239 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i8_zero(char *, char *, char *, char *, unsigned __int64, int, int, int); } 
#line 240 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i16_zero(short *, short *, short *, short *, unsigned __int64, int, int, int); } 
#line 241 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __suld_3d_v4i32_zero(int *, int *, int *, int *, unsigned __int64, int, int, int); } 
#line 243 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i8_clamp(cudaSurfaceObject_t, int, unsigned char); } 
#line 244 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i16_clamp(cudaSurfaceObject_t, int, unsigned short); } 
#line 245 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i32_clamp(cudaSurfaceObject_t, int, unsigned); } 
#line 246 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i64_clamp(cudaSurfaceObject_t, int, unsigned __int64); } 
#line 247 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i8_clamp(cudaSurfaceObject_t, int, uchar2); } 
#line 248 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i16_clamp(cudaSurfaceObject_t, int, ushort2); } 
#line 249 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i32_clamp(cudaSurfaceObject_t, int, uint2); } 
#line 250 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i64_clamp(cudaSurfaceObject_t, int, ulonglong2); } 
#line 251 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i8_clamp(cudaSurfaceObject_t, int, uchar4); } 
#line 252 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i16_clamp(cudaSurfaceObject_t, int, ushort4); } 
#line 253 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i32_clamp(cudaSurfaceObject_t, int, uint4); } 
#line 254 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i8_clamp(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 255 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i16_clamp(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 256 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i32_clamp(cudaSurfaceObject_t, int, int, unsigned); } 
#line 257 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i64_clamp(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 258 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i8_clamp(cudaSurfaceObject_t, int, int, uchar2); } 
#line 259 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i16_clamp(cudaSurfaceObject_t, int, int, ushort2); } 
#line 260 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i32_clamp(cudaSurfaceObject_t, int, int, uint2); } 
#line 261 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i64_clamp(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 262 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i8_clamp(cudaSurfaceObject_t, int, int, uchar4); } 
#line 263 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i16_clamp(cudaSurfaceObject_t, int, int, ushort4); } 
#line 264 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i32_clamp(cudaSurfaceObject_t, int, int, uint4); } 
#line 265 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i8_clamp(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 266 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i16_clamp(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 267 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i32_clamp(cudaSurfaceObject_t, int, int, unsigned); } 
#line 268 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i64_clamp(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 269 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i8_clamp(cudaSurfaceObject_t, int, int, uchar2); } 
#line 270 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i16_clamp(cudaSurfaceObject_t, int, int, ushort2); } 
#line 271 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i32_clamp(cudaSurfaceObject_t, int, int, uint2); } 
#line 272 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i64_clamp(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 273 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i8_clamp(cudaSurfaceObject_t, int, int, uchar4); } 
#line 274 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i16_clamp(cudaSurfaceObject_t, int, int, ushort4); } 
#line 275 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i32_clamp(cudaSurfaceObject_t, int, int, uint4); } 
#line 276 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i8_clamp(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 277 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i16_clamp(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 278 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i32_clamp(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 279 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i64_clamp(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 280 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i8_clamp(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 281 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i16_clamp(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 282 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i32_clamp(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 283 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i64_clamp(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 284 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i8_clamp(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 285 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i16_clamp(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 286 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i32_clamp(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 287 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i8_clamp(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 288 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i16_clamp(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 289 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i32_clamp(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 290 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i64_clamp(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 291 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i8_clamp(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 292 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i16_clamp(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 293 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i32_clamp(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 294 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i64_clamp(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 295 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i8_clamp(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 296 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i16_clamp(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 297 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i32_clamp(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 298 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i8_trap(cudaSurfaceObject_t, int, unsigned char); } 
#line 299 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i16_trap(cudaSurfaceObject_t, int, unsigned short); } 
#line 300 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i32_trap(cudaSurfaceObject_t, int, unsigned); } 
#line 301 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i64_trap(cudaSurfaceObject_t, int, unsigned __int64); } 
#line 302 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i8_trap(cudaSurfaceObject_t, int, uchar2); } 
#line 303 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i16_trap(cudaSurfaceObject_t, int, ushort2); } 
#line 304 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i32_trap(cudaSurfaceObject_t, int, uint2); } 
#line 305 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i64_trap(cudaSurfaceObject_t, int, ulonglong2); } 
#line 306 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i8_trap(cudaSurfaceObject_t, int, uchar4); } 
#line 307 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i16_trap(cudaSurfaceObject_t, int, ushort4); } 
#line 308 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i32_trap(cudaSurfaceObject_t, int, uint4); } 
#line 309 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i8_trap(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 310 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i16_trap(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 311 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i32_trap(cudaSurfaceObject_t, int, int, unsigned); } 
#line 312 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i64_trap(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 313 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i8_trap(cudaSurfaceObject_t, int, int, uchar2); } 
#line 314 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i16_trap(cudaSurfaceObject_t, int, int, ushort2); } 
#line 315 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i32_trap(cudaSurfaceObject_t, int, int, uint2); } 
#line 316 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i64_trap(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 317 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i8_trap(cudaSurfaceObject_t, int, int, uchar4); } 
#line 318 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i16_trap(cudaSurfaceObject_t, int, int, ushort4); } 
#line 319 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i32_trap(cudaSurfaceObject_t, int, int, uint4); } 
#line 320 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i8_trap(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 321 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i16_trap(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 322 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i32_trap(cudaSurfaceObject_t, int, int, unsigned); } 
#line 323 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i64_trap(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 324 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i8_trap(cudaSurfaceObject_t, int, int, uchar2); } 
#line 325 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i16_trap(cudaSurfaceObject_t, int, int, ushort2); } 
#line 326 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i32_trap(cudaSurfaceObject_t, int, int, uint2); } 
#line 327 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i64_trap(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 328 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i8_trap(cudaSurfaceObject_t, int, int, uchar4); } 
#line 329 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i16_trap(cudaSurfaceObject_t, int, int, ushort4); } 
#line 330 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i32_trap(cudaSurfaceObject_t, int, int, uint4); } 
#line 331 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i8_trap(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 332 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i16_trap(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 333 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i32_trap(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 334 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i64_trap(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 335 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i8_trap(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 336 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i16_trap(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 337 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i32_trap(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 338 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i64_trap(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 339 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i8_trap(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 340 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i16_trap(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 341 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i32_trap(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 342 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i8_trap(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 343 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i16_trap(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 344 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i32_trap(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 345 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i64_trap(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 346 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i8_trap(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 347 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i16_trap(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 348 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i32_trap(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 349 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i64_trap(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 350 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i8_trap(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 351 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i16_trap(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 352 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i32_trap(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 353 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i8_zero(cudaSurfaceObject_t, int, unsigned char); } 
#line 354 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i16_zero(cudaSurfaceObject_t, int, unsigned short); } 
#line 355 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i32_zero(cudaSurfaceObject_t, int, unsigned); } 
#line 356 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_i64_zero(cudaSurfaceObject_t, int, unsigned __int64); } 
#line 357 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i8_zero(cudaSurfaceObject_t, int, uchar2); } 
#line 358 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i16_zero(cudaSurfaceObject_t, int, ushort2); } 
#line 359 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i32_zero(cudaSurfaceObject_t, int, uint2); } 
#line 360 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v2i64_zero(cudaSurfaceObject_t, int, ulonglong2); } 
#line 361 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i8_zero(cudaSurfaceObject_t, int, uchar4); } 
#line 362 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i16_zero(cudaSurfaceObject_t, int, ushort4); } 
#line 363 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_v4i32_zero(cudaSurfaceObject_t, int, uint4); } 
#line 364 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i8_zero(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 365 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i16_zero(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 366 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i32_zero(cudaSurfaceObject_t, int, int, unsigned); } 
#line 367 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_i64_zero(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 368 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i8_zero(cudaSurfaceObject_t, int, int, uchar2); } 
#line 369 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i16_zero(cudaSurfaceObject_t, int, int, ushort2); } 
#line 370 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i32_zero(cudaSurfaceObject_t, int, int, uint2); } 
#line 371 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v2i64_zero(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 372 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i8_zero(cudaSurfaceObject_t, int, int, uchar4); } 
#line 373 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i16_zero(cudaSurfaceObject_t, int, int, ushort4); } 
#line 374 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_1d_array_v4i32_zero(cudaSurfaceObject_t, int, int, uint4); } 
#line 375 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i8_zero(cudaSurfaceObject_t, int, int, unsigned char); } 
#line 376 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i16_zero(cudaSurfaceObject_t, int, int, unsigned short); } 
#line 377 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i32_zero(cudaSurfaceObject_t, int, int, unsigned); } 
#line 378 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_i64_zero(cudaSurfaceObject_t, int, int, unsigned __int64); } 
#line 379 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i8_zero(cudaSurfaceObject_t, int, int, uchar2); } 
#line 380 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i16_zero(cudaSurfaceObject_t, int, int, ushort2); } 
#line 381 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i32_zero(cudaSurfaceObject_t, int, int, uint2); } 
#line 382 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v2i64_zero(cudaSurfaceObject_t, int, int, ulonglong2); } 
#line 383 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i8_zero(cudaSurfaceObject_t, int, int, uchar4); } 
#line 384 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i16_zero(cudaSurfaceObject_t, int, int, ushort4); } 
#line 385 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_v4i32_zero(cudaSurfaceObject_t, int, int, uint4); } 
#line 386 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i8_zero(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 387 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i16_zero(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 388 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i32_zero(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 389 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_i64_zero(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 390 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i8_zero(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 391 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i16_zero(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 392 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i32_zero(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 393 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v2i64_zero(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 394 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i8_zero(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 395 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i16_zero(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 396 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_2d_array_v4i32_zero(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 397 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i8_zero(cudaSurfaceObject_t, int, int, int, unsigned char); } 
#line 398 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i16_zero(cudaSurfaceObject_t, int, int, int, unsigned short); } 
#line 399 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i32_zero(cudaSurfaceObject_t, int, int, int, unsigned); } 
#line 400 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_i64_zero(cudaSurfaceObject_t, int, int, int, unsigned __int64); } 
#line 401 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i8_zero(cudaSurfaceObject_t, int, int, int, uchar2); } 
#line 402 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i16_zero(cudaSurfaceObject_t, int, int, int, ushort2); } 
#line 403 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i32_zero(cudaSurfaceObject_t, int, int, int, uint2); } 
#line 404 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v2i64_zero(cudaSurfaceObject_t, int, int, int, ulonglong2); } 
#line 405 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i8_zero(cudaSurfaceObject_t, int, int, int, uchar4); } 
#line 406 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i16_zero(cudaSurfaceObject_t, int, int, int, ushort4); } 
#line 407 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
extern "C" { void __sust_b_3d_v4i32_zero(cudaSurfaceObject_t, int, int, int, uint4); } 
#line 410 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 412 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 414 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 416 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 418 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 420 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 422 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 424 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 426 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 428 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 430 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 432 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 434 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 436 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 438 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 440 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 442 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 444 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 446 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 454 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 456 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 458 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 460 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 462 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 464 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 466 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 468 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 470 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 478 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 480 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 482 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 484 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 486 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 488 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 490 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 498 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 499 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
surf1Dread(::cudaSurfaceObject_t surfObject, int x, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 500 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
#line 504 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
::exit(___);}











#line 517 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
#line 512 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 514 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 516 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 518 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 520 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 522 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 524 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 526 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 528 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 530 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 532 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 534 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 536 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 538 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 540 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 542 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 544 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 546 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 548 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 556 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 558 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 560 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 562 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 564 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 566 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 568 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 570 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 572 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 580 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 582 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 584 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 586 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 588 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 590 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 592 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 600 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 601 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
surf2Dread(::cudaSurfaceObject_t surfObject, int x, int y, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 602 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 606 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
::exit(___);}











#line 619 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
#line 614 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 616 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 618 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 620 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 622 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 624 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 626 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 628 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 630 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 632 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 634 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 636 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 638 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 640 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 642 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 644 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 646 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 648 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 650 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 658 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 660 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 662 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 664 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 666 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 668 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 670 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 672 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 674 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 682 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 684 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 686 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 688 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 690 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 692 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 694 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 702 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 703 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
surf3Dread(::cudaSurfaceObject_t surfObject, int x, int y, int z, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 704 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 708 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
::exit(___);}











#line 721 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
#line 716 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 718 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 720 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 722 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 724 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 726 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 728 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 730 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 732 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 734 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 736 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 738 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 740 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 742 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 744 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 746 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 748 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 750 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 752 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 760 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 762 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 764 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 766 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 768 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 770 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 772 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 774 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 776 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 784 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 786 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 788 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 790 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 792 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 794 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 796 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 804 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 805 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
surf1DLayeredread(::cudaSurfaceObject_t surfObject, int x, int layer, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 806 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 810 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
::exit(___);}











#line 823 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
#line 818 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 820 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 822 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 824 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 826 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 828 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 830 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 832 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 834 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 836 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 838 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 840 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 842 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 844 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 846 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 848 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 850 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 852 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 854 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 862 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 864 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 866 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 868 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 870 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 872 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 874 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 876 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 878 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 886 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 888 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 890 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 892 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 894 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 896 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 898 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 906 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 907 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
surf2DLayeredread(::cudaSurfaceObject_t surfObject, int x, int y, int layer, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 908 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 912 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
::exit(___);}











#line 925 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
#line 920 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 922 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 924 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 926 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 928 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 930 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 932 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 934 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 936 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 938 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 940 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 942 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 944 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 946 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 948 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 950 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 952 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 954 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 956 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 964 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 966 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 968 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 970 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 972 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 974 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 976 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 978 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 980 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 988 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 990 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 992 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 994 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 996 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 998 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1000 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1008 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 1009 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
surfCubemapread(::cudaSurfaceObject_t surfObject, int x, int y, int face, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1010 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 1014 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
::exit(___);}











#line 1027 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
#line 1022 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1024 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(signed char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1026 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1028 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned char * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1030 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1032 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1034 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1036 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned short * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1038 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1040 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1042 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1044 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1046 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1048 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(__int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1050 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(longlong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1052 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(unsigned __int64 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1054 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ulonglong1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1056 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1058 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float1 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1066 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1068 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1070 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1072 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1074 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1076 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1078 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(longlong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1080 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ulonglong2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1082 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float2 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1090 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(char4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1092 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uchar4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1094 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(short4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1096 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(ushort4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1098 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(int4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1100 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(uint4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1102 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredread(float4 * retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1110 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
template< class T> static __forceinline T 
#line 1111 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
surfCubemapLayeredread(::cudaSurfaceObject_t surfObject, int x, int y, int layerface, ::cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) 
#line 1112 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 1116 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
::exit(___);}











#line 1129 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
#line 1124 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1126 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1128 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1130 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1132 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1134 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1136 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1138 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1140 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1142 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1144 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1146 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1148 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1150 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1152 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1154 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1156 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1158 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1160 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1168 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1170 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1172 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1174 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1176 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1178 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1180 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1182 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1184 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1192 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1194 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1196 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1198 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1200 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1202 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1204 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1212 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1214 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1216 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1218 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1220 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1222 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1224 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1226 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1228 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1230 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1232 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1234 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1236 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1238 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1240 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1242 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1244 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1246 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1248 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1256 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1258 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1260 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1262 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1264 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1266 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1268 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1270 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1272 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1280 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1282 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1284 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1286 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1288 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1290 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1292 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1301 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1303 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1305 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1307 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1309 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1311 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1313 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1315 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1317 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1319 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1321 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1323 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1325 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1327 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1329 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1331 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1333 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1335 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1337 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1345 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1347 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1349 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1351 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1353 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1355 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1357 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1359 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1361 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1369 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1371 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1373 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1375 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1377 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1379 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1381 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf3Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1389 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1391 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1393 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1395 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1397 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1399 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1401 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1403 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1405 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1407 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1409 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1411 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1413 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1415 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1417 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1419 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1421 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1423 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1425 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1433 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1435 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1437 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1439 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1441 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1443 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1445 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1447 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1449 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1457 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1459 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1461 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1463 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1465 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1467 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1469 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf1DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1477 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1479 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1481 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1483 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1485 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1487 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1489 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1491 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1493 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1495 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1497 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1499 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1501 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1503 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1505 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1507 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1509 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1511 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1513 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1521 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1523 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1525 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1527 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1529 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1531 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1533 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1535 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1537 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1545 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1547 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1549 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1551 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1553 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1555 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1557 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surf2DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1565 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1567 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1569 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1571 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1573 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1575 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1577 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1579 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1581 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1583 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1585 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1587 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1589 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1591 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1593 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1595 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1597 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1599 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1601 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1609 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1611 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1613 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1615 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1617 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1619 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1621 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1623 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1625 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1633 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1635 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1637 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1639 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1641 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1643 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1645 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1653 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1655 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1657 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1659 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1661 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1663 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1665 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1667 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1669 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1671 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1673 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1675 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1677 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1679 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1681 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1683 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1685 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1687 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1689 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1697 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1699 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1701 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1703 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1705 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1707 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1709 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1711 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1713 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1721 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1723 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1725 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1727 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1729 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1731 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 1733 "e:\\cudatoolkit\\include\\surface_indirect_functions.h"
static __forceinline void surfCubemapLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap); 
#line 76 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 77 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 89 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 118 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 91 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 92 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 104 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 133 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 106 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 107 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 119 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 148 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 121 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 122 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 134 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 163 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 136 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 137 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 149 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 178 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 151 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 152 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 164 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 193 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 166 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 167 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 179 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 208 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 181 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 182 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 194 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 223 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 196 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 197 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 209 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 238 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 211 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 212 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 224 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 253 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 226 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 227 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 239 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 268 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 241 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 242 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 254 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 283 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 256 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 257 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 269 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 298 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 271 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 272 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 284 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 313 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 286 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 287 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 299 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 328 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 301 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 302 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 314 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 343 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 316 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 317 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 329 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 358 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 331 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 332 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 344 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 373 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 346 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 347 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 359 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 388 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 367 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 368 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 380 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 409 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 382 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 383 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 395 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 424 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 397 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 398 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 410 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 439 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 412 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 413 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 425 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 454 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 427 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 428 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 440 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 469 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 442 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 443 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 455 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 484 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 457 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 458 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 470 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 499 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 472 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 473 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 485 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 514 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 487 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 488 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 500 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 529 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 508 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 509 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 521 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 550 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 523 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 524 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 536 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 565 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 538 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 539 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 551 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 580 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 553 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 554 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 566 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 595 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 568 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 569 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 581 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 610 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 583 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 584 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 596 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 625 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 598 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 599 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)boundaryMode;
#line 611 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 640 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 619 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 620 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 632 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 661 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 634 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 635 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 647 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 676 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 649 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 650 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 662 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 691 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 664 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 665 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 677 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 706 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 679 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 680 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 692 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 721 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 694 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 695 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 707 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 736 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 709 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 710 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 722 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 751 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 724 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 725 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 737 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 766 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 739 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 740 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 752 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 781 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 754 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 755 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 767 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 796 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 769 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 770 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 782 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 811 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 784 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 785 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 797 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 826 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 799 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 800 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 812 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 841 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 814 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 815 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 827 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 856 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 829 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 830 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 842 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 871 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 844 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 845 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 857 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 886 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 859 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 860 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 872 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 901 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 874 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 875 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 887 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 916 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 889 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 890 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 902 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 931 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 910 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 911 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 923 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 952 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 925 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 926 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 938 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 967 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 940 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 941 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 953 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 982 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 955 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 956 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 968 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 997 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 970 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 971 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 983 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1012 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 985 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 986 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 998 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1027 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1000 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1001 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1013 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1042 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1015 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1016 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1028 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1057 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1030 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1031 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1043 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1072 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1051 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1052 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1064 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1093 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1066 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1067 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1079 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1108 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1081 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1082 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1094 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1123 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1096 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1097 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1109 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1138 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1111 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1112 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1124 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1153 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1126 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1127 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1139 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1168 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1141 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 1142 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 1154 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1183 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1162 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1163 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1175 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1204 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1177 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1178 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1190 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1219 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1192 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1193 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1205 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1234 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1207 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1208 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1220 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1249 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1222 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1223 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1235 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1264 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1237 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1238 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1250 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1279 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1252 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1253 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1265 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1294 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1267 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1268 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1280 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1309 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1282 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1283 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1295 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1324 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1297 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1298 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1310 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1339 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1312 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1313 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1325 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1354 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1327 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1328 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1340 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1369 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1342 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1343 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1355 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1384 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1357 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1358 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1370 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1399 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1372 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1373 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1385 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1414 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1387 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1388 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1400 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1429 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1402 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1403 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1415 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1444 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1417 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1418 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1430 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1459 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1432 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1433 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1445 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1474 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1453 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1454 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1466 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1495 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1468 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1469 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1481 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1510 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1483 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1484 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1496 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1525 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1498 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1499 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1511 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1540 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1513 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1514 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1526 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1555 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1528 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1529 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1541 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1570 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1543 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1544 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1556 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1585 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1558 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1559 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1571 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1600 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1573 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1574 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1586 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1615 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1594 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1595 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1607 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1636 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1609 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1610 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1622 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1651 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1624 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1625 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1637 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1666 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1639 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1640 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1652 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1681 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1654 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1655 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1667 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1696 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1669 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1670 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1682 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1711 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1684 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 1685 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 1697 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1726 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1705 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1706 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1718 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1747 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1720 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1721 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1733 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1762 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1735 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1736 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1748 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1777 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1750 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1751 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1763 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1792 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1765 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1766 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1778 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1807 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1780 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1781 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1793 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1822 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1795 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1796 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1808 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1837 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1810 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1811 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1823 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1852 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1825 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1826 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1838 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1867 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1840 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1841 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1853 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1882 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1855 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1856 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1868 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1897 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1870 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1871 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1883 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1912 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1885 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1886 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1898 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1927 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1900 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1901 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1913 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1942 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1915 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1916 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1928 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1957 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1930 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1931 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1943 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1972 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1945 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1946 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1958 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 1987 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1960 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1961 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1973 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2002 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1975 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1976 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 1988 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2017 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 1996 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 1997 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2009 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2038 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2011 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2012 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2024 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2053 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2026 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2027 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2039 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2068 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2041 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2042 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2054 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2083 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2056 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2057 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2069 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2098 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2071 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2072 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2084 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2113 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2086 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2087 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2099 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2128 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2101 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2102 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2114 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2143 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2116 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2117 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2129 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2158 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2137 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2138 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2150 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2179 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2152 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2153 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2165 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2194 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2167 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2168 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2180 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2209 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2182 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2183 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2195 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2224 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2197 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2198 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2210 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2239 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2212 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2213 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2225 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2254 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2227 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2228 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 2240 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2269 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2248 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2249 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2261 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2290 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2263 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2264 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2276 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2305 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2278 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2279 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2291 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2320 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2293 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2294 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2306 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2335 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2308 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2309 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2321 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2350 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2323 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2324 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2336 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2365 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2338 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2339 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2351 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2380 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2353 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2354 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2366 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2395 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2368 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2369 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2381 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2410 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2383 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2384 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2396 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2425 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2398 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2399 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2411 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2440 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2413 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2414 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2426 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2455 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2428 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2429 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2441 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2470 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2443 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2444 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2456 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2485 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2458 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2459 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2471 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2500 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2473 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2474 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2486 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2515 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2488 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2489 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2501 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2530 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2503 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2504 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2516 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2545 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2518 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2519 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2531 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2560 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2539 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2540 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2552 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2581 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2554 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2555 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2567 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2596 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2569 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2570 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2582 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2611 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2584 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2585 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2597 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2626 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2599 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2600 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2612 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2641 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2614 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2615 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2627 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2656 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2629 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2630 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2642 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2671 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2644 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2645 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2657 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2686 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2659 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2660 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2672 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2701 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2680 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2681 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2693 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2722 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2695 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2696 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2708 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2737 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2710 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2711 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2723 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2752 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2725 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2726 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2738 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2767 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2740 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2741 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2753 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2782 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2755 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2756 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2768 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2797 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2770 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 2771 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 2783 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2812 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2791 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2792 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2804 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2833 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2806 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2807 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2819 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2848 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2821 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2822 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2834 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2863 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2836 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2837 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2849 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2878 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2851 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2852 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2864 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2893 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2866 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2867 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2879 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2908 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2881 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2882 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2894 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2923 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2896 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2897 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2909 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2938 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2911 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2912 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2924 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2953 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2926 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2927 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2939 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2968 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2941 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2942 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2954 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2983 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2956 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2957 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2969 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 2998 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2971 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2972 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2984 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3013 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 2986 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 2987 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 2999 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3028 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3001 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3002 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3014 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3043 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3016 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3017 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3029 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3058 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3031 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3032 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3044 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3073 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3046 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3047 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3059 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3088 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3061 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3062 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3074 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3103 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3082 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3083 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3095 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3124 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3097 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3098 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3110 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3139 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3112 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3113 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3125 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3154 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3127 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3128 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3140 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3169 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3142 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3143 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3155 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3184 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3157 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3158 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3170 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3199 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3172 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3173 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3185 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3214 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3187 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3188 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3200 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3229 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3202 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3203 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3215 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3244 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3223 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3224 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3236 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3265 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3238 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3239 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3251 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3280 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3253 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3254 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3266 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3295 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3268 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3269 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3281 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3310 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3283 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3284 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3296 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3325 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3298 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3299 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3311 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3340 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3313 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 3314 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 3326 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3355 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3334 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3335 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3347 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3376 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3349 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(signed char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3350 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3362 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3391 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3364 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3365 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3377 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3406 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3379 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned char *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3380 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3392 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3421 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3394 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uchar1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3395 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3407 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3436 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3409 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3410 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3422 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3451 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3424 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3425 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3437 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3466 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3439 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned short *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3440 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3452 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3481 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3454 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ushort1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3455 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3467 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3496 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3469 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3470 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3482 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3511 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3484 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3485 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3497 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3526 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3499 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3500 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3512 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3541 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3514 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uint1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3515 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3527 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3556 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3529 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(__int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3530 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3542 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3571 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3544 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(longlong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3545 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3557 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3586 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3559 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(unsigned __int64 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3560 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3572 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3601 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3574 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ulonglong1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3575 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3587 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3616 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3589 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3590 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3602 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3631 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3604 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float1 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3605 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3617 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3646 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3625 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3626 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3638 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3667 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3640 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uchar2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3641 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3653 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3682 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3655 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3656 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3668 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3697 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3670 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ushort2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3671 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3683 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3712 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3685 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3686 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3698 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3727 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3700 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uint2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3701 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3713 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3742 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3715 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(longlong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3716 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3728 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3757 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3730 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ulonglong2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3731 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3743 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3772 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3745 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float2 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3746 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3758 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3787 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3766 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(char4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3767 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3779 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3808 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3781 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uchar4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3782 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3794 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3823 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3796 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(short4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3797 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3809 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3838 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3811 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(ushort4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3812 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3824 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3853 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3826 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(int4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3827 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3839 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3868 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3841 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(uint4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3842 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3854 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3883 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3856 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredread(float4 *retVal, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 3857 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)retVal;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 3869 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 3898 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3877 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3878 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3888 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3913 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3890 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3891 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3901 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3926 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3903 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3904 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3914 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3939 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3916 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3917 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3927 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3952 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3929 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3930 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3940 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3965 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3942 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3943 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3953 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3978 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3955 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3956 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3966 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 3991 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3968 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3969 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3979 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4004 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3981 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3982 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 3992 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4017 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 3994 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 3995 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4005 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4030 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4007 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4008 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4018 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4043 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4020 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4021 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4031 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4056 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4033 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4034 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4044 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4069 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4046 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4047 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4057 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4082 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4059 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4060 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4070 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4095 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4072 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4073 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4083 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4108 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4085 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4086 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4096 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4121 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4098 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4099 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4112 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4141 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4114 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4115 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4128 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4157 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4136 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4137 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4147 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4172 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4149 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4150 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4160 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4185 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4162 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4163 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4173 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4198 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4175 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4176 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4186 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4211 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4188 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4189 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4199 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4224 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4201 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4202 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4212 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4237 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4214 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4215 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4225 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4250 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4227 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4228 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4238 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4263 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4240 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4241 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4254 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4283 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4262 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4263 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4273 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4298 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4275 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4276 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4286 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4311 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4288 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4289 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4299 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4324 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4301 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4302 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4312 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4337 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4314 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4315 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4325 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4350 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4327 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4328 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4338 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4363 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4340 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode) 
#line 4341 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)boundaryMode;
#line 4354 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4383 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4362 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4363 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4373 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4398 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4375 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4376 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4386 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4411 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4388 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4389 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4399 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4424 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4401 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4402 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4412 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4437 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4414 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4415 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4425 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4450 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4427 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4428 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4438 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4463 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4440 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4441 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4451 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4476 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4453 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4454 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4464 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4489 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4466 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4467 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4477 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4502 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4479 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4480 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4490 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4515 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4492 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4493 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4503 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4528 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4505 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4506 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4516 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4541 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4518 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4519 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4529 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4554 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4531 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4532 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4542 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4567 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4544 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4545 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4555 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4580 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4557 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4558 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4568 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4593 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4570 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4571 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4581 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4606 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4583 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4584 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4597 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4626 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4599 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4600 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4613 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4642 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4621 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4622 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4632 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4657 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4634 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4635 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4645 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4670 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4647 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4648 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4658 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4683 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4660 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4661 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4671 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4696 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4673 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4674 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4684 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4709 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4686 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4687 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4697 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4722 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4699 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4700 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4710 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4735 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4712 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4713 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4723 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4748 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4725 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4726 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4739 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4768 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4747 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4748 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4758 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4783 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4760 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4761 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4771 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4796 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4773 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4774 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4784 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4809 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4786 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4787 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4797 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4822 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4799 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4800 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4810 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4835 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4812 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4813 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4823 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4848 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4825 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode) 
#line 4826 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
#line 4839 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 4868 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4848 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4849 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4859 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4884 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4861 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4862 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4872 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4897 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4874 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4875 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4885 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4910 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4887 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4888 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4898 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4923 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4900 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4901 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4911 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4936 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4913 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4914 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4924 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4949 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4926 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4927 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4937 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4962 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4939 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4940 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4950 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4975 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4952 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4953 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4963 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 4988 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4965 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4966 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4976 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5001 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4978 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4979 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 4989 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5014 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 4991 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 4992 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5002 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5027 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5004 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5005 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5015 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5040 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5017 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5018 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5028 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5053 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5030 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5031 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5041 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5066 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5043 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5044 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5054 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5079 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5056 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5057 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5067 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5092 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5069 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5070 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5083 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5112 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5085 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5086 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5099 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5128 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5107 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5108 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5118 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5143 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5120 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5121 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5131 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5156 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5133 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5134 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5144 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5169 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5146 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5147 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5157 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5182 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5159 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5160 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5170 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5195 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5172 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5173 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5183 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5208 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5185 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5186 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5196 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5221 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5198 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5199 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5209 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5234 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5211 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5212 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5225 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5254 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5233 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5234 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5244 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5269 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5246 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5247 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5257 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5282 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5259 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5260 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5270 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5295 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5272 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5273 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5283 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5308 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5285 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5286 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5296 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5321 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5298 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5299 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5309 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5334 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5311 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf3Dwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode) 
#line 5312 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
#line 5325 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5354 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5333 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5334 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5344 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5369 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5346 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5347 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5357 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5382 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5359 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5360 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5370 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5395 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5372 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5373 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5383 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5408 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5385 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5386 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5396 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5421 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5398 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5399 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5409 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5434 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5411 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5412 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5422 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5447 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5424 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5425 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5435 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5460 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5437 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5438 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5448 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5473 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5450 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5451 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5461 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5486 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5463 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5464 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5474 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5499 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5476 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5477 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5487 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5512 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5489 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5490 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5500 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5525 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5502 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5503 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5513 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5538 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5515 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5516 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5526 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5551 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5528 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5529 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5539 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5564 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5541 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5542 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5552 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5577 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5554 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5555 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5568 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5597 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5570 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5571 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5584 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5613 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5592 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5593 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5603 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5628 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5605 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5606 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5616 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5641 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5618 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5619 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5629 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5654 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5631 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5632 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5642 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5667 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5644 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5645 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5655 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5680 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5657 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5658 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5668 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5693 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5670 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5671 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5681 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5706 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5683 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5684 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5694 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5719 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5696 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5697 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5710 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5739 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5718 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5719 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5729 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5754 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5731 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5732 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5742 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5767 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5744 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5745 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5755 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5780 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5757 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5758 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5768 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5793 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5770 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5771 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5781 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5806 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5783 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5784 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5794 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5819 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5796 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf1DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5797 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
#line 5810 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 5839 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5818 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5819 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5829 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5854 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5831 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5832 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5842 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5867 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5844 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5845 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5855 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5880 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5857 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5858 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5868 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5893 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5870 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5871 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5881 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5906 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5883 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5884 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5894 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5919 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5896 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5897 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5907 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5932 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5909 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5910 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5920 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5945 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5922 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5923 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5933 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5958 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5935 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5936 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5946 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5971 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5948 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5949 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5959 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5984 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5961 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5962 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5972 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 5997 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5974 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5975 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5985 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6010 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 5987 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 5988 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 5998 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6023 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6000 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6001 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6011 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6036 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6013 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6014 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6024 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6049 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6026 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6027 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6037 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6062 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6039 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6040 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6053 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6082 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6055 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6056 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6069 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6098 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6077 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6078 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6088 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6113 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6090 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6091 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6101 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6126 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6103 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6104 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6114 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6139 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6116 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6117 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6127 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6152 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6129 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6130 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6140 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6165 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6142 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6143 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6153 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6178 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6155 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6156 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6166 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6191 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6168 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6169 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6179 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6204 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6181 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6182 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6195 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6224 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6203 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6204 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6214 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6239 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6216 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6217 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6227 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6252 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6229 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6230 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6240 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6265 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6242 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6243 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6253 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6278 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6255 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6256 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6266 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6291 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6268 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6269 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6279 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6304 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6281 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surf2DLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode) 
#line 6282 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
#line 6295 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6324 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6303 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6304 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6314 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6339 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6316 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6317 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6327 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6352 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6329 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6330 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6340 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6365 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6342 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6343 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6353 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6378 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6355 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6356 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6366 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6391 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6368 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6369 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6379 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6404 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6381 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6382 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6392 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6417 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6394 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6395 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6405 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6430 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6407 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6408 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6418 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6443 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6420 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6421 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6431 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6456 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6433 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6434 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6444 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6469 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6446 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6447 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6457 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6482 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6459 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6460 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6470 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6495 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6472 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6473 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6483 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6508 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6485 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6486 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6496 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6521 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6498 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6499 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6509 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6534 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6511 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6512 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6522 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6547 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6524 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6525 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6538 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6567 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6540 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6541 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6554 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6583 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6562 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6563 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6573 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6598 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6575 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6576 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6586 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6611 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6588 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6589 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6599 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6624 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6601 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6602 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6612 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6637 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6614 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6615 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6625 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6650 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6627 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6628 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6638 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6663 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6640 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6641 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6651 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6676 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6653 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6654 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6664 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6689 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6666 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6667 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6680 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6709 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6688 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6689 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6699 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6724 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6701 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6702 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6712 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6737 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6714 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6715 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6725 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6750 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6727 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6728 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6738 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6763 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6740 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6741 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6751 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6776 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6753 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6754 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6764 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6789 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6766 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode) 
#line 6767 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
#line 6780 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 6809 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6788 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6789 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6799 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6824 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6801 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(signed char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6802 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6812 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6837 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6814 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6815 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6825 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6850 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6827 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned char data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6828 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6838 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6863 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6840 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6841 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6851 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6876 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6853 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6854 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6864 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6889 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6866 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6867 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6877 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6902 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6879 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned short data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6880 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6890 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6915 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6892 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6893 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6903 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6928 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6905 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6906 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6916 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6941 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6918 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6919 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6929 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6954 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6931 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6932 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6942 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6967 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6944 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6945 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6955 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6980 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6957 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(__int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6958 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6968 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 6993 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6970 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6971 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6981 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7006 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6983 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(unsigned __int64 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6984 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 6994 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7019 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 6996 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 6997 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7007 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7032 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7009 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7010 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7023 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7052 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7025 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float1 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7026 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7039 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7068 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7047 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7048 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7058 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7083 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7060 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7061 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7071 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7096 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7073 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7074 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7084 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7109 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7086 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7087 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7097 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7122 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7099 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7100 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7110 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7135 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7112 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7113 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7123 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7148 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7125 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(longlong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7126 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7136 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7161 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7138 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ulonglong2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7139 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7149 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7174 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7151 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float2 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7152 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7165 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7194 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7173 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(char4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7174 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7184 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7209 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7186 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uchar4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7187 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7197 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7222 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7199 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(short4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7200 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7210 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7235 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7212 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(ushort4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7213 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7223 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7248 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7225 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(int4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7226 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7236 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7261 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7238 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(uint4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7239 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7249 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}























#line 7274 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 7251 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
static __forceinline void surfCubemapLayeredwrite(float4 data, cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode) 
#line 7252 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
{int volatile ___ = 1;(void)data;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
#line 7265 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
::exit(___);}



























#line 7294 "e:\\cudatoolkit\\include\\surface_indirect_functions.hpp"
#line 71 "e:\\cudatoolkit\\include\\device_launch_parameters.h"
extern "C" const uint3 __device_builtin_variable_threadIdx; 
#line 72 "e:\\cudatoolkit\\include\\device_launch_parameters.h"
extern "C" const uint3 __device_builtin_variable_blockIdx; 
#line 73 "e:\\cudatoolkit\\include\\device_launch_parameters.h"
extern "C" const dim3 __device_builtin_variable_blockDim; 
#line 74 "e:\\cudatoolkit\\include\\device_launch_parameters.h"
extern "C" const dim3 __device_builtin_variable_gridDim; 
#line 75 "e:\\cudatoolkit\\include\\device_launch_parameters.h"
extern "C" const int __device_builtin_variable_warpSize; 
#line 172 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 173 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaLaunchKernel(const T *
#line 174 "E:/CudaToolKit/include\\cuda_runtime.h"
func, ::dim3 
#line 175 "E:/CudaToolKit/include\\cuda_runtime.h"
gridDim, ::dim3 
#line 176 "E:/CudaToolKit/include\\cuda_runtime.h"
blockDim, void **
#line 177 "E:/CudaToolKit/include\\cuda_runtime.h"
args, ::size_t 
#line 178 "E:/CudaToolKit/include\\cuda_runtime.h"
sharedMem = 0, ::cudaStream_t 
#line 179 "E:/CudaToolKit/include\\cuda_runtime.h"
stream = 0) 
#line 181 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 182 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaLaunchKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream); 
#line 183 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 210 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 211 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaSetupArgument(T 
#line 212 "E:/CudaToolKit/include\\cuda_runtime.h"
arg, ::size_t 
#line 213 "E:/CudaToolKit/include\\cuda_runtime.h"
offset) 
#line 215 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 216 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaSetupArgument((const void *)(&arg), sizeof(T), offset); 
#line 217 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 249 "E:/CudaToolKit/include\\cuda_runtime.h"
static __inline cudaError_t cudaEventCreate(cudaEvent_t *
#line 250 "E:/CudaToolKit/include\\cuda_runtime.h"
event, unsigned 
#line 251 "E:/CudaToolKit/include\\cuda_runtime.h"
flags) 
#line 253 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 254 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaEventCreateWithFlags(event, flags); 
#line 255 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 312 "E:/CudaToolKit/include\\cuda_runtime.h"
static __inline cudaError_t cudaMallocHost(void **
#line 313 "E:/CudaToolKit/include\\cuda_runtime.h"
ptr, size_t 
#line 314 "E:/CudaToolKit/include\\cuda_runtime.h"
size, unsigned 
#line 315 "E:/CudaToolKit/include\\cuda_runtime.h"
flags) 
#line 317 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 318 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaHostAlloc(ptr, size, flags); 
#line 319 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 321 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 322 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaHostAlloc(T **
#line 323 "E:/CudaToolKit/include\\cuda_runtime.h"
ptr, ::size_t 
#line 324 "E:/CudaToolKit/include\\cuda_runtime.h"
size, unsigned 
#line 325 "E:/CudaToolKit/include\\cuda_runtime.h"
flags) 
#line 327 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 328 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaHostAlloc((void **)((void *)ptr), size, flags); 
#line 329 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 331 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 332 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaHostGetDevicePointer(T **
#line 333 "E:/CudaToolKit/include\\cuda_runtime.h"
pDevice, void *
#line 334 "E:/CudaToolKit/include\\cuda_runtime.h"
pHost, unsigned 
#line 335 "E:/CudaToolKit/include\\cuda_runtime.h"
flags) 
#line 337 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 338 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags); 
#line 339 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 410 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 411 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaMallocManaged(T **
#line 412 "E:/CudaToolKit/include\\cuda_runtime.h"
devPtr, ::size_t 
#line 413 "E:/CudaToolKit/include\\cuda_runtime.h"
size, unsigned 
#line 414 "E:/CudaToolKit/include\\cuda_runtime.h"
flags = 1) 
#line 416 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 417 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaMallocManaged((void **)((void *)devPtr), size, flags); 
#line 418 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 486 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 487 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaStreamAttachMemAsync(::cudaStream_t 
#line 488 "E:/CudaToolKit/include\\cuda_runtime.h"
stream, T *
#line 489 "E:/CudaToolKit/include\\cuda_runtime.h"
devPtr, ::size_t 
#line 490 "E:/CudaToolKit/include\\cuda_runtime.h"
length = 0, unsigned 
#line 491 "E:/CudaToolKit/include\\cuda_runtime.h"
flags = 4) 
#line 493 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 494 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaStreamAttachMemAsync(stream, (void *)devPtr, length, flags); 
#line 495 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 497 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 498 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaMalloc(T **
#line 499 "E:/CudaToolKit/include\\cuda_runtime.h"
devPtr, ::size_t 
#line 500 "E:/CudaToolKit/include\\cuda_runtime.h"
size) 
#line 502 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 503 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaMalloc((void **)((void *)devPtr), size); 
#line 504 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 506 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 507 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaMallocHost(T **
#line 508 "E:/CudaToolKit/include\\cuda_runtime.h"
ptr, ::size_t 
#line 509 "E:/CudaToolKit/include\\cuda_runtime.h"
size, unsigned 
#line 510 "E:/CudaToolKit/include\\cuda_runtime.h"
flags = 0) 
#line 512 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 513 "E:/CudaToolKit/include\\cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags); 
#line 514 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 516 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 517 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaMallocPitch(T **
#line 518 "E:/CudaToolKit/include\\cuda_runtime.h"
devPtr, ::size_t *
#line 519 "E:/CudaToolKit/include\\cuda_runtime.h"
pitch, ::size_t 
#line 520 "E:/CudaToolKit/include\\cuda_runtime.h"
width, ::size_t 
#line 521 "E:/CudaToolKit/include\\cuda_runtime.h"
height) 
#line 523 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 524 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaMallocPitch((void **)((void *)devPtr), pitch, width, height); 
#line 525 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 562 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 563 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaMemcpyToSymbol(const T &
#line 564 "E:/CudaToolKit/include\\cuda_runtime.h"
symbol, const void *
#line 565 "E:/CudaToolKit/include\\cuda_runtime.h"
src, ::size_t 
#line 566 "E:/CudaToolKit/include\\cuda_runtime.h"
count, ::size_t 
#line 567 "E:/CudaToolKit/include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 568 "E:/CudaToolKit/include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice) 
#line 570 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 571 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind); 
#line 572 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 614 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 615 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
#line 616 "E:/CudaToolKit/include\\cuda_runtime.h"
symbol, const void *
#line 617 "E:/CudaToolKit/include\\cuda_runtime.h"
src, ::size_t 
#line 618 "E:/CudaToolKit/include\\cuda_runtime.h"
count, ::size_t 
#line 619 "E:/CudaToolKit/include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 620 "E:/CudaToolKit/include\\cuda_runtime.h"
kind = cudaMemcpyHostToDevice, ::cudaStream_t 
#line 621 "E:/CudaToolKit/include\\cuda_runtime.h"
stream = 0) 
#line 623 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 624 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream); 
#line 625 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 660 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 661 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaMemcpyFromSymbol(void *
#line 662 "E:/CudaToolKit/include\\cuda_runtime.h"
dst, const T &
#line 663 "E:/CudaToolKit/include\\cuda_runtime.h"
symbol, ::size_t 
#line 664 "E:/CudaToolKit/include\\cuda_runtime.h"
count, ::size_t 
#line 665 "E:/CudaToolKit/include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 666 "E:/CudaToolKit/include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost) 
#line 668 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 669 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind); 
#line 670 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 712 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 713 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
#line 714 "E:/CudaToolKit/include\\cuda_runtime.h"
dst, const T &
#line 715 "E:/CudaToolKit/include\\cuda_runtime.h"
symbol, ::size_t 
#line 716 "E:/CudaToolKit/include\\cuda_runtime.h"
count, ::size_t 
#line 717 "E:/CudaToolKit/include\\cuda_runtime.h"
offset = 0, ::cudaMemcpyKind 
#line 718 "E:/CudaToolKit/include\\cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, ::cudaStream_t 
#line 719 "E:/CudaToolKit/include\\cuda_runtime.h"
stream = 0) 
#line 721 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 722 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream); 
#line 723 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 745 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 746 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaGetSymbolAddress(void **
#line 747 "E:/CudaToolKit/include\\cuda_runtime.h"
devPtr, const T &
#line 748 "E:/CudaToolKit/include\\cuda_runtime.h"
symbol) 
#line 750 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 751 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaGetSymbolAddress(devPtr, (const void *)(&symbol)); 
#line 752 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 774 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 775 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaGetSymbolSize(::size_t *
#line 776 "E:/CudaToolKit/include\\cuda_runtime.h"
size, const T &
#line 777 "E:/CudaToolKit/include\\cuda_runtime.h"
symbol) 
#line 779 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 780 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaGetSymbolSize(size, (const void *)(&symbol)); 
#line 781 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 817 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 818 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaBindTexture(::size_t *
#line 819 "E:/CudaToolKit/include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 820 "E:/CudaToolKit/include\\cuda_runtime.h"
tex, const void *
#line 821 "E:/CudaToolKit/include\\cuda_runtime.h"
devPtr, const ::cudaChannelFormatDesc &
#line 822 "E:/CudaToolKit/include\\cuda_runtime.h"
desc, ::size_t 
#line 823 "E:/CudaToolKit/include\\cuda_runtime.h"
size = 4294967295U) 
#line 825 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 826 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaBindTexture(offset, &tex, devPtr, &desc, size); 
#line 827 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 862 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 863 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaBindTexture(::size_t *
#line 864 "E:/CudaToolKit/include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 865 "E:/CudaToolKit/include\\cuda_runtime.h"
tex, const void *
#line 866 "E:/CudaToolKit/include\\cuda_runtime.h"
devPtr, ::size_t 
#line 867 "E:/CudaToolKit/include\\cuda_runtime.h"
size = 4294967295U) 
#line 869 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 870 "E:/CudaToolKit/include\\cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size); 
#line 871 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 918 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 919 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaBindTexture2D(::size_t *
#line 920 "E:/CudaToolKit/include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 921 "E:/CudaToolKit/include\\cuda_runtime.h"
tex, const void *
#line 922 "E:/CudaToolKit/include\\cuda_runtime.h"
devPtr, const ::cudaChannelFormatDesc &
#line 923 "E:/CudaToolKit/include\\cuda_runtime.h"
desc, ::size_t 
#line 924 "E:/CudaToolKit/include\\cuda_runtime.h"
width, ::size_t 
#line 925 "E:/CudaToolKit/include\\cuda_runtime.h"
height, ::size_t 
#line 926 "E:/CudaToolKit/include\\cuda_runtime.h"
pitch) 
#line 928 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 929 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch); 
#line 930 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 976 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 977 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaBindTexture2D(::size_t *
#line 978 "E:/CudaToolKit/include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 979 "E:/CudaToolKit/include\\cuda_runtime.h"
tex, const void *
#line 980 "E:/CudaToolKit/include\\cuda_runtime.h"
devPtr, ::size_t 
#line 981 "E:/CudaToolKit/include\\cuda_runtime.h"
width, ::size_t 
#line 982 "E:/CudaToolKit/include\\cuda_runtime.h"
height, ::size_t 
#line 983 "E:/CudaToolKit/include\\cuda_runtime.h"
pitch) 
#line 985 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 986 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &(tex.channelDesc), width, height, pitch); 
#line 987 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1018 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1019 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode>  &
#line 1020 "E:/CudaToolKit/include\\cuda_runtime.h"
tex, ::cudaArray_const_t 
#line 1021 "E:/CudaToolKit/include\\cuda_runtime.h"
array, const ::cudaChannelFormatDesc &
#line 1022 "E:/CudaToolKit/include\\cuda_runtime.h"
desc) 
#line 1024 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1025 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaBindTextureToArray(&tex, array, &desc); 
#line 1026 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1056 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1057 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode>  &
#line 1058 "E:/CudaToolKit/include\\cuda_runtime.h"
tex, ::cudaArray_const_t 
#line 1059 "E:/CudaToolKit/include\\cuda_runtime.h"
array) 
#line 1061 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1062 "E:/CudaToolKit/include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 1063 "E:/CudaToolKit/include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetChannelDesc(&desc, array); 
#line 1065 "E:/CudaToolKit/include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err; 
#line 1066 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1097 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1098 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode>  &
#line 1099 "E:/CudaToolKit/include\\cuda_runtime.h"
tex, ::cudaMipmappedArray_const_t 
#line 1100 "E:/CudaToolKit/include\\cuda_runtime.h"
mipmappedArray, const ::cudaChannelFormatDesc &
#line 1101 "E:/CudaToolKit/include\\cuda_runtime.h"
desc) 
#line 1103 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1104 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc); 
#line 1105 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1135 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1136 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode>  &
#line 1137 "E:/CudaToolKit/include\\cuda_runtime.h"
tex, ::cudaMipmappedArray_const_t 
#line 1138 "E:/CudaToolKit/include\\cuda_runtime.h"
mipmappedArray) 
#line 1140 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1141 "E:/CudaToolKit/include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 1142 "E:/CudaToolKit/include\\cuda_runtime.h"
::cudaArray_t levelArray; 
#line 1143 "E:/CudaToolKit/include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0); 
#line 1145 "E:/CudaToolKit/include\\cuda_runtime.h"
if (err != (cudaSuccess)) { 
#line 1146 "E:/CudaToolKit/include\\cuda_runtime.h"
return err; 
#line 1147 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1148 "E:/CudaToolKit/include\\cuda_runtime.h"
err = ::cudaGetChannelDesc(&desc, levelArray); 
#line 1150 "E:/CudaToolKit/include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err; 
#line 1151 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1174 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1175 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode>  &
#line 1176 "E:/CudaToolKit/include\\cuda_runtime.h"
tex) 
#line 1178 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1179 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaUnbindTexture(&tex); 
#line 1180 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1208 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static __inline ::cudaError_t 
#line 1209 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaGetTextureAlignmentOffset(::size_t *
#line 1210 "E:/CudaToolKit/include\\cuda_runtime.h"
offset, const texture< T, dim, readMode>  &
#line 1211 "E:/CudaToolKit/include\\cuda_runtime.h"
tex) 
#line 1213 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1214 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaGetTextureAlignmentOffset(offset, &tex); 
#line 1215 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1260 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1261 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaFuncSetCacheConfig(T *
#line 1262 "E:/CudaToolKit/include\\cuda_runtime.h"
func, ::cudaFuncCache 
#line 1263 "E:/CudaToolKit/include\\cuda_runtime.h"
cacheConfig) 
#line 1265 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1266 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaFuncSetCacheConfig((const void *)func, cacheConfig); 
#line 1267 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1269 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1270 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaFuncSetSharedMemConfig(T *
#line 1271 "E:/CudaToolKit/include\\cuda_runtime.h"
func, ::cudaSharedMemConfig 
#line 1272 "E:/CudaToolKit/include\\cuda_runtime.h"
config) 
#line 1274 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1275 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaFuncSetSharedMemConfig((const void *)func, config); 
#line 1276 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1305 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1306 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessor(int *
#line 1307 "E:/CudaToolKit/include\\cuda_runtime.h"
numBlocks, T 
#line 1308 "E:/CudaToolKit/include\\cuda_runtime.h"
func, int 
#line 1309 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSize, ::size_t 
#line 1310 "E:/CudaToolKit/include\\cuda_runtime.h"
dynamicSMemSize) 
#line 1311 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1312 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, 0); 
#line 1313 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1356 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1357 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *
#line 1358 "E:/CudaToolKit/include\\cuda_runtime.h"
numBlocks, T 
#line 1359 "E:/CudaToolKit/include\\cuda_runtime.h"
func, int 
#line 1360 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSize, ::size_t 
#line 1361 "E:/CudaToolKit/include\\cuda_runtime.h"
dynamicSMemSize, unsigned 
#line 1362 "E:/CudaToolKit/include\\cuda_runtime.h"
flags) 
#line 1363 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1364 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, flags); 
#line 1365 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1370 "E:/CudaToolKit/include\\cuda_runtime.h"
class __cudaOccupancyB2DHelper { 
#line 1371 "E:/CudaToolKit/include\\cuda_runtime.h"
size_t n; 
#line 1373 "E:/CudaToolKit/include\\cuda_runtime.h"
public: __cudaOccupancyB2DHelper(size_t n_) : n(n_) { } 
#line 1374 "E:/CudaToolKit/include\\cuda_runtime.h"
size_t operator()(int) 
#line 1375 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1376 "E:/CudaToolKit/include\\cuda_runtime.h"
return n; 
#line 1377 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1378 "E:/CudaToolKit/include\\cuda_runtime.h"
}; 
#line 1380 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class UnaryFunction, class T> static __inline ::cudaError_t 
#line 1381 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(int *
#line 1382 "E:/CudaToolKit/include\\cuda_runtime.h"
minGridSize, int *
#line 1383 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSize, T 
#line 1384 "E:/CudaToolKit/include\\cuda_runtime.h"
func, UnaryFunction 
#line 1385 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeToDynamicSMemSize, int 
#line 1386 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeLimit = 0, unsigned 
#line 1387 "E:/CudaToolKit/include\\cuda_runtime.h"
flags = 0) 
#line 1388 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1389 "E:/CudaToolKit/include\\cuda_runtime.h"
::cudaError_t status; 
#line 1392 "E:/CudaToolKit/include\\cuda_runtime.h"
int device; 
#line 1393 "E:/CudaToolKit/include\\cuda_runtime.h"
::cudaFuncAttributes attr; 
#line 1396 "E:/CudaToolKit/include\\cuda_runtime.h"
int maxThreadsPerMultiProcessor; 
#line 1397 "E:/CudaToolKit/include\\cuda_runtime.h"
int warpSize; 
#line 1398 "E:/CudaToolKit/include\\cuda_runtime.h"
int devMaxThreadsPerBlock; 
#line 1399 "E:/CudaToolKit/include\\cuda_runtime.h"
int multiProcessorCount; 
#line 1400 "E:/CudaToolKit/include\\cuda_runtime.h"
int funcMaxThreadsPerBlock; 
#line 1401 "E:/CudaToolKit/include\\cuda_runtime.h"
int occupancyLimit; 
#line 1402 "E:/CudaToolKit/include\\cuda_runtime.h"
int granularity; 
#line 1405 "E:/CudaToolKit/include\\cuda_runtime.h"
int maxBlockSize = 0; 
#line 1406 "E:/CudaToolKit/include\\cuda_runtime.h"
int numBlocks = 0; 
#line 1407 "E:/CudaToolKit/include\\cuda_runtime.h"
int maxOccupancy = 0; 
#line 1410 "E:/CudaToolKit/include\\cuda_runtime.h"
int blockSizeToTryAligned; 
#line 1411 "E:/CudaToolKit/include\\cuda_runtime.h"
int blockSizeToTry; 
#line 1412 "E:/CudaToolKit/include\\cuda_runtime.h"
int blockSizeLimitAligned; 
#line 1413 "E:/CudaToolKit/include\\cuda_runtime.h"
int occupancyInBlocks; 
#line 1414 "E:/CudaToolKit/include\\cuda_runtime.h"
int occupancyInThreads; 
#line 1415 "E:/CudaToolKit/include\\cuda_runtime.h"
int dynamicSMemSize; 
#line 1421 "E:/CudaToolKit/include\\cuda_runtime.h"
if (((!minGridSize) || (!blockSize)) || (!func)) { 
#line 1422 "E:/CudaToolKit/include\\cuda_runtime.h"
return cudaErrorInvalidValue; 
#line 1423 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1429 "E:/CudaToolKit/include\\cuda_runtime.h"
status = ::cudaGetDevice(&device); 
#line 1430 "E:/CudaToolKit/include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1431 "E:/CudaToolKit/include\\cuda_runtime.h"
return status; 
#line 1432 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1434 "E:/CudaToolKit/include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&maxThreadsPerMultiProcessor, cudaDevAttrMaxThreadsPerMultiProcessor, device); 
#line 1438 "E:/CudaToolKit/include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1439 "E:/CudaToolKit/include\\cuda_runtime.h"
return status; 
#line 1440 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1442 "E:/CudaToolKit/include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&warpSize, cudaDevAttrWarpSize, device); 
#line 1446 "E:/CudaToolKit/include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1447 "E:/CudaToolKit/include\\cuda_runtime.h"
return status; 
#line 1448 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1450 "E:/CudaToolKit/include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&devMaxThreadsPerBlock, cudaDevAttrMaxThreadsPerBlock, device); 
#line 1454 "E:/CudaToolKit/include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1455 "E:/CudaToolKit/include\\cuda_runtime.h"
return status; 
#line 1456 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1458 "E:/CudaToolKit/include\\cuda_runtime.h"
status = cudaDeviceGetAttribute(&multiProcessorCount, cudaDevAttrMultiProcessorCount, device); 
#line 1462 "E:/CudaToolKit/include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1463 "E:/CudaToolKit/include\\cuda_runtime.h"
return status; 
#line 1464 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1466 "E:/CudaToolKit/include\\cuda_runtime.h"
status = cudaFuncGetAttributes(&attr, func); 
#line 1467 "E:/CudaToolKit/include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1468 "E:/CudaToolKit/include\\cuda_runtime.h"
return status; 
#line 1469 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1471 "E:/CudaToolKit/include\\cuda_runtime.h"
funcMaxThreadsPerBlock = (attr.maxThreadsPerBlock); 
#line 1477 "E:/CudaToolKit/include\\cuda_runtime.h"
occupancyLimit = maxThreadsPerMultiProcessor; 
#line 1478 "E:/CudaToolKit/include\\cuda_runtime.h"
granularity = warpSize; 
#line 1480 "E:/CudaToolKit/include\\cuda_runtime.h"
if (blockSizeLimit == 0) { 
#line 1481 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock; 
#line 1482 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1484 "E:/CudaToolKit/include\\cuda_runtime.h"
if (devMaxThreadsPerBlock < blockSizeLimit) { 
#line 1485 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock; 
#line 1486 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1488 "E:/CudaToolKit/include\\cuda_runtime.h"
if (funcMaxThreadsPerBlock < blockSizeLimit) { 
#line 1489 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeLimit = funcMaxThreadsPerBlock; 
#line 1490 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1492 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeLimitAligned = (((blockSizeLimit + (granularity - 1)) / granularity) * granularity); 
#line 1494 "E:/CudaToolKit/include\\cuda_runtime.h"
for (blockSizeToTryAligned = blockSizeLimitAligned; blockSizeToTryAligned > 0; blockSizeToTryAligned -= granularity) { 
#line 1498 "E:/CudaToolKit/include\\cuda_runtime.h"
if (blockSizeLimit < blockSizeToTryAligned) { 
#line 1499 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeToTry = blockSizeLimit; 
#line 1500 "E:/CudaToolKit/include\\cuda_runtime.h"
} else { 
#line 1501 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeToTry = blockSizeToTryAligned; 
#line 1502 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1504 "E:/CudaToolKit/include\\cuda_runtime.h"
dynamicSMemSize = blockSizeToDynamicSMemSize(blockSizeToTry); 
#line 1506 "E:/CudaToolKit/include\\cuda_runtime.h"
status = cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(&occupancyInBlocks, func, blockSizeToTry, dynamicSMemSize, flags); 
#line 1513 "E:/CudaToolKit/include\\cuda_runtime.h"
if (status != (cudaSuccess)) { 
#line 1514 "E:/CudaToolKit/include\\cuda_runtime.h"
return status; 
#line 1515 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1517 "E:/CudaToolKit/include\\cuda_runtime.h"
occupancyInThreads = (blockSizeToTry * occupancyInBlocks); 
#line 1519 "E:/CudaToolKit/include\\cuda_runtime.h"
if (occupancyInThreads > maxOccupancy) { 
#line 1520 "E:/CudaToolKit/include\\cuda_runtime.h"
maxBlockSize = blockSizeToTry; 
#line 1521 "E:/CudaToolKit/include\\cuda_runtime.h"
numBlocks = occupancyInBlocks; 
#line 1522 "E:/CudaToolKit/include\\cuda_runtime.h"
maxOccupancy = occupancyInThreads; 
#line 1523 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1527 "E:/CudaToolKit/include\\cuda_runtime.h"
if (occupancyLimit == maxOccupancy) { 
#line 1528 "E:/CudaToolKit/include\\cuda_runtime.h"
break; 
#line 1529 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1530 "E:/CudaToolKit/include\\cuda_runtime.h"
}  
#line 1538 "E:/CudaToolKit/include\\cuda_runtime.h"
(*minGridSize) = (numBlocks * multiProcessorCount); 
#line 1539 "E:/CudaToolKit/include\\cuda_runtime.h"
(*blockSize) = maxBlockSize; 
#line 1541 "E:/CudaToolKit/include\\cuda_runtime.h"
return status; 
#line 1542 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1575 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class UnaryFunction, class T> static __inline ::cudaError_t 
#line 1576 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMem(int *
#line 1577 "E:/CudaToolKit/include\\cuda_runtime.h"
minGridSize, int *
#line 1578 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSize, T 
#line 1579 "E:/CudaToolKit/include\\cuda_runtime.h"
func, UnaryFunction 
#line 1580 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeToDynamicSMemSize, int 
#line 1581 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeLimit = 0) 
#line 1582 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1583 "E:/CudaToolKit/include\\cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, blockSizeLimit, 0); 
#line 1584 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1620 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1621 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSize(int *
#line 1622 "E:/CudaToolKit/include\\cuda_runtime.h"
minGridSize, int *
#line 1623 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSize, T 
#line 1624 "E:/CudaToolKit/include\\cuda_runtime.h"
func, ::size_t 
#line 1625 "E:/CudaToolKit/include\\cuda_runtime.h"
dynamicSMemSize = 0, int 
#line 1626 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeLimit = 0) 
#line 1627 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1628 "E:/CudaToolKit/include\\cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((::__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, 0); 
#line 1629 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1679 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1680 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeWithFlags(int *
#line 1681 "E:/CudaToolKit/include\\cuda_runtime.h"
minGridSize, int *
#line 1682 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSize, T 
#line 1683 "E:/CudaToolKit/include\\cuda_runtime.h"
func, ::size_t 
#line 1684 "E:/CudaToolKit/include\\cuda_runtime.h"
dynamicSMemSize = 0, int 
#line 1685 "E:/CudaToolKit/include\\cuda_runtime.h"
blockSizeLimit = 0, unsigned 
#line 1686 "E:/CudaToolKit/include\\cuda_runtime.h"
flags = 0) 
#line 1687 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1688 "E:/CudaToolKit/include\\cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((::__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, flags); 
#line 1689 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1772 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> static __inline ::cudaError_t 
#line 1773 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaLaunch(T *
#line 1774 "E:/CudaToolKit/include\\cuda_runtime.h"
func) 
#line 1776 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1777 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaLaunch((const void *)func); 
#line 1778 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1809 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T> __inline ::cudaError_t 
#line 1810 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaFuncGetAttributes(::cudaFuncAttributes *
#line 1811 "E:/CudaToolKit/include\\cuda_runtime.h"
attr, T *
#line 1812 "E:/CudaToolKit/include\\cuda_runtime.h"
entry) 
#line 1814 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1815 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaFuncGetAttributes(attr, (const void *)entry); 
#line 1816 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1838 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim> static __inline ::cudaError_t 
#line 1839 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim>  &
#line 1840 "E:/CudaToolKit/include\\cuda_runtime.h"
surf, ::cudaArray_const_t 
#line 1841 "E:/CudaToolKit/include\\cuda_runtime.h"
array, const ::cudaChannelFormatDesc &
#line 1842 "E:/CudaToolKit/include\\cuda_runtime.h"
desc) 
#line 1844 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1845 "E:/CudaToolKit/include\\cuda_runtime.h"
return ::cudaBindSurfaceToArray(&surf, array, &desc); 
#line 1846 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1867 "E:/CudaToolKit/include\\cuda_runtime.h"
template< class T, int dim> static __inline ::cudaError_t 
#line 1868 "E:/CudaToolKit/include\\cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim>  &
#line 1869 "E:/CudaToolKit/include\\cuda_runtime.h"
surf, ::cudaArray_const_t 
#line 1870 "E:/CudaToolKit/include\\cuda_runtime.h"
array) 
#line 1872 "E:/CudaToolKit/include\\cuda_runtime.h"
{ 
#line 1873 "E:/CudaToolKit/include\\cuda_runtime.h"
::cudaChannelFormatDesc desc; 
#line 1874 "E:/CudaToolKit/include\\cuda_runtime.h"
::cudaError_t err = ::cudaGetChannelDesc(&desc, array); 
#line 1876 "E:/CudaToolKit/include\\cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err; 
#line 1877 "E:/CudaToolKit/include\\cuda_runtime.h"
} 
#line 1891 "E:/CudaToolKit/include\\cuda_runtime.h"
#pragma warning(pop)
#line 1 "E:/github/whippletree/delay.cu"
volatile float BigData[1024 * 1024]; 
#line 1 "delay.compute_35.cudafe1.stub.c"

#line 1 "delay.compute_35.cudafe1.stub.c"
#line 1 "e:\\github\\whippletree\\examples\\queuing\\build\\cmakefiles\\queuing.dir\\__\\__\\delay.compute_35.cudafe1.stub.c"


#line 1 "E:/CudaToolKit/include\\crt/host_runtime.h"







































































#line 73 "E:/CudaToolKit/include\\crt/host_runtime.h"

template <typename T>
static inline T *__cudaAddressOf(T &val) 
{
    return (T *)((void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val)))));
}





        











          



          







#line 109 "E:/CudaToolKit/include\\crt/host_runtime.h"


#line 112 "E:/CudaToolKit/include\\crt/host_runtime.h"




#line 117 "E:/CudaToolKit/include\\crt/host_runtime.h"


#line 120 "E:/CudaToolKit/include\\crt/host_runtime.h"

static void ____nv_dummy_param_ref(void *param) { volatile static void **__ref; __ref = (volatile void **)param; }




extern "C" {
void __cudaRegisterLinkedBinary_24_delay_compute_20_cpp1_ii_8c685ecf ( void (*)(void **), void *, void *, void (*)(void *));
}




extern "C" {

#pragma data_seg("__nv_module_id")
  static const __declspec(allocate("__nv_module_id")) unsigned char __module_id_str[] = "_24_delay_compute_20_cpp1_ii_8c685ecf";
#pragma data_seg()




#line 143 "E:/CudaToolKit/include\\crt/host_runtime.h"









}

extern "C" {
extern void** __stdcall __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __stdcall __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __stdcall __cudaRegisterVar(
        void **fatCubinHandle,
        char  *hostVar,
        char  *deviceAddress,
  const char  *deviceName,
        int    ext,
        int    size,
        int    constant,
        int    global
);

extern void __stdcall __cudaRegisterManagedVar(
        void **fatCubinHandle,
        void **hostVarPtrAddress,
        char  *deviceAddress,
  const char  *deviceName,
        int    ext,
        int    size,
        int    constant,
        int    global
);

extern char __stdcall __cudaInitModule(
        void **fatCubinHandle
);

extern void __stdcall __cudaRegisterTexture(
        void                    **fatCubinHandle,
  const struct textureReference  *hostVar,
  const void                    **deviceAddress,
  const char                     *deviceName,
        int                       dim,       
        int                       norm,      
        int                        ext        
);

extern void __stdcall __cudaRegisterSurface(
        void                    **fatCubinHandle,
  const struct surfaceReference  *hostVar,
  const void                    **deviceAddress,
  const char                     *deviceName,
        int                       dim,       
        int                       ext        
);

extern void __stdcall __cudaRegisterFunction(
        void   **fatCubinHandle,
  const char    *hostFun,
        char    *deviceFun,
  const char    *deviceName,
        int      thread_limit,
        uint3   *tid,
        uint3   *bid,
        dim3    *bDim,
        dim3    *gDim,
        int     *wSize
);




#line 225 "E:/CudaToolKit/include\\crt/host_runtime.h"


#line 228 "E:/CudaToolKit/include\\crt/host_runtime.h"
extern int __cdecl atexit(void(__cdecl *)(void));
#line 230 "E:/CudaToolKit/include\\crt/host_runtime.h"

}

static void **__cudaFatCubinHandle;

static void __cdecl __cudaUnregisterBinaryUtil(void)
{
  ____nv_dummy_param_ref((void *)&__cudaFatCubinHandle);
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

static char __nv_init_managed_rt_with_module(void **handle)
{
  return __cudaInitModule(handle);
}

#line 1 "E:/CudaToolKit/include\\common_functions.h"




















































































































































































































#line 214 "E:/CudaToolKit/include\\common_functions.h"








#line 223 "E:/CudaToolKit/include\\common_functions.h"

#line 1 "e:\\cudatoolkit\\include\\math_functions.h"
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 9714 "e:\\cudatoolkit\\include\\math_functions.h"





#line 9720 "e:\\cudatoolkit\\include\\math_functions.h"


















































































































































































































#line 9931 "e:\\cudatoolkit\\include\\math_functions.h"







#line 1 "E:/CudaToolKit/include\\crt/func_macro.h"













































#line 47 "E:/CudaToolKit/include\\crt/func_macro.h"





#line 53 "E:/CudaToolKit/include\\crt/func_macro.h"









#line 63 "E:/CudaToolKit/include\\crt/func_macro.h"







#line 71 "E:/CudaToolKit/include\\crt/func_macro.h"

#line 73 "E:/CudaToolKit/include\\crt/func_macro.h"

#line 75 "E:/CudaToolKit/include\\crt/func_macro.h"
#line 9939 "e:\\cudatoolkit\\include\\math_functions.h"



#pragma warning(disable : 4211)

#line 9945 "e:\\cudatoolkit\\include\\math_functions.h"

static inline double rsqrt(double a);

static inline double rcbrt(double a);

static inline double sinpi(double a);

static inline double cospi(double a);

static inline void sincospi(double a, double *sptr, double *cptr);

static inline double erfinv(double a);

static inline double erfcinv(double a);

static inline double normcdfinv(double a);

static inline double normcdf(double a);

static inline double erfcx(double a);

static inline float rsqrtf(float a);

static inline float rcbrtf(float a);

static inline float sinpif(float a);

static inline float cospif(float a);

static inline void sincospif(float a, float *sptr, float *cptr);

static inline float erfinvf(float a);

static inline float erfcinvf(float a);

static inline float normcdfinvf(float a);

static inline float normcdff(float a);

static inline float erfcxf(float a);

static inline int min(int a, int b);

static inline unsigned int umin(unsigned int a, unsigned int b);

static inline long long int llmin(long long int a, long long int b);

static inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b);

static inline int max(int a, int b);

static inline unsigned int umax(unsigned int a, unsigned int b);

static inline long long int llmax(long long int a, long long int b);

static inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b);



static inline int __isnan(double a);

#line 10007 "e:\\cudatoolkit\\include\\math_functions.h"



static inline void sincos(double a, double *sptr, double *cptr);

#line 10013 "e:\\cudatoolkit\\include\\math_functions.h"



static inline double exp10(double a);

static inline float exp10f(float a);

static inline void sincosf(float a, float *sptr, float *cptr);

static inline int __isinf(double a);

#line 10025 "e:\\cudatoolkit\\include\\math_functions.h"





#line 10031 "e:\\cudatoolkit\\include\\math_functions.h"



static inline int __signbit(double a);

static inline int __finite(double a);

static inline int __signbitl(long double a);

static inline int __signbitf(float a);

static inline int __finitel(long double a);

static inline int __finitef(float a);

static inline int __isinfl(long double a);

static inline int __isinff(float a);

static inline int __isnanl(long double a);

static inline int __isnanf(float a);

#line 10055 "e:\\cudatoolkit\\include\\math_functions.h"













































































































































#line 10197 "e:\\cudatoolkit\\include\\math_functions.h"



#pragma warning(default: 4211)

#line 10203 "e:\\cudatoolkit\\include\\math_functions.h"

#line 10205 "e:\\cudatoolkit\\include\\math_functions.h"

#line 10207 "e:\\cudatoolkit\\include\\math_functions.h"



#line 1 "e:\\cudatoolkit\\include\\math_functions.hpp"
























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1050 "e:\\cudatoolkit\\include\\math_functions.hpp"


#line 1 "e:\\cudatoolkit\\include\\host_defines.h"
















































































































































































































































#line 242 "e:\\cudatoolkit\\include\\host_defines.h"
#line 1053 "e:\\cudatoolkit\\include\\math_functions.hpp"
#line 1 "e:\\cudatoolkit\\include\\math_constants.h"























































































































































#line 153 "e:\\cudatoolkit\\include\\math_constants.h"
#line 1054 "e:\\cudatoolkit\\include\\math_functions.hpp"


























































































































































































































































































































































































































































































































































































#line 1625 "e:\\cudatoolkit\\include\\math_functions.hpp"







#line 1 "E:/CudaToolKit/include\\crt/func_macro.h"









































































#line 75 "E:/CudaToolKit/include\\crt/func_macro.h"
#line 1633 "e:\\cudatoolkit\\include\\math_functions.hpp"



#pragma warning(disable : 4211)

#line 1639 "e:\\cudatoolkit\\include\\math_functions.hpp"



static inline int __isnan(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;

  return cvt.l << 1 > 0xffe0000000000000ull;
}

#line 1655 "e:\\cudatoolkit\\include\\math_functions.hpp"









static inline double exp10(double a)
{
  return pow(10.0, a);
}

static inline float exp10f(float a)
{
    return (float)exp10((double)a);
}

static inline void sincos(double a, double *sptr, double *cptr)
{
  *sptr = sin(a);
  *cptr = cos(a);
}

static inline void sincosf(float a, float *sptr, float *cptr)
{
  double s, c;

  sincos((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

static inline int __isinf(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;

  return cvt.l << 1 == 0xffe0000000000000ull;
}

#line 1702 "e:\\cudatoolkit\\include\\math_functions.hpp"








#line 1711 "e:\\cudatoolkit\\include\\math_functions.hpp"

#line 1713 "e:\\cudatoolkit\\include\\math_functions.hpp"









static inline int __signbit(double a)
{
  volatile union {
    double               d;
    signed long long int l;
  } cvt;

  cvt.d = a;
  return cvt.l < 0ll;
}














#line 1747 "e:\\cudatoolkit\\include\\math_functions.hpp"

static inline int __finite(double a)
{
  volatile union {
    double                 d;
    unsigned long long int l;
  } cvt;

  cvt.d = a;
  return cvt.l << 1 < 0xffe0000000000000ull;
}








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 3111 "e:\\cudatoolkit\\include\\math_functions.hpp"








static inline int __signbitl(long double a)
{
  return __signbit((double)a);
}

static inline int __signbitf(float a)
{
  return __signbit((double)a);
}

static inline int __finitel(long double a)
{
  return __finite((double)a);
}

static inline int __finitef(float a)
{
  return __finite((double)a);
}

static inline int __isinfl(long double a)
{
  return __isinf((double)a);
}

static inline int __isinff(float a)
{
  return __isinf((double)a);
}

static inline int __isnanl(long double a)
{
  return __isnan((double)a);
}

static inline int __isnanf(float a)
{
  return __isnan((double)a);
}























































































































































#line 3310 "e:\\cudatoolkit\\include\\math_functions.hpp"


























































#line 3369 "e:\\cudatoolkit\\include\\math_functions.hpp"

#line 3371 "e:\\cudatoolkit\\include\\math_functions.hpp"







static inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

static inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  } 
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));                
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;


#line 3399 "e:\\cudatoolkit\\include\\math_functions.hpp"
  if (__signbit(a))
#line 3401 "e:\\cudatoolkit\\include\\math_functions.hpp"
  {
    t = -t;
  }
  return t;
}

static inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  } 
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

static inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  } 
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

static inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

static inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;                    
    if (fa == 1.0) {
      t = a * exp(1000.0);        
    }
  } else if (fa >= 0.9375) {
    



    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p =         2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q =     t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {
    



    t = a * a - .87890625;
    p =         .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q =     t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {
    



    t = a * a - .5625;
    p =       - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q =     t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

static inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;                        
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);  
    }
  } 
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {
    



    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p =         2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q =     t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {
    



    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p =         6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q =     t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

static inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

static inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 =  2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

static inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a); 
  if (x < 32.0) {
    








  
     
     
    t1 = x - 4.0; 
    t2 = x + 4.0; 
    t2 = t1 / t2;
       
    t1 =         - 3.5602694826817400E-010; 
    t1 = t1 * t2 - 9.7239122591447274E-009; 
    t1 = t1 * t2 - 8.9350224851649119E-009; 
    t1 = t1 * t2 + 1.0404430921625484E-007; 
    t1 = t1 * t2 + 5.8806698585341259E-008; 
    t1 = t1 * t2 - 8.2147414929116908E-007; 
    t1 = t1 * t2 + 3.0956409853306241E-007; 
    t1 = t1 * t2 + 5.7087871844325649E-006; 
    t1 = t1 * t2 - 1.1231787437600085E-005; 
    t1 = t1 * t2 - 2.4399558857200190E-005; 
    t1 = t1 * t2 + 1.5062557169571788E-004; 
    t1 = t1 * t2 - 1.9925637684786154E-004; 
    t1 = t1 * t2 - 7.5777429182785833E-004; 
    t1 = t1 * t2 + 5.0319698792599572E-003; 
    t1 = t1 * t2 - 1.6197733895953217E-002; 
    t1 = t1 * t2 + 3.7167515553018733E-002; 
    t1 = t1 * t2 - 6.6330365827532434E-002; 
    t1 = t1 * t2 + 9.3732834997115544E-002; 
    t1 = t1 * t2 - 1.0103906603555676E-001; 
    t1 = t1 * t2 + 6.8097054254735140E-002; 
    t1 = t1 * t2 + 1.5379652102605428E-002; 
    t1 = t1 * t2 - 1.3962111684056291E-001; 
    t1 = t1 * t2 + 1.2329951186255526E+000; 
      
    t2 = 2.0 * x + 1.0; 
    t1 = t1 / t2;
  } else {
    
    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 =         -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {
    
    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

static inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

static inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

static inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

static inline float cospif(float a)
{
  return (float)cospi((double)a);
}

static inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

static inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

static inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

static inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

static inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

static inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}



#pragma warning(default: 4211)

#line 3809 "e:\\cudatoolkit\\include\\math_functions.hpp"

#line 3811 "e:\\cudatoolkit\\include\\math_functions.hpp"

#line 3813 "e:\\cudatoolkit\\include\\math_functions.hpp"

#line 3815 "e:\\cudatoolkit\\include\\math_functions.hpp"


#line 10211 "e:\\cudatoolkit\\include\\math_functions.h"

#line 10213 "e:\\cudatoolkit\\include\\math_functions.h"

#line 1 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.h"






















































#line 56 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.h"

#line 58 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.h"

#line 60 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.h"













































































































































































































#line 266 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.h"




#line 1 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.hpp"






















































#line 56 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.hpp"

#line 58 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.hpp"

#line 60 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.hpp"











































































































































































































































































































































































































































































































#line 552 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.hpp"



#line 556 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.hpp"

#line 271 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.h"
#line 272 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.h"

#line 274 "e:\\cudatoolkit\\include\\math_functions_dbl_ptx3.h"
#line 10215 "e:\\cudatoolkit\\include\\math_functions.h"

#line 10217 "e:\\cudatoolkit\\include\\math_functions.h"

#line 225 "E:/CudaToolKit/include\\common_functions.h"

#line 227 "E:/CudaToolKit/include\\common_functions.h"

#line 247 "E:/CudaToolKit/include\\crt/host_runtime.h"





#line 253 "E:/CudaToolKit/include\\crt/host_runtime.h"

#pragma pack()



#pragma warning(disable: 4099)



#pragma warning(disable: 4408)

#line 265 "E:/CudaToolKit/include\\crt/host_runtime.h"

#line 267 "E:/CudaToolKit/include\\crt/host_runtime.h"

#line 269 "E:/CudaToolKit/include\\crt/host_runtime.h"

#line 271 "E:/CudaToolKit/include\\crt/host_runtime.h"
#line 4 "e:\\github\\whippletree\\examples\\queuing\\build\\cmakefiles\\queuing.dir\\__\\__\\delay.compute_35.cudafe1.stub.c"
#line 1 "e:\\github\\whippletree\\examples\\queuing\\build\\cmakefiles\\queuing.dir\\__\\__\\delay.fatbin.c"
#line 1 "E:/CudaToolKit/include\\fatBinaryCtl.h"
































#line 1 "e:\\cudatoolkit\\include\\fatbinary.h"
















































typedef struct fatBinaryHeader *computeFatBinaryFormat_t;




#line 55 "e:\\cudatoolkit\\include\\fatbinary.h"



#line 59 "e:\\cudatoolkit\\include\\fatbinary.h"



















struct __declspec(align(8)) fatBinaryHeader
{
  unsigned int           magic;
  unsigned short         version;
  unsigned short         headerSize;
  unsigned long long int fatSize;
};


typedef enum {
  FATBIN_KIND_PTX      = 0x0001,
  FATBIN_KIND_ELF      = 0x0002,
  FATBIN_KIND_OLDCUBIN = 0x0004,
} fatBinaryCodeKind;

#line 94 "e:\\cudatoolkit\\include\\fatbinary.h"
#line 34 "E:/CudaToolKit/include\\fatBinaryCtl.h"






typedef enum {
  FBCTL_ERROR_NONE = 0,
  FBCTL_ERROR_NULL,           
  FBCTL_ERROR_UNRECOGNIZED,   
  FBCTL_ERROR_NO_CANDIDATE,   
  FBCTL_ERROR_COMPILE_FAILED, 
  FBCTL_ERROR_INTERNAL        
} fatBinaryCtlError_t;
extern char* fatBinaryCtl_Errmsg (fatBinaryCtlError_t e);

extern fatBinaryCtlError_t fatBinaryCtl_Create (void* *data);

extern void fatBinaryCtl_Delete (void* data);


extern fatBinaryCtlError_t fatBinaryCtl (void* data, int request, ...);














typedef enum {
  fatBinary_PreferBestCode,  
  fatBinary_AvoidPTX,        
  fatBinary_ForcePTX,        
  fatBinary_JITIfNotMatch    
} fatBinary_CompilationPolicy;





extern fatBinaryCtlError_t fatBinaryCtl_PickCandidate (void* data);







extern fatBinaryCtlError_t fatBinaryCtl_Compile (void* data, 
                                                 void* *elf, size_t *esize);








typedef struct {
  int magic;
  int version;
  const unsigned long long* data;
  void *filename_or_fatbins;  

} __fatBinC_Wrapper_t;

















#line 124 "E:/CudaToolKit/include\\fatBinaryCtl.h"



#line 128 "E:/CudaToolKit/include\\fatBinaryCtl.h"
#line 2 "e:\\github\\whippletree\\examples\\queuing\\build\\cmakefiles\\queuing.dir\\__\\__\\delay.fatbin.c"



extern "C" {
#line 7 "e:\\github\\whippletree\\examples\\queuing\\build\\cmakefiles\\queuing.dir\\__\\__\\delay.fatbin.c"

#pragma data_seg("__nv_relfatbin")
static const __declspec(allocate("__nv_relfatbin")) unsigned long long fatbinData[]= {
0x00100001ba55ed50,0x00000000000008f8,0x0000006001010002,0x0000000000000648,
0x0000000000000641,0x0000002300010007,0x0000001e00000040,0x0000000000002044,
0x0000000000000000,0x0000000000001638,0x75687469672f3a45,0x6c70706968772f62,
0x65642f6565727465,0x000075632e79616c,0x010101464c457fa2,0x0001660001000733,
0x11f50001004b00be,0x0023012300001340,0x0028000000200034,0x68732e0000010013,
0x2e00626174727473,0xf700086d79270008,0x0078646e68735f14,0x6f666e692e766e2e,
0x632e747865742e00,0x6544746547616475,0x02f7001465636976,0x41746547636e7546,
0x6574756269727474,0x63634f22f8001c73,0x614d79636e617075,0x4265766974634178,
0x726550736b636f6c,0x6f727069746c754d,0x6957726f73736563,0x003d67616c466874,
0x1d07005b08006a02,0x636f6c6c614d6f00,0x676000d80121006b,0xff000b6c61626f6c,
0x5f67756265645f06,0x7361735f656e696c,0x00186c65722e0073,0x0800240200110602,
0x7002f10030050010,0x382e7478745f7874,0x3334343938343433,0x676c6c616391006f,
0x709f000e68706172,0x657079746f746f72,0x060501860f20018c,0x1c0e0d01940f0014,
0x003d0f2e01aa0f00,0x001d0f0e01e10f20,0x0011030201f80f00,0x2d02370f1a02030f,
0x61746144676942a1,0x2300250001692300,0x0f00112300250007,0x321300010e6f025d,
0x2200000080970008,0x0359001c40000c00,0x0d39002054000c00,0x86000d3900206a00,
0x0020bd000e390020,0x0f480020fa000e39,0x000f480020011100,0x390010390020012e,
0x00204a0010390020,0x1139002078001139,0xdd0012390010ac00,0x1002090004480010,
0x3900102500053900,0x0008390010410006,0x50b700093500104f,0x0012201d0040d000,
0x5a2f0002000000b0,0x01000a0efb019105,0x01940f0567010101,0x005a051100010109,
0x00c70310020104a0,0x0015080042f00201,0x29ea1f000014291f,0x1f000014391f0100,
0x003dd8140000141a,0x00b4721d00b4f611,0x7469672f3a450bf0,0x706968772f627568,
0x0065657274656c70,0x14f003085c5c3a65,0x5c74696b6c6f6f74,0x6564756c636e695c,
0x79616c656400005c,0xca92d9010075632e,0x645f2100273105b6,0x6e75725f08f50397,
0x6970615f656d6974,0xaebf92bc0200682e,0x02025c00f76e8605,0x00150000ced00310,
0x15da1f010015c61f,0x1f010015cb1f0100,0x0015d515010015c1,0x65762e1cf1000103,
0x2e34206e6f697372,0x65677261742e0033,0x0035335f6d732074,0x737365726464612e,
0x323320657a69735f,0x6c6269736973002e,0x612e20e303de2065,0x2e2034206e67696c,
0x5b17f003eb203862,0x5d34303334393134,0x6b6165772e00003b,0x2020636e75662e20,
0x206d617261702e28,0xa60013203233622e,0x306c61767465725f,0x26002828049e2029,
0x00165f1100180600,0x500b00202c305f3f,0x1204177b00290031,0x72250900f2002167,
0x6d0000003b3e323c,0x31920012752e766f,0x7473003b3033202c,0x5b0928002900004b,
0x2c5d302b03ff0091,0x7200003b31722520,0x00cb007d003b7465,0x0d00d60e06380d1b,
0x002b0f00e10e0023,0x067d0e7a00ec0f06,0xee0e00240e00ed0e,0x2c311f0e002c0f00,
0x0572011b321f1800,0x001b0501120e0869,0x0f7200b10f010904,0x3b0f00d10e1607e2,
0x00430f01fa0e1600,0x321f2f0043311f25,0x9b01ba331f2f0043,0x052801c30f0a5705,
0x004c0f01cc0e0044,0x321f38004c311f2e,0x38004c331f38004c,0x230453450233341f,
0x11042707da0b0008,0x180900082347000c,0x1807170018091700,0x1805170018071700,
0x1803170018051700,0x1801170018031700,0xffff00500a6b0700,0x0008fe130008ffff,
0x310020fffffffd40,0x01d83100400001ce,0x800001bf31006000,0x1809000001d25300,
0x0001c75000c00000,0x00000b400995a200,0x7a0000094000088e,0x0bb9000007300008,
0x0008510000050150,0x08dc003c00000352,0x0030d3130030e813,0x0030a9130030be13,
0x00307f1300309413,0xb8a004f01100010f,0xc012080080808080,0x003c740000000f1f,
0x083c02193000171c,0x8e0d000885802f00,0x12007ffffc1c003c,0x800f1300080f0030,
0x0001001f6fffff00,0x00100317034f0014,0x20018c000000346a,0x00280b1b00010000,
0x28025d000001c06e,0x0001060da4131100,0x1401400000042062,0x0000a90470121000,
0x00010c0000001000,0xb4000005606e0478,0x5f0028381b005000,0x000028fa00000614,
0x00070e6e0028541b,0x072912002807d500,0x0ee4570018701400,0x08041300dc900000,
0x0028050050701200,0x00281800000f745b,0x00dc7e0000000852,0x00000f8c5f002805,
0x0528201300002830,0x170028bc1700a004,0x170028441b002804,0x13002805170028ec,
0x220028061300d432,0x00180312105c1040,0x0028461b11000514,0x000003440028c017,
0x160050621c002806,0x0900000544002811,0x280700509f1c0028,0x0028070000074400,
0x002812160050bc1c,0x0050cd1c00780917,0x0800000b44002807,0x58081705f8000028,
0x11e6001716000001,0x0000000000000480,0x0000000000000000,0x0000006001010002,
0x00000000000001f0,0x00000000000001ec,0x0000001400010007,0x0000001e00000040,
0x0000000000002044,0x0000000000000000,0x00000000000003cc,0x75687469672f3a45,
0x6c70706968772f62,0x65642f6565727465,0x000075632e79616c,0x010101464c457fa2,
0x0001660001000733,0x11f50001004b00be,0x0014011400000264,0x0028000000200034,
0x68732e0000010009,0x2e00626174727473,0xf100086d79270008,0x0078646e68735f00,
0x6f666e692e766e2e,0x61626f6c67610009,0x6e6f6300fc000b6c,0x003431746e617473,
0x01f200136c65722e,0x67756265645f766e,0x7478745f7874705f,0x72676c6c61810034,
0x72709f000e687061,0x8d657079746f746f,0x61446769427c2b00,0x4441249500956174,
0x0020245353455244,0x1700010c2e00a60f,0x0008000359000c32,0x1078000739001045,
0x3500108a00043900,0x004073000e3d0005,0x75000e540008201d,0x1e07811d00000004,
0x737265762e1cf000,0x00332e34206e6f69,0x207465677261742e,0x612e0030325f6d73,
0x735f737365726464,0x002d323320657a69,0x20656c6269736973,0x696c612e20e30120,
0x38622e2034206e67,0x3931345ba4010d20,0x00643b5d34303334,0x130008ffffffff40,
0x3f0008fd130008fe,0x01111a0001000501,0x00345b00010600dc,0x00010000208d0000,
0x0000c15f00280b1b,0x001357000028a600,0x0168530018020000,0x0404130014700000,
0x345f000000105700,0x0001d85f00010000,0x0c71120000506500,0x000247017a701500,
0x97005000008c1800,0x0000004c00000008,0x0018025822004009,0x1300280717002800,
0x602200a404005c3d,0x0400500017001c02,0x642200680817022c,0x005000280701f802,
0x0000000000000000
};
#pragma data_seg()


}
#line 89 "e:\\github\\whippletree\\examples\\queuing\\build\\cmakefiles\\queuing.dir\\__\\__\\delay.fatbin.c"


extern "C" {
#line 93 "e:\\github\\whippletree\\examples\\queuing\\build\\cmakefiles\\queuing.dir\\__\\__\\delay.fatbin.c"
#pragma data_seg(".nvFatBinSegment")




__declspec(allocate(".nvFatBinSegment")) __declspec(align(8)) extern const __fatBinC_Wrapper_t __fatbinwrap_24_delay_compute_20_cpp1_ii_8c685ecf= 
	{ 0x466243b1, 1, fatbinData, 0 };
#pragma data_seg()

}
#line 104 "e:\\github\\whippletree\\examples\\queuing\\build\\cmakefiles\\queuing.dir\\__\\__\\delay.fatbin.c"
#line 5 "e:\\github\\whippletree\\examples\\queuing\\build\\cmakefiles\\queuing.dir\\__\\__\\delay.compute_35.cudafe1.stub.c"
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll_24_delay_compute_20_cpp1_ii_8c685ecf(void);
#pragma section(".CRT$XCU",read,write)
__declspec(allocate(".CRT$XCU"))static void (*__dummy_static_init__sti____cudaRegisterAll_24_delay_compute_20_cpp1_ii_8c685ecf[])(void) = {__sti____cudaRegisterAll_24_delay_compute_20_cpp1_ii_8c685ecf};
static void __nv_cudaEntityRegisterCallback(void **__T20){{ volatile static void **__ref; __ref = (volatile void **)__T20; };__nv_save_fatbinhandle_for_managed_rt(__T20);__cudaRegisterVar(__T20, (char*)&::BigData, (char*)"BigData", "BigData", 0, 4194304, 0, 0);}
static void __sti____cudaRegisterAll_24_delay_compute_20_cpp1_ii_8c685ecf(void){{ __cudaRegisterLinkedBinary_24_delay_compute_20_cpp1_ii_8c685ecf (( void (*)(void **))(__nv_cudaEntityRegisterCallback), (void *)&__fatbinwrap_24_delay_compute_20_cpp1_ii_8c685ecf, (void *)&__module_id_str, (void (*)(void *))&____nv_dummy_param_ref); };}
#line 2 "e:\\github\\whippletree\\examples\\queuing\\build\\cmakefiles\\queuing.dir\\__\\__\\delay.compute_35.cudafe1.stub.c"
#line 1 "e:\\github\\whippletree\\examples\\queuing\\build\\cmakefiles\\queuing.dir\\__\\__\\delay.compute_35.cudafe1.stub.c"


